<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="system">
	<select id="selectAgentInfo" parameterType="AgentInfoVO" resultType="AgentInfoVO">
		<![CDATA[
		/**
	 	* Query ID : selectAgentInfo
	 	* Description : Agent 설치정보 조회
	 	* Author : 박태혁
	 	**/
			SELECT
				AGT_SN
				, IPADR
				, DOMAIN_NM
				, SOCKET_PORT
				, AGT_CNDT_CD
				, STRT_DTM
				, ISTCNF_YN
				, AGT_VERSION
				, FRST_REGR_ID
				, FRST_REG_DTM
				, LST_MDFR_ID
				, LST_MDF_DTM
				, SVR_USE_YN
			FROM  T_PRY_AGT_I
			WHERE
				IPADR = #{ipadr}
			LIMIT 1
		]]>
	</select>
	
	<insert id="insertAgentInfo"  parameterType="AgentInfoVO">
		/**
	 	* Query ID : insertAgentInfo
	 	* Description : Agent 설치 등록
	 	* Author : 박태혁
	 	**/
	 	INSERT INTO T_PRY_AGT_I
	 	(
			AGT_SN
			, IPADR
			, SOCKET_PORT
			, AGT_CNDT_CD
			, AGT_VERSION
			, STRT_DTM
			, ISTCNF_YN
			, SVR_USE_YN
			, DOMAIN_NM
			, FRST_REGR_ID
			, FRST_REG_DTM
			, LST_MDFR_ID
			, LST_MDF_DTM
	 	)
	 	VALUES
	 	(
			NEXTVAL('q_t_pry_agt_i_01')
			, #{ipadr}
			, #{socket_port}::numeric
			, #{agt_cndt_cd}
			, #{agt_version}
			, now()
			, #{istcnf_yn}
			, #{svr_use_yn}::bpchar
			, #{domain_nm}
			, #{frst_regr_id}
			, clock_timestamp()
			, #{lst_mdfr_id}
			, clock_timestamp()
	 	)
	</insert>

	<update id="updateAgentInfo"  parameterType="AgentInfoVO">
	
		/**
	 	* Query ID : updateAgentInfo
	 	* Description : Agent 설치 정보 수정
	 	* Author : 박태혁
	 	**/
	 	UPDATE T_PRY_AGT_I
	 	SET 
	 		AGT_CNDT_CD = #{agt_cndt_cd}
	 		, AGT_VERSION = #{agt_version}
	 		, SOCKET_PORT = #{socket_port}::numeric
	 		, ISTCNF_YN = #{istcnf_yn}
			, SVR_USE_YN = #{svr_use_yn}::bpchar
			, DOMAIN_NM = #{domain_nm}
	 		, LST_MDF_DTM = clock_timestamp()
	 	WHERE
	 		IPADR = #{ipadr}
	</update>
	
	<update id="updateAgentEndInfo"  parameterType="AgentInfoVO">
	
		/**
	 	* Query ID : updateAgentEndInfo
	 	* Description : Agent 설치 정보 변경(agent 종료)
	 	* Author : 박태혁
	 	**/
	 	UPDATE T_PRY_AGT_I
	 	SET 
	 		AGT_CNDT_CD = #{agt_cndt_cd}
	 		, AGT_VERSION = #{agt_version}
	 		, SOCKET_PORT = #{socket_port}
	 		, ISTCNF_YN = #{istcnf_yn}
	 		, LST_MDF_DTM = clock_timestamp()
	 		, STRT_DTM = clock_timestamp()
	 	WHERE
	 		IPADR = #{ipadr}
	</update>
	
	<select id="selectProxyServerInfo" parameterType="ProxyServerVO" resultType="ProxyServerVO">
		<![CDATA[
		/**
	 	* Query ID : selectProxyServerInfo
	 	* Description : Proxy 서버정보 조회
	 	* Author : 박태혁
	 	**/
			SELECT
				PRY_SVR_ID,
				IPADR,
				AGT_SN,
				PRY_SVR_NM,
				PRY_PTH,
				KAL_PTH,
				USE_YN,
				EXE_STATUS,
				KAL_EXE_STATUS,
				MASTER_GBN,
				MASTER_SVR_ID,
				DB_SVR_ID,
				DAY_DATA_DEL_TERM,
				MIN_DATA_DEL_TERM,
				FRST_REGR_ID,
				FRST_REG_DTM,
				LST_MDFR_ID,
				LST_MDF_DTM
			FROM  T_PRY_SVR_I
			WHERE
				IPADR = #{ipadr}
			LIMIT 1
		]]>
	</select>
	
    <select id="selectDatabaseMasterConnInfo" parameterType="DbServerInfoVO" resultType="DbServerInfoVO">
		<![CDATA[
   		/**
	 	* Query ID : selectDatabaseMasterConnInfo
	 	* Description : Database 접속정보 조회
	 	* Author : 박태혁
	 	**/
			SELECT 
				A.IPADR
				, A.DB_SVR_ID
				, A.PORTNO
				, B.DB_SVR_NM
				, B.DFT_DB_NM
				, B.SVR_SPR_USR_ID
				, B.SVR_SPR_SCM_PWD
				, A.MASTER_GBN
			FROM T_DBSVRIPADR_I A, T_DBSVR_I B
			WHERE
				A.DB_SVR_ID = B.DB_SVR_ID
				AND B.USEYN = 'Y'
				AND A.MASTER_GBN = 'M'
		]]>
	</select>
	
	<select id="selectQ_T_PRY_SVR_I_01" resultType="long">
   		/**
	 	* Query ID : select Q_T_PRY_SVR_I_01
	 	* Description : T_PRY_SVR_I 테이블 SEQ
	 	* Author :
	 	**/
    	SELECT NEXTVAL('Q_T_PRY_SVR_I_01')
    </select>

    <insert id="insertT_PRY_SVR_I"  parameterType="ProxyServerVO">
    	/**
	 	* Query ID : insertT_PRY_SVR_I
	 	* Description : proxy 서버 등록
	 	* Author : 
	 	**/
		 INSERT INTO T_PRY_SVR_I
	 	(
			PRY_SVR_ID
			, IPADR
			, AGT_SN
			, PRY_SVR_NM
			, PRY_PTH
			, KAL_PTH
			, USE_YN
			, EXE_STATUS
			, KAL_EXE_STATUS
			, MASTER_GBN
			, MASTER_SVR_ID
			, DB_SVR_ID
			, DAY_DATA_DEL_TERM
			, MIN_DATA_DEL_TERM
			, FRST_REGR_ID
			, FRST_REG_DTM
			, LST_MDFR_ID
			, LST_MDF_DTM
		)
		SELECT
			#{pry_svr_id}::numeric
			, #{ipadr}
			, (SELECT AGT_SN FROM  T_PRY_AGT_I WHERE IPADR = #{ipadr} LIMIT 1)
			, #{pry_svr_nm}
			, #{pry_pth}
			, #{kal_pth}
			, #{use_yn}::bpchar
			, #{exe_status}::character varying
			, #{kal_exe_status}::character varying
			, #{master_gbn}
			, #{master_svr_id_chk}::numeric
			, #{db_svr_id}::numeric
			, #{day_data_del_term}::numeric
			, #{min_data_del_term}::numeric
			, #{frst_regr_id}
			, clock_timestamp()
			, #{lst_mdfr_id}
			, clock_timestamp()
    </insert>
	
    <update id="updateT_PRY_SVR_I"  parameterType="ProxyServerVO">
   		/**
	 	* Query ID : updateT_PRY_SVR_I
	 	* Description : proxy 서버 수정
	 	* Author : 
	 	**/
		UPDATE T_PRY_SVR_I
		SET
			AGT_SN = #{agt_sn}::numeric
		    , PRY_SVR_NM = #{pry_svr_nm}
			, PRY_PTH = #{pry_pth}
			, KAL_PTH = #{kal_pth}
			, USE_YN = #{use_yn}::bpchar
			, EXE_STATUS = #{exe_status}::character varying
			, KAL_EXE_STATUS = #{kal_exe_status}::character varying
			, MASTER_GBN = #{master_gbn}
			, MASTER_SVR_ID = #{master_svr_id_chk}::numeric
			, DB_SVR_ID = #{db_svr_id}::numeric
			, DAY_DATA_DEL_TERM = #{day_data_del_term}::numeric
			, MIN_DATA_DEL_TERM = #{min_data_del_term}::numeric
			, LST_MDFR_ID = #{lst_mdfr_id}
			, LST_MDF_DTM = clock_timestamp()
		WHERE
			IPADR = #{ipadr}
    </update>
    
	<select id="selectMaxAgentInfo" parameterType="ProxyServerVO" resultType="ProxyServerVO">
		<![CDATA[
		/**
	 	* Query ID : selectAgentInfo
	 	* Description : Agent 설치정보 조회
	 	* Author : 박태혁
	 	**/
			SELECT MAX(A.PRY_SVR_NM) AS PRY_SVR_NM
			 FROM (
				SELECT
					PRY_SVR_NM
				  FROM T_PRY_SVR_I
				 WHERE IPADR = #{ipadr}
				 UNION ALL 
				SELECT
					PRY_SVR_NM
				  FROM T_PRY_SVR_I
				 WHERE MASTER_SVR_ID = (SELECT
								PRY_SVR_ID
							  FROM T_PRY_SVR_I
							 WHERE IPADR = #{ipadr})
			) A
		]]>
	</select>

	<update id="updateT_PRY_AGT_I_Yn"  parameterType="AgentInfoVO">
	
		/**
	 	* Query ID : updateAgentInfo
	 	* Description : Agent 설치 정보 수정
	 	* Author : 박태혁
	 	**/
	 	UPDATE T_PRY_AGT_I
	 	SET 
	 		SVR_USE_YN = #{svr_use_yn}
			, LST_MDFR_ID = #{lst_mdfr_id}
			, LST_MDF_DTM = clock_timestamp()
	 	WHERE
	 		IPADR = #{ipadr}
	</update>
			
	<insert id="insertPryGlbI"  parameterType="hashmap">
        /**
        * Query ID : insertPryGlbI
        * Description : PROXY GLOBAL 테이블
        * Author : 
        **/
        WITH UPSERT AS(
               UPDATE T_PRY_GLB_I
                  SET MAX_CON_CNT = #{max_con_cnt}::numeric,
                      CL_CON_MAX_TM = #{cl_con_max_tm},
                      CON_DEL_TM = #{con_del_tm},
                      SVR_CON_MAX_TM = #{svr_con_max_tm},
                      CHK_TM = #{chk_tm},
                      IF_NM = #{if_nm},
                      OBJ_IP = #{obj_ip},
                      PEER_SERVER_IP = #{peer_server_ip},
                      LST_MDFR_ID = #{lst_mdfr_id},
                      LST_MDF_DTM = clock_timestamp()
                WHERE PRY_SVR_ID  = #{pry_svr_id}::numeric
                RETURNING *
                      )
        INSERT
              INTO T_PRY_GLB_I (
                        PRY_GLB_ID,
                        PRY_SVR_ID,
                        MAX_CON_CNT,
                        CL_CON_MAX_TM,
                        CON_DEL_TM,
                        SVR_CON_MAX_TM,
                        CHK_TM,
                        IF_NM,
                        OBJ_IP,
                        PEER_SERVER_IP,
                        FRST_REGR_ID,
                        FRST_REG_DTM,
                        LST_MDFR_ID,
                        LST_MDF_DTM
                       )
                       SELECT nextval('q_t_pry_glb_i_01'),
                              #{pry_svr_id}::numeric,
                              #{max_con_cnt}::numeric,
                              #{cl_con_max_tm},
                              #{con_del_tm},
                              #{svr_con_max_tm},
                              #{chk_tm},
                              #{if_nm},
                              #{obj_ip},
                              #{peer_server_ip},
                              #{frst_regr_id},
                              clock_timestamp(),
                              #{lst_mdfr_id},
                              clock_timestamp()
         WHERE NOT EXISTS ( SELECT * FROM UPSERT )
	</insert>
		
	<select id="selectProxyLisnerInfo" parameterType="ProxyListenerVO" resultType="ProxyListenerVO">
		<![CDATA[
		/**
	 	* Query ID : selectProxyLisnerInfo
	 	* Description : Proxy Lisner 조회
	 	* Author : 
	 	**/
			SELECT
				LSN_ID
				, PRY_SVR_ID
				, LSN_NM
				, CON_BIND_PORT
				, LSN_DESC
				, DB_USR_ID
				, DB_ID
				, DB_NM
				, CON_SIM_QUERY
				, FIELD_VAL
				, FIELD_NM
				, FRST_REGR_ID
				, FRST_REG_DTM
				, LST_MDFR_ID
				, LST_MDF_DTM
			FROM  T_PRY_LSN_I
			WHERE
				PRY_SVR_ID = #{pry_svr_id}::numeric
			AND LSN_NM = #{lsn_nm}
			LIMIT 1
		]]>
	</select>
		
	<select id="selectQ_T_PRY_LSN_I_01_SEQ" resultType="long">
   		/**
	 	* Query ID : select Q_T_PRY_LSN_I_01
	 	* Description : Q_T_PRY_LSN_I_01 테이블 SEQ
	 	* Author :
	 	**/
    	SELECT NEXTVAL('Q_T_PRY_LSN_I_01')
    </select>
		
    <insert id="insertT_PRY_LSN_I"  parameterType="ProxyListenerVO">
    	/**
	 	* Query ID : insertT_PRY_LSN_I
	 	* Description : proxy 리스너 등록
	 	* Author : 
	 	**/
		 INSERT INTO T_PRY_LSN_I
	 	(
			LSN_ID
			, PRY_SVR_ID
			, LSN_NM
			, CON_BIND_PORT
			, LSN_DESC
			, DB_USR_ID
			, DB_ID
			, DB_NM
			, CON_SIM_QUERY
			, FIELD_VAL
			, FIELD_NM
			, FRST_REGR_ID
			, FRST_REG_DTM
			, LST_MDFR_ID
			, LST_MDF_DTM
		)
		SELECT
			#{lsn_id}::numeric
			, #{pry_svr_id}::numeric
			, #{lsn_nm}
			, #{con_bind_port}
			, #{lsn_desc}
			, #{db_usr_id}
			, (SELECT DB_ID FROM T_DB_I WHERE USEYN='Y' AND DB_SVR_ID = #{db_svr_id}::numeric AND DB_NM = #{db_nm})
			, #{db_nm}
			, #{con_sim_query}
			, #{field_val}
			, #{field_nm}
			, #{frst_regr_id}
			, clock_timestamp()
			, #{lst_mdfr_id}
			, clock_timestamp()
    </insert>
		
	<update id="updateT_PRY_LSN_I"  parameterType="ProxyListenerVO">
		/**
	 	* Query ID : updateT_PRY_LSN_I
	 	* Description : proxy 리스너 수정
	 	* Author : 
	 	**/
	 	UPDATE T_PRY_LSN_I
	 	SET 
			LSN_NM = #{lsn_nm}
			, CON_BIND_PORT = #{con_bind_port}
			, LSN_DESC = #{lsn_desc}
			, DB_USR_ID = #{db_usr_id}
			, DB_ID = (SELECT DB_ID FROM T_DB_I WHERE USEYN='Y' AND DB_SVR_ID = #{db_svr_id}::numeric AND DB_NM = #{db_nm})
			, DB_NM = #{db_nm}
			, CON_SIM_QUERY = #{con_sim_query}
			, FIELD_VAL = #{field_val}
			, FIELD_NM = #{field_nm}
			, LST_MDFR_ID = #{lst_mdfr_id}
			, LST_MDF_DTM = clock_timestamp()
	 	WHERE
	 		LSN_ID = #{lsn_id}::numeric
	 	AND PRY_SVR_ID = #{pry_svr_id}::numeric
	</update>
		
	<delete id="deleteProxyLisnerSebuInfo" parameterType="ProxyListenerServerListVO" >
		<![CDATA[
		/**
	 	* Query ID : deleteProxyLisnerSebuInfo
	 	* Description : Proxy Lisner Server list 삭제
	 	* Author : 
	 	**/
			DELETE FROM  T_PRY_LSN_SVR_I
			WHERE
				PRY_SVR_ID = #{pry_svr_id}::numeric
			AND DB_CON_ADDR = #{db_con_addr}
			AND LSN_ID = (SELECT LSN_ID 
			                FROM T_PRY_LSN_I
			               WHERE PRY_SVR_ID = #{pry_svr_id}::numeric
			                 AND LSN_NM = #{lsn_nm}
			               LIMIT 1
			              )
		]]>
	</delete>
	
   <insert id="insertProxyListnerSebu"  parameterType="ProxyListenerServerListVO">
    	/**
	 	* Query ID : insertProxyListnerSebu
	 	* Description : proxy 리스너 서버 등록
	 	* Author : 
	 	**/
		 INSERT INTO T_PRY_LSN_SVR_I
	 	(
			PRY_SVR_ID
			, LSN_SVR_ID
			, LSN_ID
			, DB_CON_ADDR
			, CHK_PORTNO
			, BACKUP_YN
			, FRST_REGR_ID
			, FRST_REG_DTM
			, LST_MDFR_ID
			, LST_MDF_DTM
		)
		SELECT
			#{pry_svr_id}::numeric
			, NEXTVAL('Q_T_PRY_LSN_SVR_I_01')
			, (SELECT LSN_ID 
			     FROM T_PRY_LSN_I
			    WHERE PRY_SVR_ID = #{pry_svr_id}::numeric
			      AND LSN_NM = #{lsn_nm}
			    LIMIT 1
			  )::numeric
			, #{db_con_addr}
			, #{chk_portno_val}::numeric
			, #{backup_yn}::bpchar
			, #{frst_regr_id}
			, clock_timestamp()
			, #{lst_mdfr_id}
			, clock_timestamp()
    </insert>
			
	<insert id="insertPryvVipCngI"  parameterType="hashmap">
        /**
        * Query ID : insertPryvVipCngI
        * Description : PROXY VIPCNG 테이블
        * Author : 
        **/
        WITH UPSERT AS(
               UPDATE T_PRY_VIPCNG_I
                  SET V_IP = #{v_ip},
                      V_ROT_ID = #{v_rot_id},
                      V_IF_NM = #{v_if_nm},
                      PRIORITY = #{priority}::numeric,
                      CHK_TM = #{chk_tm}::numeric,
                      LST_MDFR_ID = #{lst_mdfr_id},
                      LST_MDF_DTM = clock_timestamp()
                WHERE PRY_SVR_ID  = #{pry_svr_id}::numeric
                  AND STATE_NM = #{state_nm}
                RETURNING *
                      )
        INSERT
              INTO T_PRY_VIPCNG_I (
                        VIP_CNG_ID,
                        STATE_NM,
                        V_IP,
                        PRY_SVR_ID,
                        V_ROT_ID,
                        V_IF_NM,
                        PRIORITY,
                        CHK_TM,
                        FRST_REGR_ID,
                        FRST_REG_DTM,
                        LST_MDFR_ID,
                        LST_MDF_DTM
                       )
                       SELECT nextval('q_t_pry_vipcng_i_01'),
                              #{state_nm},
                              #{v_ip},
                              #{pry_svr_id}::numeric,
                              #{v_rot_id},
                              #{v_if_nm},
                              #{priority}::numeric,
                              #{chk_tm}::numeric,
                              #{frst_regr_id},
                              clock_timestamp(),
                              #{lst_mdfr_id},
                              clock_timestamp()
         WHERE NOT EXISTS ( SELECT * FROM UPSERT )
	</insert>	
			
	
	
	
	



		
		
		
		
		
		
			
			
			
			
    
	
	
	
	
	

	<select id="selectDbServerInfo" parameterType="DbServerInfoVO" resultType="DbServerInfoVO">
		<![CDATA[
		/**
	 	* Query ID : selectDbServerInfo
	 	* Description : Database Server 조회
	 	* Author : 박태혁
	 	**/
			SELECT
				DB_SVR_ID
				, DB_SVR_NM
				, IPADR
				, PORTNO
				, DFT_DB_NM
				, SVR_SPR_USR_ID
				, SVR_SPR_SCM_PWD
				, FRST_REGR_ID
				, FRST_REG_DTM
				, LST_MDFR_ID
				, LST_MDF_DTM
			FROM  T_DBSVR_I
			WHERE
				IPADR = #{IPADR}
			LIMIT 1
		]]>
	</select>

	<select id="selectQ_WRKEXE_G_01_SEQ" resultType="int">
   		/**
	 	* Query ID : selectQ_WRKEXE_G_01_SEQ
	 	* Description : 작업실행로그 seq 조회
	 	* Author : 박태혁
	 	**/
    	SELECT NEXTVAL('q_wrkexe_g_01')
    </select>
    
    <insert id="insertT_WRKEXE_G"  parameterType="WrkExeVO">
   		/**
	 	* Query ID : insertT_WRKEXE_G
	 	* Description : 작업실행로그 insert
	 	* Author : 박태혁
	 	**/
	 	INSERT INTO T_WRKEXE_G
	 	(
			EXE_SN
			, SCD_ID
			, WRK_ID
			, WRK_STRT_DTM
			, WRK_END_DTM
			, EXE_RSLT_CD
			, BCK_OPT_CD
			, TLI
			, FILE_SZ
			, DB_ID
			, BCK_FILE_PTH
			, FRST_REGR_ID
			, LST_MDFR_ID
			, EXE_GRP_SN
			, SCD_NM
			, WRK_NM
			, DB_SVR_IPADR_ID
	 	)
	 	VALUES
	 	(
			#{EXE_SN}
			, #{SCD_ID}
			, #{WRK_ID}
			, now()
			, now()
			, #{EXE_RSLT_CD}
			, #{BCK_OPT_CD}
			, 0
			, 0
			, #{DB_ID}
			, #{BCK_FILE_PTH}
			, 'system'
			, 'system'
			, #{EXE_GRP_SN}
			, (SELECT SCD_NM FROM T_SCD_M WHERE SCD_ID = #{SCD_ID})
			, (SELECT WRK_NM FROM T_WRKCNG_I WHERE WRK_ID = #{WRK_ID})
			, #{DB_SVR_IPADR_ID}
	 	)
	 	
    </insert>
    
    <update id="updateT_WRKEXE_G"  parameterType="WrkExeVO">
   		/**
	 	* Query ID : updateT_WRKEXE_G
	 	* Description : 작업실행로그 update
	 	* Author : 박태혁
	 	**/
		UPDATE T_WRKEXE_G
		SET
			WRK_END_DTM = now()
			, EXE_RSLT_CD = #{EXE_RSLT_CD}
			, FILE_SZ = #{FILE_SZ}
			, BCK_FILENM = #{BCK_FILENM}
			, RSLT_MSG = #{RSLT_MSG}
		WHERE
			EXE_SN = #{EXE_SN}
				
    </update>
    
    <update id="updateT_TRFTRGCNG_I"  parameterType="TrfTrgCngVO">
   		/**
	 	* Query ID : updateT_TRFTRGCNG_I
	 	* Description : BottledWater 실행 PID update
	 	* Author : 박태혁
	 	**/
	 	UPDATE T_TRFTRGCNG_I
	 	SET
	 		BW_PID = #{BW_PID}
	 	WHERE
	 		TRF_TRG_ID = #{TRF_TRG_ID}
    </update>
    
	<select id="selectQ_WRKEXE_G_02_SEQ" resultType="int">
   		/**
	 	* Query ID : selectQ_WRKEXE_G_02_SEQ
	 	* Description : 작업실행로그 실행그룹 seq 조회
	 	* Author : 박태혁
	 	**/
    	SELECT NEXTVAL('Q_WRKEXE_G_02')
    </select>
    
    <update id="updateSCD_CNDT"  parameterType="WrkExeVO">
   		/**
	 	* Query ID : updateSCD_CNDT
	 	* Description : 작업상태변경
	 	* Author : 박태혁
	 	**/
		UPDATE T_SCD_M
		SET
			SCD_CNDT = #{SCD_CNDT}
			, LST_MDF_DTM = now()
		WHERE
			SCD_ID = #{SCD_ID}
				
    </update>
    
    <select id="selectPostgreSqlServerInfo" resultType="ServerInfoVO">
		<![CDATA[
	   		/**
		 	* Query ID : selectPostgreSqlServerInfo
		 	* Description : PostgreSQL 서버 정보 조회
		 	* Author : 박태혁
		 	**/
			SELECT SKEY, SDATA FROM
			(
				SELECT 1 AS SN, 'POSTGRESQL_VERSION' AS SKEY, version() AS  SDATA
				UNION
				SELECT  2 AS SN, 'DATA_PATH' AS SKEY, setting AS SDATA FROM pg_settings WHERE name='data_directory'
				UNION
				SELECT  3 AS SN, 'LOG_PATH' AS SKEY, setting AS SDATA  FROM pg_settings WHERE name='log_directory'
				UNION
				SELECT  4 AS SN, 'ARCHIVE_PATH' AS SKEY, setting AS SDATA from pg_settings where name='archive_command'
			) A
			ORDER BY A.SN ASC
		]]>
	</select>

    <select id="selectListen_addresses" resultType="String">
		<![CDATA[
			show listen_addresses
		]]>
	</select>
	
    <select id="selectPort" resultType="String">
		<![CDATA[
			show port
		]]>
	</select>
	
    <select id="selectMax_connections" resultType="String">
		<![CDATA[
			show max_connections
		]]>
	</select>
	
    <select id="selectShared_buffers" resultType="String">
		<![CDATA[
			show shared_buffers
		]]>
	</select>

    <select id="selectEffective_cache_size" resultType="String">
		<![CDATA[
			show effective_cache_size
		]]>
	</select>

    <select id="selectWork_mem" resultType="String">
		<![CDATA[
			show work_mem
		]]>
	</select>

    <select id="selectMaintenance_work_mem" resultType="String">
		<![CDATA[
			show maintenance_work_mem
		]]>
	</select>

    <select id="selectMin_wal_size" resultType="String">
		<![CDATA[
			show min_wal_size
		]]>
	</select>

    <select id="selectMax_wal_size" resultType="String">
		<![CDATA[
			show max_wal_size
		]]>
	</select>

    <select id="selectWal_level" resultType="String">
		<![CDATA[
			show wal_level
		]]>
	</select>

    <select id="selectWal_buffers" resultType="String">
		<![CDATA[
			show wal_buffers
		]]>
	</select>

    <select id="selectWal_keep_segments" resultType="String">
		<![CDATA[
			show wal_keep_segments
		]]>
	</select>

    <select id="selectArchive_mode" resultType="String">
		<![CDATA[
			show archive_mode
		]]>
	</select>

    <select id="selectArchive_command" resultType="String">
		<![CDATA[
			show archive_command
		]]>
	</select>

    <select id="selectConfig_file" resultType="String">
		<![CDATA[
			show config_file
		]]>
	</select>

    <select id="selectData_directory" resultType="String">
		<![CDATA[
			show data_directory
		]]>
	</select>

    <select id="selectHot_standby" resultType="String">
		<![CDATA[
			show hot_standby
		]]>
	</select>

    <select id="selectTimezone" resultType="String">
		<![CDATA[
			show timezone
		]]>
	</select>

    <select id="selectShared_preload_libraries" resultType="String">
		<![CDATA[
			show shared_preload_libraries
		]]>
	</select>
	
	<select id="selectDatabaseInfo" resultType="hashmap">
		<![CDATA[
	   		/**
		 	* Query ID : selectDatabaseInfo
		 	* Description : 데이터베이스 정보 조회
		 	* Author : 박태혁
		 	**/
			SELECT d.datname as name,
			       pg_catalog.pg_get_userbyid(d.datdba) as owner,
			       pg_catalog.pg_encoding_to_char(d.encoding) as encoding,
			       d.datcollate as collate,
			       d.datctype as ctype,
			       CASE WHEN pg_catalog.has_database_privilege(d.datname, 'CONNECT')
			            THEN pg_catalog.pg_size_pretty(pg_catalog.pg_database_size(d.datname))
			            ELSE 'No Access'
			       END as size,
			       t.spcname as tablespace,
			       pg_catalog.shobj_description(d.oid, 'pg_database') as description
			FROM pg_catalog.pg_database d
			  JOIN pg_catalog.pg_tablespace t on d.dattablespace = t.oid
			ORDER BY 1
		]]>
	</select>
	
    <select id="selectTablespaceInfo" resultType="hashmap">
		<![CDATA[
	   		/**
		 	* Query ID : selectTablespaceInfo
		 	* Description : 테이블 스페이스 정보 조회
		 	* Author : 박태혁
		 	**/
			SELECT spcname AS "Name",
			  pg_catalog.pg_get_userbyid(spcowner) AS "Owner",
			  pg_catalog.pg_tablespace_location(oid) AS "Location",
			  spcoptions AS "Options",
			  pg_catalog.pg_size_pretty(pg_catalog.pg_tablespace_size(oid)) AS "Size",
			  pg_catalog.shobj_description(oid, 'pg_tablespace') AS "Description"
			FROM pg_catalog.pg_tablespace
			ORDER BY 1
		]]>
	</select>
	
    <select id="selectDatabaseConnInfo" parameterType="DbServerInfoVO" resultType="DbServerInfoVO">
		<![CDATA[
   		/**
	 	* Query ID : selectDatabaseConnInfo
	 	* Description : Database 접속정보 조회
	 	* Author : 박태혁
	 	**/
			SELECT 
				A.IPADR
				, A.DB_SVR_ID
				, A.PORTNO
				, B.DB_SVR_NM
				, B.DFT_DB_NM
				, B.SVR_SPR_USR_ID
				, B.SVR_SPR_SCM_PWD
			FROM T_DBSVRIPADR_I A, T_DBSVR_I B
			WHERE
				A.DB_SVR_ID = B.DB_SVR_ID
				AND A.IPADR = #{IPADR}
				AND B.USEYN = 'Y'
		]]>
	</select>
	
	<update id="updateDB_CNDT"  parameterType="DbServerInfoVO">
   		/**
	 	* Query ID : updateDB_CNDT
	 	* Description : Database 상태변경
	 	* Author : 박태혁
	 	**/
		UPDATE T_DBSVRIPADR_I
		SET
			MASTER_GBN = #{MASTER_GBN}
			, DB_CNDT = #{DB_CNDT}
			, LST_MDF_DTM = now()
		WHERE
			 IPADR = #{IPADR}
				
    </update>
    
    <update id="updateDBSlaveAll"  parameterType="DbServerInfoVO">
   		/**
	 	* Query ID : updateDBSlaveAll
	 	* Description : Slave로 상태변경
	 	* Author : 박태혁
	 	**/
		UPDATE T_DBSVRIPADR_I
		SET
			MASTER_GBN = 'S'
			, LST_MDF_DTM = now()
		WHERE
			 DB_SVR_ID = (SELECT DB_SVR_ID FROM T_DBSVR_I WHERE IPADR = #{IPADR})
    </update>
    
    <select id="selectISMasterGbm"  parameterType="DbServerInfoVO" resultType="DbServerInfoVO">
		<![CDATA[
			/**
		 	* Query ID : selectMasterGbm
		 	* Description : Master / Slave 구분
		 	* Author : 박태혁
		 	**/
		
			SELECT 
				MASTER_GBN
				, DB_CNDT
			FROM 
				T_DBSVRIPADR_I
			WHERE
				IPADR = #{IPADR}
		]]>
	</select>
	
	<select id="selectDbmsInfo" resultType="hashmap">
		<![CDATA[
	   		/**
		 	* Query ID : selectDbmsInfo
		 	* Description : dbms 정보 조회
		 	* Author : 박태혁
		 	**/
			SELECT 
				NAME
				, SETTING
				, SHORT_DESC
				, UNIT
				, CATEGORY
				, MIN_VAL
				, MAX_VAL
                , row_number() over (partition by CATEGORY order by  NAME ASC) AS RNUM
		    FROM PG_SETTINGS
            ORDER BY CATEGORY ASC, RNUM DESC

		]]>
	</select>

	 <select id="selectScd_id" resultType="int">
   		/**
	 	* Query ID : selectScm_id
	 	* Description : 스케줄 ID 조회
	 	* Author : 변승우
	 	**/
    	SELECT NEXTVAL('q_scd_m_01')
    </select>
	
	
	<insert id="insertWRKEXE_G"  parameterType="WrkExeVO">
   		/**
	 	* Query ID : insertWRKEXE_G
	 	* Description : 즉시실행 백업 로그 insert
	 	* Author : 변승우
	 	**/
	 	INSERT INTO T_WRKEXE_G
	 	(
			EXE_SN
			, SCD_ID
			, WRK_ID
			, WRK_STRT_DTM
			, WRK_END_DTM
			, EXE_RSLT_CD
			, BCK_OPT_CD
			, TLI
			, FILE_SZ
			, DB_ID
			, BCK_FILE_PTH
			, FRST_REGR_ID
			, LST_MDFR_ID
			, EXE_GRP_SN
			, WRK_NM
			, DB_SVR_IPADR_ID
	 	)
	 	VALUES
	 	(
			#{EXE_SN}
			, #{SCD_ID}
			, #{WRK_ID}
			, now()
			, now()
			, #{EXE_RSLT_CD}
			, #{BCK_OPT_CD}
			, 0
			, 0
			, #{DB_ID}
			, #{BCK_FILE_PTH}
			, 'system'
			, 'system'
			, #{EXE_GRP_SN}
			, (SELECT WRK_NM FROM T_WRKCNG_I WHERE WRK_ID = #{WRK_ID})
			, #{DB_SVR_IPADR_ID}
	 	)	 	
    </insert>
  
</mapper>