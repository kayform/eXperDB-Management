<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="proxy">
	<select id="selectPrySvrInfo" parameterType="ProxyServerVO" resultType="ProxyServerVO">
		/**
	 	* Query ID : selectPrySvrInfo
	 	* Description : Proxy 서버정보 조회
	 	* Author : 최정환
	 	**/
			SELECT
				A.PRY_SVR_ID,
				A.IPADR,
				A.AGT_SN,
				A.PRY_SVR_NM,
				A.PRY_PTH,
				A.KAL_PTH,
				A.USE_YN,
				A.EXE_STATUS,
				A.KAL_EXE_STATUS,
				A.MASTER_GBN,
				A.MASTER_SVR_ID,
				(SELECT B.IPADR FROM T_PRY_SVR_I B WHERE B.PRY_SVR_ID = A.MASTER_SVR_ID) AS MASTER_SVR_NM,
				(select COUNT(*) as master_exe_cnt 
				   from T_PRY_SVR_I B
				  where 1=1
				<if test='ipadr != null'>
				 AND 	B.IPADR != #{ipadr}
				</if>
				<if test='ipadr == null and pry_svr_id > 0'>
				 AND 	B.PRY_SVR_ID != #{pry_svr_id}
				</if>
				    and B.EXE_STATUS = 'TC001501' 
				    and a.DB_SVR_ID = b.DB_SVR_ID) as master_exe_cnt,
				A.DB_SVR_ID,
				A.DAY_DATA_DEL_TERM,
				A.MIN_DATA_DEL_TERM,
				A.OLD_MASTER_GBN,
				A.FRST_REGR_ID,
				A.FRST_REG_DTM,
				A.LST_MDFR_ID,
				A.LST_MDF_DTM,
				B.KAL_INSTALL_YN
			FROM  T_PRY_SVR_I A
			INNER JOIN T_PRY_AGT_I B ON A.AGT_SN = B.AGT_SN
			WHERE 1 = 1
				<if test='ipadr != null'>
				 AND 	A.IPADR = #{ipadr}
				</if>
				<if test="ipadr == null and pry_svr_id > 0">
				 AND 	A.PRY_SVR_ID = #{pry_svr_id}
				</if>
			LIMIT 1
	</select>
	
	<select id="selectPrySvrInslInfo" parameterType="ProxyServerVO" resultType="ProxyServerVO">
		/**
	 	* Query ID : selectPrySvrInslInfo
	 	* Description : Proxy 마스터 서버정보 조회
	 	* Author : 최정환
	 	**/
			SELECT
				A.PRY_SVR_ID,
				A.IPADR,
				A.AGT_SN,
				A.PRY_SVR_NM,
				A.PRY_PTH,
				A.KAL_PTH,
				A.USE_YN,
				A.EXE_STATUS,
				A.KAL_EXE_STATUS,
				A.MASTER_GBN,
				A.MASTER_SVR_ID,
				(SELECT B.IPADR FROM T_PRY_SVR_I B WHERE B.PRY_SVR_ID = A.MASTER_SVR_ID) AS MASTER_SVR_NM,
				(select COUNT(*) as master_exe_cnt 
				   from T_PRY_SVR_I B
				  where 1=1
				<if test='ipadr != null'>
				 AND (B.IPADR != #{ipadr} AND A.IPADR != (SELECT A.IPADR 
									    FROM T_DBSVRIPADR_I A, T_DBSVR_I B, T_AGTCNDT_I C 
									   WHERE A.DB_SVR_ID = B.DB_SVR_ID
									     AND A.ipadr = C.ipadr
									     AND B.USEYN = 'Y'
									     AND C.INTL_IPADR = #{ipadr}))
				</if>
				<if test='ipadr == null and pry_svr_id > 0'>
				 AND 	B.PRY_SVR_ID != #{pry_svr_id}
				</if>
				    and B.EXE_STATUS = 'TC001501' 
				    and a.DB_SVR_ID = b.DB_SVR_ID) as master_exe_cnt,
				A.DB_SVR_ID,
				A.DAY_DATA_DEL_TERM,
				A.MIN_DATA_DEL_TERM,
				A.OLD_MASTER_GBN,
				A.FRST_REGR_ID,
				A.FRST_REG_DTM,
				A.LST_MDFR_ID,
				A.LST_MDF_DTM,
				B.KAL_INSTALL_YN
			FROM  T_PRY_SVR_I A
			INNER JOIN T_PRY_AGT_I B ON A.AGT_SN = B.AGT_SN
			WHERE 1 = 1
				<if test='ipadr != null'>
				 AND (A.IPADR = #{ipadr}
				      OR
				      A.IPADR = (SELECT A.IPADR 
						   FROM T_DBSVRIPADR_I A, T_DBSVR_I B, T_AGTCNDT_I C 
						  WHERE A.DB_SVR_ID = B.DB_SVR_ID
						    AND A.IPADR = C.IPADR
						    AND B.USEYN = 'Y'
						    AND C.INTL_IPADR = #{ipadr})
				 )
				</if>
				<if test="ipadr == null and pry_svr_id > 0">
				 AND 	A.PRY_SVR_ID = #{pry_svr_id}
				</if>
			LIMIT 1
	</select>

	<select id="selectQ_T_PRY_SVR_I_01" resultType="long">
   		/**
	 	* Query ID : select Q_T_PRY_SVR_I_01
	 	* Description : T_PRY_SVR_I 테이블 SEQ
	 	* Author :
	 	**/
    	SELECT COALESCE(MAX(PRY_SVR_ID+1),1) AS PRY_SVR_ID FROM T_PRY_SVR_I
    </select>

    <insert id="insertPrySvrInfo"  parameterType="ProxyServerVO">
    	/**
	 	* Query ID : insertPrySvrInfo
	 	* Description : proxy 서버 등록
	 	* Author : 
	 	**/
		 INSERT INTO T_PRY_SVR_I
	 	(
			PRY_SVR_ID
			, IPADR
			, AGT_SN
			, PRY_SVR_NM
			, PRY_PTH
			, KAL_PTH
			, USE_YN
			, EXE_STATUS
			, KAL_EXE_STATUS
			, MASTER_GBN
			, MASTER_SVR_ID
			, DB_SVR_ID
			, DAY_DATA_DEL_TERM
			, MIN_DATA_DEL_TERM
			, FRST_REGR_ID
			, FRST_REG_DTM
			, LST_MDFR_ID
			, LST_MDF_DTM
			, OLD_MASTER_GBN
		)
		SELECT
			#{pry_svr_id}::numeric
			, #{ipadr}
			, (SELECT AGT_SN FROM  T_PRY_AGT_I WHERE IPADR = #{ipadr} LIMIT 1)
			, #{pry_svr_nm}
			, #{pry_pth}
			, #{kal_pth}
			, 'Y'::bpchar
			, #{exe_status}::character varying
			, #{kal_exe_status}::character varying
			, #{master_gbn}
			, #{master_svr_id_chk}::numeric
			, #{db_svr_id}::numeric
			, #{day_data_del_term}::numeric
			, #{min_data_del_term}::numeric
			, #{frst_regr_id}
			, clock_timestamp()
			, #{lst_mdfr_id}
			, clock_timestamp()
			, #{old_master_gbn}
    </insert>
    
    <update id="updatePrySvrInfo"  parameterType="ProxyServerVO">
   		/**
	 	* Query ID : updatePrySvrInfo
	 	* Description : proxy 서버 수정
	 	* Author : 
	 	**/
		UPDATE T_PRY_SVR_I
		SET
			AGT_SN = #{agt_sn}::numeric
		    , PRY_SVR_NM = #{pry_svr_nm}
			, PRY_PTH = #{pry_pth}
			, KAL_PTH = #{kal_pth}
			, USE_YN = #{use_yn}::bpchar
			, EXE_STATUS = #{exe_status}::character varying
			, KAL_EXE_STATUS = #{kal_exe_status}::character varying
			, MASTER_GBN = #{master_gbn}
			, MASTER_SVR_ID = #{master_svr_id_chk}::numeric
			, DB_SVR_ID = #{db_svr_id}::numeric
			, DAY_DATA_DEL_TERM = #{day_data_del_term}::numeric
			, MIN_DATA_DEL_TERM = #{min_data_del_term}::numeric
			, LST_MDFR_ID = #{upd_master_gbn}
			, LST_MDF_DTM = clock_timestamp()

			<if test='upd_master_gbn != null and upd_master_gbn eq "M" '>
			, OLD_MASTER_GBN = #{upd_master_gbn}
			</if>
		WHERE
			IPADR = #{ipadr}
    </update>
    
    <update id="updatePrySvrMstSvrIdList"  parameterType="ProxyServerVO">
   		/**
	 	* Query ID : updatePrySvrMstSvrIdList
	 	* Description : proxy master_svr_id 수정
	 	* Author : 
	 	**/
		UPDATE T_PRY_SVR_I
		SET
			 MASTER_SVR_ID = (SELECT PRY_SVR_ID FROM T_PRY_SVR_I WHERE IPADR=#{back_peer_id})
		WHERE
			PRY_SVR_NM = #{pry_svr_nm} || '%'
		  AND MASTER_GBN = 'S'
    </update>
    
	<insert id="insertPryGlbInfo"  parameterType="hashmap">
        /**
        * Query ID : insertPryGlbInfo
        * Description : PROXY GLOBAL 테이블 등록
        * Author : 
        **/
        WITH UPSERT AS(
               UPDATE T_PRY_GLB_I
                  SET MAX_CON_CNT = #{max_con_cnt_chk}::numeric,
                      CL_CON_MAX_TM = #{cl_con_max_tm},
                      CON_DEL_TM = #{con_del_tm},
                      SVR_CON_MAX_TM = #{svr_con_max_tm},
                      CHK_TM = #{chk_tm},
                      IF_NM = #{if_nm},
                      OBJ_IP = #{obj_ip},
                      PEER_SERVER_IP = #{peer_server_ip},
                      LST_MDFR_ID = #{lst_mdfr_id},
                      LST_MDF_DTM = clock_timestamp()
                WHERE PRY_SVR_ID  = #{pry_svr_id}::numeric
                RETURNING *
                      )
        INSERT
              INTO T_PRY_GLB_I (
                        PRY_GLB_ID,
                        PRY_SVR_ID,
                        MAX_CON_CNT,
                        CL_CON_MAX_TM,
                        CON_DEL_TM,
                        SVR_CON_MAX_TM,
                        CHK_TM,
                        IF_NM,
                        OBJ_IP,
                        PEER_SERVER_IP,
                        FRST_REGR_ID,
                        FRST_REG_DTM,
                        LST_MDFR_ID,
                        LST_MDF_DTM
                       )
                       SELECT (SELECT COALESCE(MAX(PRY_GLB_ID+1),1) AS PRY_GLB_ID FROM T_PRY_GLB_I),
                              #{pry_svr_id}::numeric,
                              #{max_con_cnt_chk}::numeric,
                              #{cl_con_max_tm},
                              #{con_del_tm},
                              #{svr_con_max_tm},
                              #{chk_tm},
                              #{if_nm},
                              #{obj_ip},
                              #{peer_server_ip},
                              #{frst_regr_id},
                              clock_timestamp(),
                              #{lst_mdfr_id},
                              clock_timestamp()
         WHERE NOT EXISTS ( SELECT * FROM UPSERT )
	</insert>
	
	<select id="selectPryLsnInfo" parameterType="ProxyListenerVO" resultType="ProxyListenerVO">
		<![CDATA[
		/**
	 	* Query ID : selectPryLsnInfo
	 	* Description : Proxy Lisner 조회
	 	* Author : 
	 	**/
			SELECT
				LSN_ID
				, PRY_SVR_ID
				, LSN_NM
				, CON_BIND_PORT
				, LSN_DESC
				, DB_USR_ID
				, DB_ID
				, DB_NM
				, CON_SIM_QUERY
				, FIELD_VAL
				, FIELD_NM
				, FRST_REGR_ID
				, FRST_REG_DTM
				, LST_MDFR_ID
				, LST_MDF_DTM
			FROM  T_PRY_LSN_I
			WHERE
				PRY_SVR_ID = #{pry_svr_id}::numeric
			AND LSN_NM = #{lsn_nm}
			LIMIT 1
		]]>
	</select>

	<select id="selectQ_T_PRY_LSN_I_01" resultType="long">
   		/**
	 	* Query ID : selectQ_T_PRY_LSN_I_01
	 	* Description : Q_T_PRY_LSN_I_01 테이블 SEQ
	 	* Author :
	 	**/
    	SELECT COALESCE(MAX(LSN_ID+1),1) AS LSN_ID FROM T_PRY_LSN_I
    </select>

    <insert id="insertPryLsnInfo"  parameterType="ProxyListenerVO">
    	/**
	 	* Query ID : insertPryLsnInfo
	 	* Description : proxy 리스너 등록
	 	* Author : 
	 	**/
		 INSERT INTO T_PRY_LSN_I
	 	(
			LSN_ID
			, PRY_SVR_ID
			, LSN_NM
			, CON_BIND_PORT
			, LSN_DESC
			, DB_USR_ID
			, DB_ID
			, DB_NM
			, CON_SIM_QUERY
			, FIELD_VAL
			, FIELD_NM
			, FRST_REGR_ID
			, FRST_REG_DTM
			, LST_MDFR_ID
			, LST_MDF_DTM
		)
		SELECT
			#{lsn_id}::numeric
			, #{pry_svr_id}::numeric
			, #{lsn_nm}
			, #{con_bind_port}
			, #{lsn_desc}
			, #{db_usr_id}
			, (SELECT DB_ID FROM T_DB_I WHERE USEYN='Y' AND DB_SVR_ID = #{db_svr_id}::numeric AND DB_NM = #{db_nm})
			, #{db_nm}
			, #{con_sim_query}
			, #{field_val}
			, #{field_nm}
			, #{frst_regr_id}
			, clock_timestamp()
			, #{lst_mdfr_id}
			, clock_timestamp()
    </insert>

	<update id="updatePryLsnInfo"  parameterType="ProxyListenerVO">
		/**
	 	* Query ID : updatePryLsnInfo
	 	* Description : proxy 리스너 수정
	 	* Author : 
	 	**/
	 	UPDATE T_PRY_LSN_I
	 	SET 
			LSN_NM = #{lsn_nm}
			, CON_BIND_PORT = #{con_bind_port}
			, LSN_DESC = #{lsn_desc}
			, DB_USR_ID = #{db_usr_id}
			, DB_ID = (SELECT DB_ID FROM T_DB_I WHERE USEYN='Y' AND DB_SVR_ID = #{db_svr_id}::numeric AND DB_NM = #{db_nm})
			, DB_NM = #{db_nm}
			, CON_SIM_QUERY = #{con_sim_query}
			, FIELD_VAL = #{field_val}
			, FIELD_NM = #{field_nm}
			, LST_MDFR_ID = #{lst_mdfr_id}
			, LST_MDF_DTM = clock_timestamp()
	 	WHERE
	 		LSN_ID = #{lsn_id}::numeric
	 	AND PRY_SVR_ID = #{pry_svr_id}::numeric
	</update>

	<delete id="deletePryLsnSvrList" parameterType="ProxyListenerServerListVO" >
		<![CDATA[
		/**
	 	* Query ID : deletePryLsnSvrList
	 	* Description : Proxy Lisner Server list 삭제
	 	* Author : 
	 	**/
			DELETE FROM  T_PRY_LSN_SVR_I
			WHERE
				PRY_SVR_ID = #{pry_svr_id}::numeric
			AND DB_CON_ADDR = #{db_con_addr}
			AND LSN_ID = (SELECT LSN_ID 
			                FROM T_PRY_LSN_I
			               WHERE PRY_SVR_ID = #{pry_svr_id}::numeric
			                 AND LSN_NM = #{lsn_nm}
			               LIMIT 1
			              )
		]]>
	</delete>	
	
   <insert id="insertPryLsnSvrInfo"  parameterType="ProxyListenerServerListVO">
    	/**
	 	* Query ID : insertPryLsnSvrInfo
	 	* Description : proxy 리스너 서버 등록
	 	* Author : 
	 	**/
		 INSERT INTO T_PRY_LSN_SVR_I
	 	(
			PRY_SVR_ID
			, LSN_SVR_ID
			, LSN_ID
			, DB_CON_ADDR
			, CHK_PORTNO
			, BACKUP_YN
			, FRST_REGR_ID
			, FRST_REG_DTM
			, LST_MDFR_ID
			, LST_MDF_DTM
		)
		SELECT
			#{pry_svr_id}::numeric
			, (SELECT COALESCE(MAX(LSN_SVR_ID+1),1) AS LSN_SVR_ID FROM T_PRY_LSN_SVR_I)
			, (SELECT LSN_ID 
			     FROM T_PRY_LSN_I
			    WHERE PRY_SVR_ID = #{pry_svr_id}::numeric
			      AND LSN_NM = #{lsn_nm}
			    LIMIT 1
			  )::numeric
			, #{db_con_addr}
			, #{chk_portno_val}::numeric
			, #{backup_yn}::bpchar
			, #{frst_regr_id}
			, clock_timestamp()
			, #{lst_mdfr_id}
			, clock_timestamp()
    </insert>
		
	<insert id="insertPryVipCngInfo"  parameterType="hashmap">
        /**
        * Query ID : insertPryVipCngInfo
        * Description : PROXY VIPCNG 테이블
        * Author : 
        **/
        WITH UPSERT AS(
               UPDATE T_PRY_VIPCNG_I
                  SET V_IP = #{v_ip},
                      V_ROT_ID = #{v_rot_id},
                      V_IF_NM = #{v_if_nm},
                      PRIORITY = #{priority}::numeric,
                      CHK_TM = #{chk_tm}::numeric,
                      LST_MDFR_ID = #{lst_mdfr_id},
                      LST_MDF_DTM = clock_timestamp()
                WHERE PRY_SVR_ID  = #{pry_svr_id}::numeric
                  AND STATE_NM = #{state_nm}
                RETURNING *
                      )
        INSERT
              INTO T_PRY_VIPCNG_I (
                        VIP_CNG_ID,
                        STATE_NM,
                        V_IP,
                        PRY_SVR_ID,
                        V_ROT_ID,
                        V_IF_NM,
                        PRIORITY,
                        CHK_TM,
                        FRST_REGR_ID,
                        FRST_REG_DTM,
                        LST_MDFR_ID,
                        LST_MDF_DTM
                       )
                       SELECT (SELECT COALESCE(MAX(VIP_CNG_ID+1),1) AS VIP_CNG_ID FROM T_PRY_VIPCNG_I),
                              #{state_nm},
                              #{v_ip},
                              #{pry_svr_id}::numeric,
                              #{v_rot_id},
                              #{v_if_nm},
                              #{priority}::numeric,
                              #{chk_tm}::numeric,
                              #{frst_regr_id},
                              clock_timestamp(),
                              #{lst_mdfr_id},
                              clock_timestamp()
         WHERE NOT EXISTS ( SELECT * FROM UPSERT )
	</insert>	
		
	<insert id="insertPrycngInfo"  parameterType="ProxyConfChangeHistoryVO">
        /**
        * Query ID : insertPrycngInfo
        * Description : PROXY GLOBAL 테이블
        * Author : 
        **/
        INSERT INTO T_PRYCNG_G
	        (	PRY_CNG_SN, 
	        	PRY_SVR_ID, 
	        	PRY_PTH, 
	        	KAL_PTH, 
	        	EXE_RST_CD, 
	        	FRST_REGR_ID, 
	        	FRST_REG_DTM)
        SELECT	(SELECT COALESCE(MAX(PRY_CNG_SN+1),1) AS PRY_CNG_SN FROM T_PRYCNG_G),
        		#{pry_svr_id},
        		#{pry_pth},
        		#{kal_pth},
        		#{exe_rst_cd},
        		#{frst_regr_id},
        		clock_timestamp()
	</insert>
	
	<insert id="insertPryActCngInfo"  parameterType="ProxyConfChangeHistoryVO">
        /**
        * Query ID : insertPryActCngInfo
        * Description : PROXY ActStatus Change 이력 관리 
        * Author : 
        **/
        INSERT INTO T_PRY_ACTSTATE_CNG_G
	        (	PRY_ACT_EXE_SN, 
	        	PRY_SVR_ID, 
	        	SYS_TYPE, 
	        	ACT_TYPE, 
	        	ACT_EXE_TYPE, 
	        	WRK_DTM, 
	        	EXE_RSLT_CD, 
	        	RSLT_MSG, 
	        	FRST_REGR_ID, 
	        	FRST_REG_DTM,
	        	LST_MDFR_ID,
                LST_MDF_DTM)
        SELECT	NEXTVAL('q_t_pry_actstate_cng_g_01'),
        		#{pry_svr_id},
        		#{sys_type},
        		#{act_type},
        		#{act_exe_type},
        		clock_timestamp(),
        		#{exe_rslt_cd},
        		#{rslt_msg},
        		#{frst_regr_id},
        		clock_timestamp(),
        		#{lst_mdfr_id},
        		clock_timestamp()
	</insert>
	 <update id="updatePrySvrExeStatusInfo"  parameterType="ProxyServerVO">
   		/**
	 	* Query ID : updatePrySvrExeStatusInfo
	 	* Description : proxy Exe_Status, Kal_exe_status 수정
	 	* Author : 
	 	**/
		UPDATE T_PRY_SVR_I
		SET
			 <if test='exe_status != null and exe_status != "" '>
			 EXE_STATUS = #{exe_status},
			 </if>
			 <if test='kal_exe_status != null and kal_exe_status != "" '>
			 KAL_EXE_STATUS = #{kal_exe_status},
			 </if>
			 LST_MDFR_ID = #{lst_mdfr_id},
        	 LST_MDF_DTM = clock_timestamp()
		WHERE 1 = 1

         <if test='ipadr != null and ipadr != "" '>
             AND IPADR = #{ipadr}
         </if>

         <if test="pry_svr_id > 0">
             AND PRY_SVR_ID = #{pry_svr_id}::numeric
         </if>
			
    </update>
    
	<select id="selectPryLsnPortList" parameterType="hashmap" resultType="hashMap">
        /**
        * Query ID : selectPryLsnPortList
        * Description : 리스너 포트 조회
        * Author : 
        **/
         SELECT B.LSN_ID
              , B.PRY_SVR_ID
              , B.CON_BIND_PORT
              , A.IPADR 
           FROM T_PRY_SVR_I A
                INNER JOIN T_PRY_LSN_I B ON A.PRY_SVR_ID = B.PRY_SVR_ID
          WHERE 1 = 1
            <if test='ipadr != null'>
                AND A.IPADR = #{ipadr}
            </if>

            <if test='pry_svr_id != null'>
                AND A.PRY_SVR_ID = #{pry_svr_id}::numeric
            </if>
          ORDER BY B.LSN_ID
    </select>
    
	<update id="updatePryLsnStatusInfo"  parameterType="ProxyListenerVO">
		/**
	 	* Query ID : updatePryLsnInfo
	 	* Description : proxy 리스너 수정
	 	* Author : 
	 	**/
	 	UPDATE T_PRY_LSN_I
	 	SET 
			LSN_EXE_STATUS = #{lsn_exe_status}
			, LST_MDFR_ID = #{lst_mdfr_id}
			, LST_MDF_DTM = clock_timestamp()
	 	WHERE
	 		LSN_ID = #{lsn_id}::numeric
	 	AND PRY_SVR_ID = #{pry_svr_id}::numeric
	</update>
    
	<select id="selectPryVipcngVipList" parameterType="hashmap" resultType="hashMap">
        /**
        * Query ID : selectPryVipcngVipList
        * Description : vip 내역 조회
        * Author : 
        **/
         SELECT B.V_IP
              , B.PRY_SVR_ID
              , B.V_ROT_ID
              , B.V_IF_NM
              , B.VIP_CNG_ID
              , B.STATE_NM
              , A.IPADR 
           FROM T_PRY_SVR_I A
                INNER JOIN T_PRY_VIPCNG_I B ON A.PRY_SVR_ID = B.PRY_SVR_ID
          WHERE 1 = 1
            <if test='ipadr != null'>
                AND A.IPADR = #{ipadr}
            </if>
            
            <if test='pry_svr_id != null'>
                AND A.PRY_SVR_ID = #{pry_svr_id}::numeric
            </if>
          ORDER BY B.V_IP
    </select>

	<update id="updatePryVipcngStatusInfo"  parameterType="ProxyVipConfigVO">
		/**
	 	* Query ID : updatePryVipcngStatusInfo
	 	* Description : VIP 상태 수정
	 	* Author : 
	 	**/
	 	UPDATE T_PRY_VIPCNG_I
	 	SET 
			V_IP_EXE_STATUS = #{v_ip_exe_status}
			, LST_MDFR_ID = #{lst_mdfr_id}
			, LST_MDF_DTM = clock_timestamp()
	 	WHERE
	 		VIP_CNG_ID = #{vip_cng_id}::numeric
	 	AND PRY_SVR_ID = #{pry_svr_id}::numeric
	 	AND STATE_NM = #{state_nm}
	</update>
	
	<select id="selectPryActstateCngMaxTypeInfo" parameterType="hashMap" resultType="hashMap">
		<![CDATA[
		/**
	 	* Query ID : selectPryActstateCngMaxTypeInfo
	 	* Description : Proxy 기동상태 이력 max 값 조회 
	 	* Author : 
	 	**/
        SELECT
               C.SYS_TYPE,
               C.ACT_TYPE,
               C.PRY_ACT_EXE_SN,
               C.PRY_SVR_ID
          FROM (
               SELECT A.SYS_TYPE,
                      A.ACT_TYPE,
                      A.PRY_ACT_EXE_SN,
                      B.PRY_SVR_ID,
                      ROW_NUMBER() OVER(PARTITION BY A.SYS_TYPE ORDER BY A.PRY_ACT_EXE_SN DESC, A.SYS_TYPE DESC) as RowIdx  
                 FROM T_PRY_ACTSTATE_CNG_G A
                      INNER JOIN T_PRY_SVR_I B ON A.PRY_SVR_ID = B.PRY_SVR_ID 
                WHERE B.IPADR = #{ipadr}
                  AND A.EXE_RSLT_CD = 'TC001501'
         ) AS C
         WHERE C.RowIdx = 1
		]]>
	</select>

	<insert id="insertPryActExeCngInfo" parameterType="hashMap">
		/**
		* Query ID : insertPryActExeCngInfo
		* Description : proxy / keepalived 기동-정지 상태 변경 
		* Author :
		**/
		INSERT INTO T_PRY_ACTSTATE_CNG_G (
				pry_act_exe_sn, 
				pry_svr_id, 
				sys_type, 
				act_type, 
				act_exe_type, 
				wrk_dtm,
				exe_rslt_cd, 
				rslt_msg, 
				frst_regr_id, 
				frst_reg_dtm, 
				lst_mdfr_id, 
				lst_mdf_dtm
		)
		SELECT 
				NEXTVAL('q_t_pry_actstate_cng_g_01'),
				(SELECT pry_svr_id FROM T_PRY_SVR_I WHERE IPADR = #{ipadr} LIMIT 1), 
				#{sys_type},
				#{act_type},
				'TC004002', 
				clock_timestamp(), 
				'TC001501',
				'', 
				#{frst_regr_id}, 
				clock_timestamp(), 
				#{lst_mdfr_id}, 
				clock_timestamp()
	</insert>
	
	<select id="selectPrySvrMasterSetInfo" parameterType="hashMap" resultType="ProxyServerVO">
	    <if test='selQueryGbn == "masterM"'>
	        SELECT
	               MIN(PRY_SVR_ID) as PRY_SVR_ID
	          FROM T_PRY_SVR_I
	         WHERE 1 = 1
	           AND MASTER_SVR_ID = #{pry_svr_id}::numeric
	           AND (exe_status = 'TC001501' and KAL_exe_status = 'TC001501')
	           AND DB_SVR_ID = #{db_svr_id}::numeric
	         LIMIT 1
	    </if>
	    
	    <if test='selQueryGbn == "backupM"'>
	        SELECT
	               MIN(PRY_SVR_ID) as PRY_SVR_ID
	          FROM T_PRY_SVR_I
	         WHERE 1 = 1
	           AND DB_SVR_ID = #{db_svr_id}::numeric
	           AND (exe_status = 'TC001501' and KAL_exe_status = 'TC001501')
	           AND MASTER_GBN = 'M'
	          LIMIT 1
	    </if>
	</select>
	
    <update id="updatePrySvrMstGbnInfo"  parameterType="ProxyServerVO">
   		/**
	 	* Query ID : updatePrySvrMstGbnInfo
	 	* Description : proxy 서버 수정
	 	* Author : 
	 	**/
	    <if test='sel_query_gbn == "master_down"'>
		UPDATE T_PRY_SVR_I
		SET
			MASTER_GBN = #{master_gbn}
	    	, MASTER_SVR_ID = #{master_svr_id_chk}::numeric
			, LST_MDFR_ID = #{lst_mdfr_id}
			, LST_MDF_DTM = clock_timestamp()
		WHERE
			PRY_SVR_ID  = #{pry_svr_id}::numeric;

		UPDATE T_PRY_SVR_I
		SET
			MASTER_GBN = #{old_master_gbn}
	    	, MASTER_SVR_ID = #{old_master_svr_id_chk}::numeric
			, LST_MDFR_ID = #{lst_mdfr_id}
			, LST_MDF_DTM = clock_timestamp()
		WHERE
			PRY_SVR_ID  = #{old_pry_svr_id}::numeric;

		UPDATE T_PRY_SVR_I
		SET
			MASTER_SVR_ID = #{old_master_svr_id_chk}::numeric
			, LST_MDFR_ID = #{lst_mdfr_id}
			, LST_MDF_DTM = clock_timestamp()
		WHERE
			PRY_SVR_ID  != #{pry_svr_id}::numeric
		  AND MASTER_GBN = 'S'
		  AND (PRY_SVR_ID = #{old_pry_svr_id}::numeric OR MASTER_SVR_ID = #{old_pry_svr_id}::numeric)
		  AND DB_SVR_ID = #{db_svr_id}::numeric;
		</if>
		
		 <if test='sel_query_gbn == "backup_down"'>
		UPDATE T_PRY_SVR_I
		SET
			MASTER_SVR_ID = #{old_master_svr_id_chk}::numeric
			, MASTER_GBN = #{master_gbn}
			, LST_MDFR_ID = #{lst_mdfr_id}
			, LST_MDF_DTM = clock_timestamp()
		WHERE
			PRY_SVR_ID = #{pry_svr_id}::numeric
		 </if>
		 
	    <if test='sel_query_gbn == "g_master_up"'>
		UPDATE T_PRY_SVR_I
		SET
			MASTER_GBN = #{master_gbn}
	    	, MASTER_SVR_ID = #{master_svr_id_chk}::numeric
			, LST_MDFR_ID = #{lst_mdfr_id}
			, LST_MDF_DTM = clock_timestamp()
		WHERE
			PRY_SVR_ID  = #{pry_svr_id}::numeric;

		UPDATE T_PRY_SVR_I
		SET
			MASTER_GBN = #{old_master_gbn}
	    	, MASTER_SVR_ID = #{old_master_svr_id_chk}::numeric
			, LST_MDFR_ID = #{lst_mdfr_id}
			, LST_MDF_DTM = clock_timestamp()
		WHERE MASTER_SVR_ID = #{pry_svr_id}::numeric
		  AND DB_SVR_ID = #{db_svr_id}::numeric;
		</if>
		
	    <if test='sel_query_gbn == "g_master_up_keep"'>
		UPDATE T_PRY_SVR_I
		SET
			MASTER_GBN = #{old_master_gbn}
	    	, MASTER_SVR_ID = #{pry_svr_id}::numeric
			, LST_MDFR_ID = #{lst_mdfr_id}
			, LST_MDF_DTM = clock_timestamp()
		WHERE
			PRY_SVR_ID  = #{old_pry_svr_id}::numeric
		 OR MASTER_SVR_ID  = #{old_pry_svr_id}::numeric;

		UPDATE T_PRY_SVR_I
		SET
			MASTER_GBN = #{master_gbn}
	    	, MASTER_SVR_ID = #{master_svr_id_chk}::numeric
			, LST_MDFR_ID = #{lst_mdfr_id}
			, LST_MDF_DTM = clock_timestamp()
		WHERE PRY_SVR_ID = #{pry_svr_id}::numeric;
		  
		UPDATE T_PRY_SVR_I
		SET
			MASTER_GBN = #{old_master_gbn}
	    	, MASTER_SVR_ID = #{pry_svr_id}::numeric
			, LST_MDFR_ID = #{lst_mdfr_id}
			, LST_MDF_DTM = clock_timestamp()
		WHERE
			MASTER_SVR_ID  = #{pry_svr_id}::numeric;
		</if>
		
	    <if test='sel_query_gbn == "g_master_up_sel"'>
		UPDATE T_PRY_SVR_I
		SET
			MASTER_GBN = #{master_gbn}
	    	, MASTER_SVR_ID = #{master_svr_id_chk}::numeric
			, LST_MDFR_ID = #{lst_mdfr_id}
			, LST_MDF_DTM = clock_timestamp()
		WHERE
			PRY_SVR_ID  = #{pry_svr_id}::numeric;

		UPDATE T_PRY_SVR_I
		SET
			MASTER_GBN = #{old_master_gbn}
	    	, MASTER_SVR_ID = #{pry_svr_id}::numeric
			, LST_MDFR_ID = #{lst_mdfr_id}
			, LST_MDF_DTM = clock_timestamp()
		WHERE DB_SVR_ID = #{db_svr_id}::numeric
		AND PRY_SVR_ID  != #{pry_svr_id}::numeric;
		</if>

	    <if test='sel_query_gbn == "g_backup_up_keep"'>
		UPDATE T_PRY_SVR_I
		SET
			MASTER_GBN = #{master_gbn}
	    	, MASTER_SVR_ID = #{master_svr_id_chk}::numeric
			, LST_MDFR_ID = #{lst_mdfr_id}
			, LST_MDF_DTM = clock_timestamp()
		WHERE
			PRY_SVR_ID  = #{pry_svr_id}::numeric;
		</if>
		
	    <if test='sel_query_gbn == "g_backup_up"'>
		UPDATE T_PRY_SVR_I
		SET
			MASTER_GBN = #{master_gbn}
	    	, MASTER_SVR_ID = #{master_svr_id_chk}::numeric
			, LST_MDFR_ID = #{lst_mdfr_id}
			, LST_MDF_DTM = clock_timestamp()
		WHERE
			PRY_SVR_ID  = #{pry_svr_id}::numeric;
			
		UPDATE T_PRY_SVR_I
		SET
			MASTER_GBN = #{old_master_gbn}
	    	, MASTER_SVR_ID = #{pry_svr_id}::numeric
			, LST_MDFR_ID = #{lst_mdfr_id}
			, LST_MDF_DTM = clock_timestamp()
		WHERE
			PRY_SVR_ID  != #{pry_svr_id}::numeric
		AND ((PRY_SVR_ID = #{old_master_svr_id_chk}::numeric OR MASTER_SVR_ID = #{old_master_svr_id_chk}::numeric)
		    OR (DB_SVR_ID = #{db_svr_id}::numeric));
		</if>
    </update>

	<select id="selectPryLsnSvrIdInfo" parameterType="ProxyStatisticVO" resultType="hashMap">
        /**
        * Query ID : selectPryLsnSvrIdInfo
        * Description : 리스너 포트 조회
        * Author : 
        **/
         SELECT B.CON_BIND_PORT
              , A.IPADR 
              , A.PRY_SVR_ID
              , B.LSN_ID
              , C.LSN_SVR_ID
           FROM T_PRY_SVR_I A
                INNER JOIN T_PRY_LSN_I B ON A.PRY_SVR_ID = B.PRY_SVR_ID
                INNER JOIN T_PRY_LSN_SVR_I C ON A.PRY_SVR_ID = C.PRY_SVR_ID and B.LSN_ID = C.LSN_ID
          WHERE 1 = 1
            AND A.IPADR = #{ipadr}
            and B.LSN_NM = #{pxname}
            and C.DB_CON_ADDR = #{db_con_addr_chk}
		  LIMIT 1
    </select>

    <update id="updatePryLsnSvrDbRealChkInfo"  parameterType="ProxyStatisticVO">
   		/**
	 	* Query ID : updatePryLsnSvrDbRealChkInfo
	 	* Description : proxy 리스너 서버 DB연결 수정
	 	* Author : 
	 	**/
		UPDATE T_PRY_LSN_SVR_I
		SET
	    	  DB_CONN_IP = (CASE WHEN #{svr_status} = 'UP' THEN #{db_con_addr}
	    	                     ELSE '' 
	    	                 END
                           )
			, LST_MDFR_ID = #{lst_mdfr_id}
			, LST_MDF_DTM = clock_timestamp()
		WHERE
			  LSN_SVR_ID  = #{lsn_svr_id}::numeric
		  AND DB_CON_ADDR  = #{db_con_addr_chk}
		  AND PRY_SVR_ID  = #{pry_svr_id}::numeric
		  AND LSN_ID  = #{lsn_id}::numeric
    </update>

    <insert id="insertPrySvrStatusInfo"  parameterType="ProxyStatisticVO">
    	/**
	 	* Query ID : insertPrySvrStatusInfo
	 	* Description : proxy 리스너 통계 데이터 등록
	 	* Author : 
	 	**/
		 INSERT INTO T_PRY_SVR_STATUS_G
	 	(
			PRY_EXE_STATUS_SN
			, LOG_TYPE
			, PRY_SVR_ID
			, EXE_DTM
			, CUR_SESSION
			, MAX_SESSION
			, SESSION_LIMIT
			, CUMT_SSO_CON_CNT
			, SVR_PRO_REQ_SEL_CNT
			, LST_CON_REC_AFT_TM
			, BYTE_RECEIVE
			, BYTE_TRANSMIT
			, SVR_STATUS
			, LST_STATUS_CHK_DESC
			, BAKUP_SER_CNT
			, FAIL_CHK_CNT
			, SVR_STATUS_CHG_CNT
			, SVR_STOP_TM
			, EXE_RSLT_CD
			, FRST_REGR_ID
			, FRST_REG_DTM
			, LST_MDFR_ID
			, LST_MDF_DTM
			, LSN_ID
			, DB_CON_ADDR
			, LSN_SVR_ID
		)
		SELECT
			NEXTVAL('q_t_pry_svr_status_g_01')
			, #{log_type}
			, #{pry_svr_id}::numeric
			, clock_timestamp()
			, #{cur_session}::numeric
			, #{max_session}::numeric
			, #{session_limit}::numeric
			, #{cumt_sso_con_cnt}::numeric
			, #{svr_pro_req_sel_cnt}::numeric
			, #{lst_con_rec_aft_tm}
			, #{byte_receive}::numeric
			, #{byte_transmit}::numeric
			, #{svr_status}
			, #{lst_status_chk_desc}
			, #{bakup_ser_cnt}::numeric
			, #{fail_chk_cnt}::numeric
			, #{svr_status_chg_cnt}::numeric
			, #{svr_stop_tm}
			, #{exe_rslt_cd}
			, #{frst_regr_id}
			, clock_timestamp()
			, #{lst_mdfr_id}
			, clock_timestamp()
			, #{lsn_id}::numeric
			, #{db_con_addr}
			, #{lsn_svr_id}::numeric
    </insert>

    <delete id="lsnSvrDelExecuteList"  parameterType="ProxyServerVO">
   		/**
	 	* Query ID : lsnSvrDelExecuteList
	 	* Description : proxy 리스너 통계정보 삭제
	 	* Author : 
	 	**/
	 	DELETE
          FROM T_PRY_SVR_STATUS_G
         WHERE pry_svr_id = #{pry_svr_id}::numeric
           AND (now()::date - #{min_data_del_val}::interval) >= exe_dtm
           AND LOG_TYPE = 'TC003901';
	 	
	 	DELETE
          FROM T_PRY_SVR_STATUS_G
         WHERE pry_svr_id = #{pry_svr_id}::numeric
           AND (now()::date - #{day_data_del_val}::interval) >= exe_dtm
           AND LOG_TYPE = 'TC003902';
    </delete>
    
	<select id="selectPryLsnSvrChkInfo" parameterType="ProxyListenerServerListVO" resultType="ProxyListenerServerListVO">
        /**
        * Query ID : selectPryLsnSvrChkInfo
        * Description : 리스너 서버 등록 여부 조회
        * Author : 
        **/
         SELECT B.CON_BIND_PORT
              , A.IPADR 
              , A.PRY_SVR_ID
              , B.LSN_ID
              , C.LSN_SVR_ID
           FROM T_PRY_SVR_I A
                JOIN T_PRY_LSN_I B ON A.PRY_SVR_ID = B.PRY_SVR_ID
                JOIN T_PRY_LSN_SVR_I C ON A.PRY_SVR_ID = C.PRY_SVR_ID and B.LSN_ID = C.LSN_ID
          WHERE 1 = 1
            AND A.PRY_SVR_ID  = #{pry_svr_id}::numeric
            AND B.LSN_NM = #{lsn_nm}
            AND C.DB_CON_ADDR = #{db_con_addr}
		  LIMIT 1
    </select>

   <update id="updatePryLsnSvrInfo"  parameterType="ProxyListenerServerListVO">
    	/**
	 	* Query ID : updatePryLsnSvrInfo
	 	* Description : proxy 리스너 서버 수정
	 	* Author : 
	 	**/
		UPDATE T_PRY_LSN_SVR_I
		SET
	    	  CHK_PORTNO = #{chk_portno_val}::numeric
	    	, BACKUP_YN = #{backup_yn}::bpchar
			, LST_MDFR_ID = #{lst_mdfr_id}
			, LST_MDF_DTM = clock_timestamp()
		WHERE
			  LSN_SVR_ID  = #{lsn_svr_id}::numeric
		  AND DB_CON_ADDR  = #{db_con_addr}
		  AND PRY_SVR_ID  = #{pry_svr_id}::numeric
		  AND LSN_ID  = #{lsn_id}::numeric
    </update>
    
    <update id="updatePrySvrKalPathInfo"  parameterType="ProxyServerVO">
   		/**
	 	* Query ID : updatePrySvrKalPathInfo
	 	* Description : proxy Kal_path 수정
	 	* Author : 
	 	**/
		UPDATE 	T_PRY_SVR_I
		SET		KAL_PTH = #{kal_pth},
				LST_MDFR_ID = #{lst_mdfr_id},
        		LST_MDF_DTM = clock_timestamp()
		WHERE 	1 = 1
		
         <if test="pry_svr_id > 0">
             AND PRY_SVR_ID = #{pry_svr_id}::numeric
         </if>
    </update>
</mapper>