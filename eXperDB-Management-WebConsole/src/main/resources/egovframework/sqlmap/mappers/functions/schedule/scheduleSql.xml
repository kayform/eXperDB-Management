<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="scheduleSql">

	<select id="selectWorkList" resultType="workVO">
		/**
	 	* Query ID : selectWorkList
	 	* Description :  스케쥴 work List 조회
	 	* Author : 변승우
	 	**/
	 	SELECT
	 	      (ROW_NUMBER() OVER()) AS ROWNUM
			, (ROW_NUMBER() OVER()) AS IDX
			, AA.WRK_ID
			, AA.DB_SVR_ID
			, AA.DB_SVR_NM
			, AA.DB_ID
			, AA.DB_NM
			, AA.BSN_DSCD
			, AA.BSN_DSCD_NM
			, AA.BCK_BSN_DSCD
			, AA.BCK_BSN_DSCD_NM
			, AA.WRK_NM
			, AA.WRK_EXP
			, AA.BCK_OPT_CD
			, AA.BCK_OPT_CD_NM
			, AA.BCK_MTN_ECNT
			, AA.CPS_YN
			, AA.LOG_FILE_BCK_YN
			, AA.LOG_FILE_STG_DCNT
			, AA.LOG_FILE_MTN_ECNT
			, AA.CPRT
			, AA.SAVE_PTH
			, AA.FILE_FMT_CD
			, AA.FILE_STG_DCNT
			, AA.ENCD_MTH_NM
			, AA.USR_ROLE_NM
			, AA.FRST_REGR_ID
			, AA.FRST_REG_DTM
			, AA.LST_MDFR_ID
			, AA.LST_MDF_DTM
			, AA.EXE_CMD
	 	FROM(
       SELECT 
      		  A.WRK_ID
			, B.DB_SVR_ID
            , (SELECT DB_SVR_NM FROM T_DBSVR_I WHERE B.DB_SVR_ID = DB_SVR_ID ) AS DB_SVR_NM
			, B.DB_ID
			, (CASE WHEN DB_ID>0 THEN (SELECT DB_NM FROM T_DB_I WHERE B.DB_ID=DB_ID AND USEYN = 'Y') ELSE '' END) AS DB_NM
			, A.BSN_DSCD
            , (SELECT SYS_CD_NM FROM T_SYSDTL_C WHERE A.BSN_DSCD = SYS_CD ) AS BSN_DSCD_NM 
            , B.BCK_BSN_DSCD
			, (SELECT SYS_CD_NM FROM T_SYSDTL_C WHERE B.BCK_BSN_DSCD = SYS_CD ) AS BCK_BSN_DSCD_NM
			, A.WRK_NM
			, A.WRK_EXP
			, B.BCK_OPT_CD
			, (SELECT SYS_CD_NM FROM T_SYSDTL_C WHERE B.BCK_OPT_CD = SYS_CD ) AS BCK_OPT_CD_NM
			, B.BCK_MTN_ECNT
			, B.CPS_YN
			, B.LOG_FILE_BCK_YN
			, B.LOG_FILE_STG_DCNT
			, B.LOG_FILE_MTN_ECNT
			, B.CPRT
			, B.SAVE_PTH
			, B.FILE_FMT_CD
			, B.FILE_STG_DCNT
			, B.ENCD_MTH_NM
			, B.USR_ROLE_NM
			, A.FRST_REGR_ID
			, TO_CHAR(A.FRST_REG_DTM,'YYYY-MM-DD HH24:MI:SS') AS FRST_REG_DTM
			, A.LST_MDFR_ID
			, TO_CHAR(A.LST_MDF_DTM,'YYYY-MM-DD HH24:MI:SS') AS LST_MDF_DTM
			, B.EXE_CMD
      FROM T_WRKCNG_I A, T_BCK_WRKCNG_I B 
      WHERE 1=1	
      AND A.WRK_ID = B.WRK_ID
      <if test="bsn_dscd != null and bsn_dscd != '' ">
      AND A.BSN_DSCD LIKE #{bsn_dscd}
      </if>
      <if test="db_svr_nm != null and db_svr_nm != '' ">
      AND DB_SVR_ID IN(SELECT 
						    			DB_SVR_ID 
						   	  FROM T_DBSVR_I 
						      WHERE DB_SVR_NM = #{db_svr_nm}) 
	  </if>
      <if test="wrk_nm != null and wrk_nm != '' ">
      	AND A.WRK_NM LIKE CONCAT('%',#{wrk_nm},'%')
      </if>
      ORDER BY A.LST_MDF_DTM DESC
      )AA
    </select>
    
    <select id="selectWorkListEN" resultType="workVO">
		/**
	 	* Query ID : selectWorkList
	 	* Description :  스케쥴 work List 조회
	 	* Author : 변승우
	 	**/
	 	SELECT
	 	      (ROW_NUMBER() OVER()) AS ROWNUM
			, (ROW_NUMBER() OVER()) AS IDX
			, AA.WRK_ID
			, AA.DB_SVR_ID
			, AA.DB_SVR_NM
			, AA.DB_ID
			, AA.DB_NM
			, AA.BSN_DSCD
			, AA.BSN_DSCD_NM
			, AA.BCK_BSN_DSCD
			, AA.BCK_BSN_DSCD_NM
			, AA.WRK_NM
			, AA.WRK_EXP
			, AA.BCK_OPT_CD
			, AA.BCK_OPT_CD_NM
			, AA.BCK_MTN_ECNT
			, AA.CPS_YN
			, AA.LOG_FILE_BCK_YN
			, AA.LOG_FILE_STG_DCNT
			, AA.LOG_FILE_MTN_ECNT
			, AA.CPRT
			, AA.SAVE_PTH
			, AA.FILE_FMT_CD
			, AA.FILE_STG_DCNT
			, AA.ENCD_MTH_NM
			, AA.USR_ROLE_NM
			, AA.FRST_REGR_ID
			, AA.FRST_REG_DTM
			, AA.LST_MDFR_ID
			, AA.LST_MDF_DTM
			, AA.EXE_CMD
	 	FROM(
       SELECT 
      		  A.WRK_ID
			, B.DB_SVR_ID
            , (SELECT DB_SVR_NM FROM T_DBSVR_I WHERE B.DB_SVR_ID = DB_SVR_ID ) AS DB_SVR_NM
			, B.DB_ID
			, (CASE WHEN DB_ID>0 THEN (SELECT DB_NM FROM T_DB_I WHERE B.DB_ID=DB_ID AND USEYN = 'Y') ELSE '' END) AS DB_NM
			, A.BSN_DSCD
            , (SELECT SYS_CD_NM_EN FROM T_SYSDTL_C WHERE A.BSN_DSCD = SYS_CD ) AS BSN_DSCD_NM 
            , B.BCK_BSN_DSCD
			, (SELECT SYS_CD_NM_EN FROM T_SYSDTL_C WHERE B.BCK_BSN_DSCD = SYS_CD ) AS BCK_BSN_DSCD_NM
			, A.WRK_NM
			, A.WRK_EXP
			, B.BCK_OPT_CD
			, (SELECT SYS_CD_NM FROM T_SYSDTL_C WHERE B.BCK_OPT_CD = SYS_CD ) AS BCK_OPT_CD_NM
			, B.BCK_MTN_ECNT
			, B.CPS_YN
			, B.LOG_FILE_BCK_YN
			, B.LOG_FILE_STG_DCNT
			, B.LOG_FILE_MTN_ECNT
			, B.CPRT
			, B.SAVE_PTH
			, B.FILE_FMT_CD
			, B.FILE_STG_DCNT
			, B.ENCD_MTH_NM
			, B.USR_ROLE_NM
			, A.FRST_REGR_ID
			, TO_CHAR(A.FRST_REG_DTM,'YYYY-MM-DD HH24:MI:SS') AS FRST_REG_DTM
			, A.LST_MDFR_ID
			, TO_CHAR(A.LST_MDF_DTM,'YYYY-MM-DD HH24:MI:SS') AS LST_MDF_DTM
			, B.EXE_CMD
      FROM T_WRKCNG_I A, T_BCK_WRKCNG_I B 
      WHERE 1=1	
      AND A.WRK_ID = B.WRK_ID
      <if test="bsn_dscd != null and bsn_dscd != '' ">
      AND A.BSN_DSCD LIKE #{bsn_dscd}
      </if>
      <if test="db_svr_nm != null and db_svr_nm != '' ">
      AND DB_SVR_ID IN(SELECT 
						    			DB_SVR_ID 
						   	  FROM T_DBSVR_I 
						      WHERE DB_SVR_NM = #{db_svr_nm}) 
	  </if>
      <if test="wrk_nm != null and wrk_nm != '' ">
      	AND A.WRK_NM LIKE CONCAT('%',#{wrk_nm},'%')
      </if>
      ORDER BY A.LST_MDF_DTM DESC
      )AA
    </select>
  
  
  	<select id="selectScheduleWorkList" resultType="Map" parameterType="HashMap">
		/**
	 	* Query ID : selectScheduleWorkList
	 	* Description :  선택된 work List 조회
	 	* Author : 변승우
	 	**/
       SELECT 
      		(ROW_NUMBER() OVER()) AS ROWNUM
      		,(ROW_NUMBER() OVER())+#{cnt} AS IDX
      		, WRK_ID
			, DB_SVR_ID
            , (SELECT DB_SVR_NM FROM T_DBSVR_I WHERE A.DB_SVR_ID = DB_SVR_ID ) AS DB_SVR_NM
			, DB_ID
			, (CASE WHEN DB_ID>0 THEN (SELECT DB_NM FROM T_DB_I WHERE A.DB_ID=DB_ID AND USEYN = 'Y') ELSE '' END) AS DB_NM
			, BCK_BSN_DSCD
			, (SELECT SYS_CD_NM FROM T_SYSDTL_C WHERE A.BCK_BSN_DSCD = SYS_CD ) AS BCK_BSN_DSCD_NM
			, (SELECT WRK_NM FROM T_WRKCNG_I WHERE WRK_ID = A.WRK_ID) WRK_NM
			, (SELECT WRK_EXP FROM T_WRKCNG_I WHERE WRK_ID = A.WRK_ID) WRK_EXP
			, 'N' AS NXT_EXE_YN
			, BCK_WRK_ID
			, (SELECT BSN_DSCD FROM T_WRKCNG_I WHERE WRK_ID = A.WRK_ID) BSN_DSCD
			, (SELECT SYS_CD_NM FROM T_SYSDTL_C WHERE (SELECT BSN_DSCD FROM T_WRKCNG_I WHERE WRK_ID = A.WRK_ID) = SYS_CD ) AS BSN_DSCD_NM	
      FROM T_BCK_WRKCNG_I A
      WHERE 1=1	
      AND WRK_ID IN
      <foreach item="item" index="index" collection="work_id" open="(" separator="," close=")"> 
				 #{item}::numeric
	   </foreach>
    </select>
    
    <select id="selectScheduleWorkListEN" resultType="Map" parameterType="HashMap">
		/**
	 	* Query ID : selectScheduleWorkList
	 	* Description :  선택된 work List 조회
	 	* Author : 변승우
	 	**/
       SELECT 
      		(ROW_NUMBER() OVER()) AS ROWNUM
      		,(ROW_NUMBER() OVER())+#{cnt} AS IDX
      		, WRK_ID
			, DB_SVR_ID
            , (SELECT DB_SVR_NM FROM T_DBSVR_I WHERE A.DB_SVR_ID = DB_SVR_ID ) AS DB_SVR_NM
			, DB_ID
			, (CASE WHEN DB_ID>0 THEN (SELECT DB_NM FROM T_DB_I WHERE A.DB_ID=DB_ID AND USEYN = 'Y') ELSE '' END) AS DB_NM
			, BCK_BSN_DSCD
			, (SELECT SYS_CD_NM_EN FROM T_SYSDTL_C WHERE A.BCK_BSN_DSCD = SYS_CD ) AS BCK_BSN_DSCD_NM
			, (SELECT WRK_NM FROM T_WRKCNG_I WHERE WRK_ID = A.WRK_ID) WRK_NM
			, (SELECT WRK_EXP FROM T_WRKCNG_I WHERE WRK_ID = A.WRK_ID) WRK_EXP
			, 'N' AS NXT_EXE_YN
			, BCK_WRK_ID
			, (SELECT BSN_DSCD FROM T_WRKCNG_I WHERE WRK_ID = A.WRK_ID) BSN_DSCD
			, (SELECT SYS_CD_NM_EN FROM T_SYSDTL_C WHERE (SELECT BSN_DSCD FROM T_WRKCNG_I WHERE WRK_ID = A.WRK_ID) = SYS_CD ) AS BSN_DSCD_NM	
      FROM T_BCK_WRKCNG_I A
      WHERE 1=1	
      AND WRK_ID IN
      <foreach item="item" index="index" collection="work_id" open="(" separator="," close=")"> 
				 #{item}::numeric
	   </foreach>
    </select>
    
      	<select id="selectDb2pgScheduleWorkList" resultType="Map" parameterType="HashMap">
		/**
	 	* Query ID : selectDb2pgScheduleWorkList
	 	* Description :  선택된 DB2PG work List 조회
	 	* Author : 변승우
	 	**/
		 	SELECT 
	      		(ROW_NUMBER() OVER()) AS ROWNUM
	      		,(ROW_NUMBER() OVER())+#{cnt} AS IDX
	      		, A.WRK_ID
				, A.wrk_nm
	            , A.wrk_exp
	            , (select DTB_NM from t_db2pg_sys_inf where db2pg_sys_id = B.db2pg_src_sys_id) || '  →  '  ||(select DTB_NM from t_db2pg_sys_inf where db2pg_sys_id = B.db2pg_trg_sys_id ) AS DB_SVR_NM
				, A.BSN_DSCD
				, (SELECT SYS_CD_NM FROM T_SYSDTL_C WHERE A.bsn_dscd = SYS_CD ) AS BSN_DSCD_NM
				, '데이터이관' as BCK_BSN_DSCD_NM
				, 'N' AS NXT_EXE_YN			
	      FROM t_wrkcng_i A, t_db2pg_trsf_wrk_inf B
	      WHERE 1=1	
	      and A.wrk_id = B.wrk_id      
	      AND A.WRK_ID IN
	      <foreach item="item" index="index" collection="work_id" open="(" separator="," close=")"> 
					 #{item}::numeric
		   </foreach> 
	 	</select>
    
   
    <select id="selectScd_id" resultType="int">
   		/**
	 	* Query ID : selectScm_id
	 	* Description : 스케줄 ID 조회
	 	* Author : 변승우
	 	**/
    	SELECT NEXTVAL('q_scd_m_01')
    </select>
    
    
    <insert id="insertSchedule" parameterType="scheduleVO">
		/**
	 	* Query ID : insertSchedule
	 	* Description : 스케줄 insert
	 	* Author : 변승우
	 	**/
		INSERT INTO T_SCD_M
			(
			SCD_ID
			, SCD_NM
			, SCD_EXP
			, SCD_CNDT
			, EXE_PERD_CD
			, EXE_DT
			, EXE_MONTH
			, EXE_DAY
			, EXE_HMS
			, PREV_EXE_DTM
			, NXT_EXE_DTM
			, FRST_REGR_ID
			, FRST_REG_DTM
			, LST_MDFR_ID
			, LST_MDF_DTM
			)
		VALUES
			(			
			#{scd_id}
			, #{scd_nm}
			, #{scd_exp}
			, 'TC001801'
			, #{exe_perd_cd}
			, #{exe_dt}
			, #{exe_month}
			, #{exe_day}
			, #{exe_hms}
			, #{prev_exe_dtm}
			, #{nxt_exe_dtm}
			, #{frst_regr_id}
			, clock_timestamp()
			, #{frst_regr_id}
			, clock_timestamp()
			)
	</insert>
	
	
	<insert id="insertScheduleDtl" parameterType="scheduleDtlVO">
		/**
	 	* Query ID : insertScheduleDtl
	 	* Description : 스케줄 상세정보 insert
	 	* Author : 변승우
	 	**/
		INSERT INTO T_SCD_D
			(
			SCD_DTL_ID
			, SCD_ID
			, WRK_ID
			, EXE_ORD
			, NXT_EXE_YN
			, FRST_REGR_ID
			, FRST_REG_DTM
			, LST_MDFR_ID
			, LST_MDF_DTM
			)
		VALUES
			(			
			nextval('q_scd_d_01')
			, #{scd_id}
			, #{wrk_id}
			, #{exe_ord}
			, #{nxt_exe_yn}
			, #{frst_regr_id}
			, clock_timestamp()
			, #{frst_regr_id}
			, clock_timestamp()
			)
	</insert>
	
	
<select id="selectScheduleList" resultType="hashMap">
		/**
	 	* Query ID : selectScheduleList
	 	* Description :  스케줄  List 조회
	 	* Author : 변승우
	 	**/
 		SELECT
                      (ROW_NUMBER() OVER()) AS ROWNUM
                       , (ROW_NUMBER() OVER()) AS IDX
                       , AA.db_svr_id
                       , AA.DB_SVR_NM
                       , AA.SCD_ID
                       , AA.SCD_NM
                       , AA.SCD_CNDT
                       , AA.SCD_EXP
                       , AA.EXE_PERD_CD
                       , AA.EXE_DT
                       , AA.EXE_MONTH
                       , AA.EXE_DAY
                       , AA.EXE_HMS
                       , AA.WRK_CNT
                       , AA.PREV_EXE_DTM
                       , AA.NXT_EXE_DTM
                       , AA.FRST_REGR_ID
                       , AA.FRST_REG_DTM
                       , AA.LST_MDFR_ID
                       , AA.LST_MDF_DTM
           FROM(              
               SELECT coalesce((select DB_SVR_NM from t_dbsvr_i where db_svr_id = d.db_svr_id),'MIGRATION') as DB_SVR_NM
                       , d.db_svr_id
                       , A.SCD_ID                   
                       , A.SCD_NM
                       , A.SCD_CNDT
                       , A.SCD_EXP
                       , A.EXE_PERD_CD
                       , A.EXE_DT
                       , A.EXE_MONTH
                       , A.EXE_DAY
                       , A.EXE_HMS
                       , (SELECT COUNT(*) FROM T_SCD_D WHERE SCD_ID = A.SCD_ID) AS WRK_CNT
                       , TO_CHAR(A.PREV_EXE_DTM,'YYYY-MM-DD HH24:MI:SS') AS PREV_EXE_DTM
                       , TO_CHAR(A.NXT_EXE_DTM,'YYYY-MM-DD HH24:MI:SS') AS NXT_EXE_DTM
                       , A.FRST_REGR_ID
                       , TO_CHAR(A.FRST_REG_DTM,'YYYY-MM-DD HH24:MI:SS') AS FRST_REG_DTM
                       , A.LST_MDFR_ID
                       , TO_CHAR(A.LST_MDF_DTM,'YYYY-MM-DD HH24:MI:SS') AS LST_MDF_DTM
               FROM T_SCD_M A
               left join
                    (select distinct Sb.SCD_ID, SD.db_svr_id
                from T_SCD_D SB, T_BCK_WRKCNG_I SD
               where SD.WRK_ID= SB.WRK_ID ) D
           on A.SCD_ID = D.SCD_ID
               where 1=1
      <if test="scd_nm != null and scd_nm != '' ">
      AND A.SCD_NM LIKE  '%' || #{scd_nm} || '%'
	  </if>
      <if test="scd_exp != null and scd_exp != '' ">
      	AND A.SCD_EXP LIKE CONCAT('%',#{scd_exp},'%')
      </if>
      <if test="scd_cndt != null and scd_cndt != '' ">
      	AND A.SCD_CNDT LIKE  '%' || #{scd_cndt} || '%'
      </if>
      <if test="frst_regr_id != null and frst_regr_id != '' ">
      	AND A.FRST_REGR_ID LIKE  '%' || #{frst_regr_id} || '%'
      </if>
      ORDER BY LST_MDF_DTM DESC
      )AA
    </select>	
    
    <select id="selectInitScheduleList" resultType="scheduleVO">
		/**
	 	* Query ID : selectInitScheduleList
	 	* Description :  스케줄  List 조회
	 	* Author : 변승우
	 	**/
       SELECT 
      		(ROW_NUMBER() OVER()) AS ROWNUM
			, (ROW_NUMBER() OVER()) AS IDX
      		, SCD_ID
			, SCD_NM
            , SCD_EXP
			, EXE_PERD_CD
			, EXE_DT
			, EXE_MONTH
			, EXE_DAY
			, EXE_HMS
			, TO_CHAR(PREV_EXE_DTM,'YYYY-MM-DD HH24:MI:SS') AS PREV_EXE_DTM
			, TO_CHAR(NXT_EXE_DTM,'YYYY-MM-DD HH24:MI:SS') AS NXT_EXE_DTM
			, FRST_REGR_ID
			, TO_CHAR(FRST_REG_DTM,'YYYY-MM-DD HH24:MI:SS') AS FRST_REG_DTM
			, LST_MDFR_ID
			, TO_CHAR(LST_MDF_DTM,'YYYY-MM-DD HH24:MI:SS') AS LST_MDF_DTM			
      FROM T_SCD_M
      WHERE 1=1	
      AND SCD_CNDT IN ('TC001801', 'TC001802')
      ORDER BY LST_MDF_DTM DESC
    </select>	
    
    
 
    <select id="selectExeScheduleList" resultType="hashMap" parameterType="string">
       		/**
	 	* Query ID : selectExeScheduleList
	 	* Description : 실행할 스케줄 정보 조회
	 	* Author : 변승우
	 	**/
<!-- 	 	SELECT 
				A.SCD_ID
		        , A.WRK_ID
		        , A.NXT_EXE_YN
		        , A.EXE_ORD
				, B.DB_SVR_ID
				, B.DB_ID
				, (CASE WHEN DB_ID>0 THEN (SELECT DB_NM FROM T_DB_I WHERE B.DB_ID=DB_ID AND USEYN = 'Y') ELSE '' END) AS DB_NM
				, B.BCK_BSN_DSCD
				, (SELECT SYS_CD_NM FROM T_SYSDTL_C WHERE B.BCK_BSN_DSCD = SYS_CD ) AS BCK_BSN_DSCD_NM
				, (SELECT WRK_NM FROM T_WRKCNG_I WHERE WRK_ID = B.WRK_ID) WRK_NM
				, (SELECT WRK_EXP FROM T_WRKCNG_I WHERE WRK_ID = B.WRK_ID) WRK_EXP
				, B.BCK_OPT_CD
				, (SELECT SYS_CD_NM FROM T_SYSDTL_C WHERE B.BCK_OPT_CD = SYS_CD ) AS BCK_OPT_CD_NM
				, B.BCK_MTN_ECNT
				, B.CPS_YN
				, B.LOG_FILE_BCK_YN
				, B.LOG_FILE_STG_DCNT
				, B.LOG_FILE_MTN_ECNT
				, B.CPRT
				, B.SAVE_PTH
				, B.FILE_FMT_CD
				, (SELECT SYS_CD_NM FROM T_SYSDTL_C WHERE B.FILE_FMT_CD = SYS_CD ) AS FILE_FMT_CD_NM
				, B.FILE_STG_DCNT
				, B.ENCD_MTH_NM
				, (SELECT SYS_CD_NM FROM T_SYSDTL_C WHERE B.ENCD_MTH_NM = SYS_CD ) AS INCD
				, B.USR_ROLE_NM
				, B.DATA_PTH
				, B.BCK_PTH
				, B.ACV_FILE_STGDT
				, B.ACV_FILE_MTNCNT
				, B.BCK_FILENM
				, B.LOG_FILE_PTH
				, C.DB_SVR_IPADR_ID
				, B.EXE_CMD
				, D.BSN_DSCD
           	    , (SELECT SYS_CD_NM FROM T_SYSDTL_C WHERE D.BSN_DSCD = SYS_CD ) AS BSN_DSCD_NM 
		FROM T_SCD_D A, T_BCK_WRKCNG_I B, T_DBSVRIPADR_I C, T_WRKCNG_I D
		WHERE 1 = 1
		AND A.WRK_ID = B.WRK_ID
		AND A.WRK_ID = D.WRK_ID
		AND B.DB_SVR_ID = C.DB_SVR_ID
        AND C.MASTER_GBN = 'M'
		AND A.SCD_ID = #{scd_id}::numeric
		ORDER BY A.EXE_ORD -->
		
		
		SELECT DISTINCT
		     		A.SCD_ID
		     		, A.NXT_EXE_YN
				    , A.EXE_ORD
				    , B.DB_SVR_ID
					, B.DB_ID
					, (CASE WHEN DB_ID>0 THEN (SELECT DB_NM FROM T_DB_I WHERE B.DB_ID=DB_ID AND USEYN = 'Y') ELSE '' END) AS DB_NM
					, B.BCK_BSN_DSCD
					, (SELECT SYS_CD_NM FROM T_SYSDTL_C WHERE B.BCK_BSN_DSCD = SYS_CD ) AS BCK_BSN_DSCD_NM
					, C.WRK_ID
					, C.WRK_NM
					, C.WRK_EXP
					, B.BCK_OPT_CD
					, (SELECT SYS_CD_NM FROM T_SYSDTL_C WHERE B.BCK_OPT_CD = SYS_CD ) AS BCK_OPT_CD_NM
					, B.BCK_MTN_ECNT
					, B.CPS_YN
					, B.LOG_FILE_BCK_YN
					, B.LOG_FILE_STG_DCNT
					, B.LOG_FILE_MTN_ECNT
					, B.CPRT
					, B.SAVE_PTH
					, B.FILE_FMT_CD
					, (SELECT SYS_CD_NM FROM T_SYSDTL_C WHERE B.FILE_FMT_CD = SYS_CD ) AS FILE_FMT_CD_NM
					, B.FILE_STG_DCNT
					, B.ENCD_MTH_NM
					, (SELECT SYS_CD_NM FROM T_SYSDTL_C WHERE B.ENCD_MTH_NM = SYS_CD ) AS INCD
					, B.USR_ROLE_NM
					, B.DATA_PTH
					, B.BCK_PTH
					, B.ACV_FILE_STGDT
					, B.ACV_FILE_MTNCNT
					, B.BCK_FILENM
					, B.LOG_FILE_PTH
					, B.EXE_CMD
					, C.BSN_DSCD
					, D.DB_SVR_IPADR_ID					
					, A.LST_MDFR_ID
	    FROM T_SCD_D A
	    LEFT OUTER JOIN T_WRKCNG_I C ON A.WRK_ID= C.WRK_ID
	    LEFT OUTER JOIN T_BCK_WRKCNG_I B ON A.WRK_ID = B.WRK_ID 
	    LEFT OUTER JOIN T_DBSVRIPADR_I D ON D.DB_SVR_ID = B.DB_SVR_ID AND D.MASTER_GBN='M'
	    WHERE 1=1
	    AND A.SCD_ID = #{scd_id}::numeric
	    ORDER BY A.EXE_ORD
	</select>
	
	
	<update id="updateNxtJobTime" parameterType="hashMap">
	   	/**
	 	* Query ID : updateNxtJobTime
	 	* Description : 다음 실행할 스케줄 시간 업데이트
	 	* Author : 변승우
	 	**/
	 	UPDATE T_SCD_M
	 	SET
		       NXT_EXE_DTM=#{nFireTime} 	
	 	WHERE SCD_ID=#{scd_id}::numeric	
	</update>
	
	<update id="updatePrevJobTime" parameterType="hashMap">
	   	/**
	 	* Query ID : updatePrevJobTime
	 	* Description : 다음 실행할 스케줄 시간 업데이트
	 	* Author : 변승우
	 	**/
	 	UPDATE T_SCD_M
	 	SET
		       PREV_EXE_DTM=#{nFireTime} 	
	 	WHERE SCD_ID=#{scd_id}::numeric	
	</update>
	
	
	<select id="selectDbconn" resultType="hashMap" parameterType="int">
   		/**
	 	* Query ID : selectDbconn
	 	* Description : Db서버 정보
	 	* Author : 변승우
	 	**/
		SELECT DISTINCT
                 A.DB_SVR_ID
                , A.DB_SVR_NM
                , B.IPADR
                , B.PORTNO
                , A.DFT_DB_NM
                , A.SVR_SPR_USR_ID
                , A.SVR_SPR_SCM_PWD
                , B.MASTER_GBN
                , B.DB_SVR_IPADR_ID
			, A.FRST_REGR_ID
			, TO_CHAR(A.FRST_REG_DTM,'YYYY-MM-DD HH24:MI:SS') AS FRST_REG_DTM
			, A.LST_MDFR_ID
			, TO_CHAR(A.LST_MDF_DTM,'YYYY-MM-DD HH24:MI:SS') AS LST_MDF_DTM
          FROM T_DBSVR_I A, T_DBSVRIPADR_I B, T_SCD_D C, T_BCK_WRKCNG_I D	
          WHERE 1 = 1         
          AND A.DB_SVR_ID = B.DB_SVR_ID
          AND A.DB_SVR_ID = D.DB_SVR_ID
          AND C.WRK_ID = D.WRK_ID
          AND B.MASTER_GBN = 'M'
	      AND C.SCD_ID = #{scd_id}
	      ORDER BY B.MASTER_GBN
	</select>
		
		
	<select id="selectAddOption" resultType="hashMap" parameterType="int">
   		/**
	 	* Query ID : selectAddOption
	 	* Description : 부가옵션조회
	 	* Author : 변승우
	 	**/
	     SELECT 
	    		 A.WRK_ID
	    		, A.BCK_WRK_ID
	            , B.GRP_CD
	            , (SELECT GRP_CD_NM FROM T_SYSGRP_C WHERE B.GRP_CD = GRP_CD ) AS GRP_CD_NM
	            , B.OPT_CD
	            , (SELECT SYS_CD_NM FROM T_SYSDTL_C WHERE B.OPT_CD = SYS_CD ) AS OPT_CD_NM
	            , B.BCK_OPT_VAL
		 FROM T_BCK_WRKCNG_I A, T_BCKOPT_I B
	     WHERE 1 = 1
	     AND A.BCK_WRK_ID = B.BCK_WRK_ID
	     AND A.WRK_ID = #{wrk_id}
	</select>


	<select id="selectAddObject" resultType="hashMap" parameterType="int">
	   		/**
		 	* Query ID : selectAddObject
		 	* Description : 오브젝트 옵션조회
		 	* Author : 변승우
		 	**/
		     SELECT 
					 	A.WRK_ID
			            , B.DB_ID
			            , (SELECT DB_NM FROM T_DB_I WHERE A.DB_ID = DB_ID  AND USEYN = 'Y') AS DB_NM
			            , B.SCM_NM
			            , B.OBJ_NM
			 FROM T_BCK_WRKCNG_I A, T_BCKOBJ_L B
		     WHERE 1 = 1
		     AND A.BCK_WRK_ID = B.BCK_WRK_ID
		     AND A.WRK_ID = #{wrk_id}
	</select>		
		
			
	<delete id="deleteDscheduleList" parameterType="int">
	   	/**
	 	* Query ID : deleteDscheduleList
	 	* Description : 스케줄 DETAIL 삭제
	 	* Author : 변승우
	 	**/
	 	DELETE
	 	FROM  T_SCD_D
	 	WHERE SCD_ID=#{scd_id}
	</delete>
	
	
	<delete id="deleteMscheduleList" parameterType="int">
	   	/**
	 	* Query ID : deleteMscheduleList
	 	* Description :  스케줄 MASTER 삭제
	 	* Author : 변승우
	 	**/
	 	DELETE
	 	FROM  T_SCD_M
	 	WHERE SCD_ID=#{scd_id}
	</delete>
	

    <select id="selectModifyScheduleList" resultType="hashMap" parameterType="int">
		/**
	 	* Query ID : selectModifyScheduleList
	 	* Description :  스케줄  List 조회
	 	* Author : 변승우
	 	**/
	 	SELECT 
	 	      (ROW_NUMBER() OVER()) AS ROWNUM
			, (ROW_NUMBER() OVER()) AS IDX
			, AA.*
		FROM(
		   SELECT
	    			      E.SCD_ID
						, E.SCD_NM
			            , E.SCD_EXP
						, E.EXE_PERD_CD
						, E.EXE_MONTH
						, E.EXE_DAY
						, E.EXE_DT
						, E.EXE_HMS      
						, COALESCE((SELECT DB_SVR_NM FROM T_DBSVR_I WHERE B.DB_SVR_ID = DB_SVR_ID ), (SELECT DTB_NM FROM T_DB2PG_SYS_INF WHERE DB2PG_SYS_ID = F.DB2PG_SRC_SYS_ID) || '  →  '  ||(SELECT DTB_NM FROM T_DB2PG_SYS_INF WHERE DB2PG_SYS_ID = F.DB2PG_TRG_SYS_ID )) AS DB_SVR_NM						
						, COALESCE((SELECT SYS_CD_NM FROM T_SYSDTL_C WHERE B.BCK_BSN_DSCD = SYS_CD ),'데이터이관') AS BCK_BSN_DSCD_NM
						, TO_CHAR(E.PREV_EXE_DTM,'YYYY-MM-DD HH24:MI:SS') AS PREV_EXE_DTM
						, TO_CHAR(E.NXT_EXE_DTM,'YYYY-MM-DD HH24:MI:SS') AS NXT_EXE_DT				
						, A.WRK_ID
						, A.NXT_EXE_YN
						, A.EXE_ORD
						, B.BCK_WRK_ID
			            , B.BCK_BSN_DSCD
			            , B.DB_SVR_ID
			            , C.WRK_NM
			            , C.WRK_EXP
			            , B.EXE_CMD
			            , C.BSN_DSCD
		           	    , (SELECT SYS_CD_NM FROM T_SYSDTL_C WHERE C.BSN_DSCD = SYS_CD ) AS BSN_DSCD_NM 
		FROM T_SCD_D A
		JOIN T_SCD_M E ON E.SCD_ID = A.SCD_ID AND E.SCD_ID = #{scd_id}
	    LEFT OUTER JOIN T_WRKCNG_I C ON A.WRK_ID= C.WRK_ID
	    LEFT OUTER JOIN T_BCK_WRKCNG_I B ON A.WRK_ID = B.WRK_ID
	    LEFT OUTER JOIN T_DB2PG_TRSF_WRK_INF F ON A.WRK_ID = F.WRK_ID 
	    LEFT OUTER JOIN T_DBSVRIPADR_I D ON D.DB_SVR_ID = B.DB_SVR_ID AND D.MASTER_GBN='M'
	    ORDER BY A.EXE_ORD
	    )AA
	 	<!-- SELECT 
	 	      (ROW_NUMBER() OVER()) AS ROWNUM
			, (ROW_NUMBER() OVER()) AS IDX
			, A.*
		FROM(	
				 	SELECT 
			      		(ROW_NUMBER() OVER()) AS ROWNUM
						, (ROW_NUMBER() OVER()) AS IDX
			      		, A.SCD_ID
						, A.SCD_NM
			            , A.SCD_EXP
						, A.EXE_PERD_CD
						, A.EXE_MONTH
						, A.EXE_DAY
						, A.EXE_DT
						, A.EXE_HMS      
						, (SELECT DB_SVR_NM FROM T_DBSVR_I WHERE C.DB_SVR_ID = DB_SVR_ID ) AS DB_SVR_NM
						, (SELECT SYS_CD_NM FROM T_SYSDTL_C WHERE C.BCK_BSN_DSCD = SYS_CD ) AS BCK_BSN_DSCD_NM
						, TO_CHAR(A.PREV_EXE_DTM,'YYYY-MM-DD HH24:MI:SS') AS PREV_EXE_DTM
						, TO_CHAR(A.NXT_EXE_DTM,'YYYY-MM-DD HH24:MI:SS') AS NXT_EXE_DTM
						, B.WRK_ID
						, B.NXT_EXE_YN
						, B.EXE_ORD
			            , C.BCK_WRK_ID
			            , C.BCK_BSN_DSCD
			            , C.DB_SVR_ID
			            , (SELECT WRK_NM FROM T_WRKCNG_I WHERE WRK_ID = C.WRK_ID) WRK_NM
			            , (SELECT WRK_EXP FROM T_WRKCNG_I WHERE WRK_ID = C.WRK_ID) WRK_EXP
			            , C.EXE_CMD
						, D.BSN_DSCD
		           	    , (SELECT SYS_CD_NM FROM T_SYSDTL_C WHERE D.BSN_DSCD = SYS_CD ) AS BSN_DSCD_NM 
			      FROM T_SCD_M A, T_SCD_D B, T_BCK_WRKCNG_I C, T_WRKCNG_I D
			      WHERE 1=1	
			      AND B.WRK_ID = C.WRK_ID
			      AND B.WRK_ID = D.WRK_ID
			      AND A.SCD_ID = B.SCD_ID
			      AND A.SCD_ID = #{scd_id}
			      ORDER BY EXE_ORD
			      )A -->
	 </select>	
	 
	 
	 
	 <update id="updateSchedule" parameterType="scheduleVO">
	   	/**
	 	* Query ID : updateSchedule
	 	* Description : 스케줄마스터 수정
	 	* Author : 변승우
	 	**/
	 	UPDATE T_SCD_M
	 	SET
			SCD_NM = #{scd_nm} 	
			, SCD_EXP = #{scd_exp} 	
			, EXE_PERD_CD = #{exe_perd_cd} 	
			, EXE_DT = #{exe_dt}
			, EXE_MONTH = #{exe_month}
			, EXE_DAY = #{exe_day}
			, EXE_HMS = #{exe_hms} 	
			, PREV_EXE_DTM = #{prev_exe_dtm} 	 
			, NXT_EXE_DTM = #{nxt_exe_dtm} 	
			, LST_MDFR_ID = #{frst_regr_id}
			, LST_MDF_DTM = clock_timestamp()
	 	WHERE SCD_ID=#{scd_id}::numeric	
	</update>
	
	
	
	<update id="deleteScheduleDtl" parameterType="scheduleDtlVO">
	   	/**
	 	* Query ID : deleteScheduleDtl
	 	* Description : 스케줄 디테일(work) 삭제
	 	* Author : 변승우
	 	**/
	 	DELETE FROM T_SCD_D
	 	WHERE SCD_ID=#{scd_id}::numeric	
	</update>	
	
	
	<update id="updateScheduleStatus" parameterType="scheduleVO">
	   	/**
	 	* Query ID : updateScheduleStatus
	 	* Description : 다음 실행할 스케줄 시간 업데이트
	 	* Author : 변승우
	 	**/
	 	UPDATE T_SCD_M
	 	SET
		       SCD_CNDT=#{scd_cndt} 	
	 	WHERE SCD_ID=#{scd_id}
	</update>
	
	
	<select id="scd_nmCheck" resultType="int">
		/**
		* Query ID : scd_nmCheck
		* Description : 스케줄명 중복 체크
		* Author : 변승우
		**/
		SELECT 
				 COUNT(*)
		FROM T_SCD_M
		WHERE SCD_NM = #{scd_nm}
	</select>	
	
	
		<select id="selectWrkScheduleList" resultType="Map" parameterType="HashMap">
		/**
	 	* Query ID : selectWrkScheduleList
	 	* Description :  work List 조회
	 	* Author : 변승우
	 	**/	 	
	 	
	 	<!-- SELECT 
      		(ROW_NUMBER() OVER()) AS ROWNUM
      		,(ROW_NUMBER() OVER()) AS IDX
      		,A.*
      	FROM(
				 	SELECT 
			      		A.WRK_ID
						, A.DB_SVR_ID
			            , B.SCD_ID
			            , (SELECT DB_SVR_NM FROM T_DBSVR_I WHERE A.DB_SVR_ID = DB_SVR_ID ) AS DB_SVR_NM
						, A.DB_ID
						, (CASE WHEN DB_ID>0 THEN (SELECT DB_NM FROM T_DB_I WHERE A.DB_ID=DB_ID AND USEYN = 'Y') ELSE '' END) AS DB_NM
						, A.BCK_BSN_DSCD
						, (SELECT SYS_CD_NM FROM T_SYSDTL_C WHERE A.BCK_BSN_DSCD = SYS_CD ) AS BCK_BSN_DSCD_NM
						, (SELECT WRK_NM FROM T_WRKCNG_I WHERE WRK_ID = A.WRK_ID) WRK_NM
						, (SELECT WRK_EXP FROM T_WRKCNG_I WHERE WRK_ID = A.WRK_ID) WRK_EXP
						, B.NXT_EXE_YN
						, C.BSN_DSCD
						, (SELECT SYS_CD_NM FROM T_SYSDTL_C WHERE C.BSN_DSCD = SYS_CD ) AS BSN_DSCD_NM						
			      FROM T_BCK_WRKCNG_I A, T_SCD_D B, T_WRKCNG_I C
			      WHERE 1=1
			      AND A.WRK_ID = B.WRK_ID
			      AND A.WRK_ID = C.WRK_ID
			      AND B.SCD_ID = #{scd_id}
			      ORDER BY B.EXE_ORD
			      )A -->
			      
			      
			SELECT 
	      		(ROW_NUMBER() OVER()) AS ROWNUM
	      		,(ROW_NUMBER() OVER()) AS IDX
	      		,A.*
	      	FROM(
				     SELECT 
				      		A.WRK_ID
				      		, B.DB_SVR_ID
				      		, C.SCD_ID
				      		, (SELECT DB_SVR_NM FROM T_DBSVR_I WHERE B.DB_SVR_ID = DB_SVR_ID ) AS DB_SVR_NM
				      		, B.DB_ID
				      		, (CASE WHEN B.DB_ID>0 THEN (SELECT DB_NM FROM T_DB_I WHERE B.DB_ID=DB_ID AND USEYN = 'Y') ELSE '' END) AS DB_NM
				      		, B.BCK_BSN_DSCD
				      		, (SELECT SYS_CD_NM FROM T_SYSDTL_C WHERE B.BCK_BSN_DSCD = SYS_CD ) AS BCK_BSN_DSCD_NM
				      		, A.WRK_NM
							, A.WRK_EXP
							, C.NXT_EXE_YN
							, A.BSN_DSCD
							, (SELECT SYS_CD_NM FROM T_SYSDTL_C WHERE A.BSN_DSCD = SYS_CD ) AS BSN_DSCD_NM		
				      FROM T_WRKCNG_I A
					  LEFT OUTER JOIN T_BCK_WRKCNG_I B ON B.WRK_ID= A.WRK_ID
					  LEFT OUTER JOIN T_SCD_D C ON C.WRK_ID= A.WRK_ID
					  WHERE 1=1
					  AND C.SCD_ID = #{scd_id}
				      ORDER BY C.EXE_ORD 
				  )A  
	 	</select>
	 	
	 	<select id="selectWrkScheduleListEN" resultType="Map" parameterType="HashMap">
		/**
	 	* Query ID : selectWrkScheduleList
	 	* Description :  work List 조회
	 	* Author : 변승우
	 	**/	 	
			        
			SELECT 
	      		(ROW_NUMBER() OVER()) AS ROWNUM
	      		,(ROW_NUMBER() OVER()) AS IDX
	      		,A.*
	      	FROM(
				     SELECT 
				      		A.WRK_ID
				      		, B.DB_SVR_ID
				      		, C.SCD_ID
				      		, (SELECT DB_SVR_NM FROM T_DBSVR_I WHERE B.DB_SVR_ID = DB_SVR_ID ) AS DB_SVR_NM
				      		, B.DB_ID
				      		, (CASE WHEN B.DB_ID>0 THEN (SELECT DB_NM FROM T_DB_I WHERE B.DB_ID=DB_ID AND USEYN = 'Y') ELSE '' END) AS DB_NM
				      		, B.BCK_BSN_DSCD
				      		, (SELECT SYS_CD_NM_EN FROM T_SYSDTL_C WHERE B.BCK_BSN_DSCD = SYS_CD ) AS BCK_BSN_DSCD_NM
				      		, A.WRK_NM
							, A.WRK_EXP
							, C.NXT_EXE_YN
							, A.BSN_DSCD
							, (SELECT SYS_CD_NM_EN FROM T_SYSDTL_C WHERE A.BSN_DSCD = SYS_CD ) AS BSN_DSCD_NM		
				      FROM T_WRKCNG_I A
					  LEFT OUTER JOIN T_BCK_WRKCNG_I B ON B.WRK_ID= A.WRK_ID
					  LEFT OUTER JOIN T_SCD_D C ON C.WRK_ID= A.WRK_ID
					  WHERE 1=1
					  AND C.SCD_ID = #{scd_id}
				      ORDER BY C.EXE_ORD 
				  )A  
	 	</select>
	 	
	 	
	 <select id="selectWorkDivList" resultType="Map" parameterType="HashMap">
		/**
	 	* Query ID : selectWorkDivList
	 	* Description :  work List 조회
	 	* Author : 변승우
	 	**/
		SELECT 
	    	BSN_DSCD
	        , (SELECT SYS_CD_NM FROM T_SYSDTL_C WHERE BSN_DSCD = SYS_CD ) AS BSN_DSCD_NM
	    FROM T_WRKCNG_I
	    WHERE BSN_DSCD IN ('TC001901', 'TC001902')
	    GROUP BY BSN_DSCD
	 </select>
	 
	 <select id="selectWorkDivListEN" resultType="Map" parameterType="HashMap">
		/**
	 	* Query ID : selectWorkDivList
	 	* Description :  work List 조회
	 	* Author : 변승우
	 	**/
		SELECT 
	    	BSN_DSCD
	        , (SELECT SYS_CD_NM_EN FROM T_SYSDTL_C WHERE BSN_DSCD = SYS_CD ) AS BSN_DSCD_NM
	    FROM T_WRKCNG_I
	    WHERE BSN_DSCD IN ('TC001901', 'TC001902')
	    GROUP BY BSN_DSCD
	 </select>
	 
	 
	<select id="selectScdInfoEn" resultType="hashMap" parameterType="int">
   		/**
	 	* Query ID : selectScdInfo
	 	* Description : 스케줄 정보 조회
	 	* Author : 변승우
	 	**/
		SELECT 
	      		(ROW_NUMBER() OVER()) AS ROWNUM
				,(ROW_NUMBER() OVER()) AS IDX
	      		, SCD_ID
				, SCD_NM
	            , SCD_CNDT
	            , (SELECT SYS_CD_NM FROM T_SYSDTL_C WHERE SCD_CNDT = SYS_CD ) AS SCD_CNDT_NM
	            , SCD_EXP
	            , (SELECT SYS_CD_NM_EN FROM T_SYSDTL_C WHERE EXE_PERD_CD = SYS_CD ) AS EXE_PERD_CD_NM
				, EXE_PERD_CD
				, EXE_MONTH
				, EXE_DAY
				, EXE_DT
				, EXE_HMS      
	      FROM T_SCD_M 
	      WHERE SCD_ID = #{scd_id} 
	</select>
	
	<select id="selectScdInfo" resultType="hashMap" parameterType="int">
   		/**
	 	* Query ID : selectScdInfo
	 	* Description : 스케줄 정보 조회
	 	* Author : 변승우
	 	**/
		SELECT 
	      		(ROW_NUMBER() OVER()) AS ROWNUM
				,(ROW_NUMBER() OVER()) AS IDX
	      		, SCD_ID
				, SCD_NM
	            , SCD_CNDT
	            , (SELECT SYS_CD_NM FROM T_SYSDTL_C WHERE SCD_CNDT = SYS_CD ) AS SCD_CNDT_NM
	            , SCD_EXP
	            , (SELECT SYS_CD_NM FROM T_SYSDTL_C WHERE EXE_PERD_CD = SYS_CD ) AS EXE_PERD_CD_NM
				, EXE_PERD_CD
				, EXE_MONTH
				, EXE_DAY
				, EXE_DT
				, EXE_HMS      
	      FROM T_SCD_M 
	      WHERE SCD_ID = #{scd_id} 
	</select>

	<select id="selectWrkInfo" resultType="hashMap" parameterType="int">
   		/**
	 	* Query ID : selectWrkInfo
	 	* Description : work 정보 조회
	 	* Author : 변승우
	 	**/
		SELECT 
				B.BCK_WRK_ID
				, A.BSN_DSCD
		        ,(SELECT SYS_CD_NM FROM T_SYSDTL_C WHERE A.BSN_DSCD = SYS_CD ) AS BSN_DSCD_NM
				, A.WRK_ID
		        , A.WRK_NM
		        , A.WRK_EXP
		        , B.BCK_BSN_DSCD
		        , B.BCK_OPT_CD
		        ,(SELECT SYS_CD_NM FROM T_SYSDTL_C WHERE B.BCK_OPT_CD = SYS_CD ) AS BCK_OPT_CD_NM
		        ,(SELECT SYS_CD_NM FROM T_SYSDTL_C WHERE B.BCK_BSN_DSCD = SYS_CD ) AS BCK_BSN_DSCD_NM
		        , B.CPS_YN 
		        , B.LOG_FILE_PTH 
		        , B.DATA_PTH 
		        , B.BCK_PTH 
		        , B.FILE_STG_DCNT
		        , B.BCK_MTN_ECNT
		        , B.ACV_FILE_STGDT 
		        , B.ACV_FILE_MTNCNT    
		        , B.LOG_FILE_BCK_YN
		        , B.LOG_FILE_STG_DCNT
		        , B.LOG_FILE_MTN_ECNT
		        , B.DB_ID
                , (SELECT DB_NM FROM T_DB_I WHERE B.DB_ID = DB_ID ) AS DB_NM
                , B.SAVE_PTH
                , B.FILE_FMT_CD
                , (SELECT SYS_CD_NM FROM T_SYSDTL_C WHERE B.FILE_FMT_CD = SYS_CD ) AS FILE_FMT_CD_NM
                , B.CPRT
                ,(SELECT SYS_CD_NM FROM T_SYSDTL_C WHERE B.ENCD_MTH_NM = SYS_CD ) AS  ENCD_MTH_NM
                , B.USR_ROLE_NM
                , B.DB_SVR_ID
		FROM T_WRKCNG_I A, T_BCK_WRKCNG_I B   
		WHERE A.WRK_ID = B.WRK_ID
		AND A.WRK_ID = #{wrk_id}  
	</select>
	
	<select id="selectRunScheduleList" resultType="hashMap">
		/**
	 	* Query ID : selectRunScheduleList
	 	* Description :  실행중인 스케줄 정보 조회
	 	* Author : 변승우
	 	**/
		SELECT 
				A.BCK_PTH
		FROM T_BCK_WRKCNG_I A, T_SCD_D B, T_SCD_M C
		WHERE 1 = 1
		AND A.WRK_ID = B.WRK_ID
		AND B.SCD_ID = C.SCD_ID
		AND A.BCK_BSN_DSCD = 'TC000201'
		AND C.SCD_CNDT = 'TC001802'
	 </select>
	 
	 <update id="updateSCD_CNDT"  parameterType="hashMap">
   		/**
	 	* Query ID : updateSCD_CNDT
	 	* Description : 작업상태변경
	 	* Author : 변승우
	 	**/
		UPDATE T_SCD_M
		SET
			SCD_CNDT = 'TC001803'
			, LST_MDF_DTM = now()
		WHERE
			SCD_ID = #{scd_id}				
    </update>
    
    
    <select id="selectQ_WRKEXE_G_01_SEQ" resultType="int">
   		/**
	 	* Query ID : selectQ_WRKEXE_G_01_SEQ
	 	* Description : 작업실행로그 seq 조회
	 	* Author : 변승우
	 	**/
    	SELECT NEXTVAL('q_wrkexe_g_01')
    </select>
    
    
      <insert id="insertT_WRKEXE_G"  parameterType="wrkExeVO">
   		/**
	 	* Query ID : insertT_WRKEXE_G
	 	* Description : 작업실행로그 insert
	 	* Author : 변승우
	 	**/
	 	INSERT INTO T_WRKEXE_G
	 	(
			EXE_SN
			, SCD_ID
			, WRK_ID
			, WRK_STRT_DTM
			, WRK_END_DTM
			, EXE_RSLT_CD
			, BCK_OPT_CD
			, TLI
			, FILE_SZ
			, DB_ID
			, BCK_FILE_PTH
			, RSLT_MSG
			, FRST_REGR_ID
			, LST_MDFR_ID
			, EXE_GRP_SN
			, SCD_NM
			, WRK_NM
			, DB_SVR_IPADR_ID
	 	)
	 	VALUES
	 	(
			#{exe_sn}
			, #{scd_id}
			, #{wrk_id}
			, now()
			, now()
			, #{exe_rslt_cd}
			, #{bck_opt_cd}
			, 0
			, 0
			, #{db_id}
			, #{bck_file_pth}
			, #{rslt_msg}
			, 'system'
			, 'system'
			, #{exe_grp_sn}
			, (SELECT SCD_NM FROM T_SCD_M WHERE SCD_ID = #{scd_id})
			, (SELECT WRK_NM FROM T_WRKCNG_I WHERE WRK_ID = #{wrk_id})
			, #{db_svr_ipadr_id}
	 	)
    </insert>
    
    
    <select id="selectQ_WRKEXE_G_02_SEQ" resultType="int">
   		/**
	 	* Query ID : selectQ_WRKEXE_G_02_SEQ
	 	* Description : 작업실행로그 실행그룹 seq 조회
	 	* Author : 변승우
	 	**/
    	SELECT NEXTVAL('Q_WRKEXE_G_02')
    </select>
    
    
    <update id="updateFixRslt"  parameterType="hashMap">
   		/**
	 	* Query ID : updateFixRslt
	 	* Description : 조치결과 업데이트
	 	* Author : 변승우
	 	**/
		UPDATE T_WRKEXE_G
		SET
			FIX_RSLTCD = #{fix_rsltcd}
			, FIX_RSLT_MSG = #{fix_rslt_msg}
			, LST_MDFR_ID = #{lst_mdfr_id}
			, LST_MDF_DTM = now()
		WHERE
			EXE_SN = #{exe_sn}				
    </update>
    
    
    <select id="selectFixRsltMsg" parameterType="int" resultType="hashMap">
		/**
	 	* Query ID : selectFixRsltMsg
	 	* Description : 조치결과정보 
	 	* Author : 변승우
	 	**/
 			SELECT 
 					EXE_SN
 					, FIX_RSLTCD
	                , FIX_RSLT_MSG
	                , LST_MDFR_ID
	                , TO_CHAR(LST_MDF_DTM,'YYYY-MM-DD HH24:MI:SS') AS LST_MDF_DTM
	          FROM T_WRKEXE_G
	          WHERE 1 = 1
		      AND EXE_SN = #{exe_sn}		
    </select>	


    <select id="selectOldSavePath" parameterType="int" resultType="String">
		/**
	 	* Query ID : selectOldSavePath
	 	* Description : 기존 저장경로 호출
	 	* Author : 변승우
	 	**/
 			 SELECT 
	    		TRANS_SAVE_PTH 
			 FROM T_DB2PG_TRSF_WRK_INF
			 WHERE WRK_ID = #{wrk_id}	
    </select>	
</mapper>
