<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="scheduleHistorySql">

	<select id="selectScheduleHistory" resultType="hashmap" parameterType="hashmap" >
		/**
		* Query ID : selectScheduleHistory
		* Description : 스케줄이력 조회
		* Author : 변승우
		**/
		SELECT
		  (ROW_NUMBER() OVER()) AS ROWNUM
		, (ROW_NUMBER() OVER()) AS IDX
		, AA.SCD_ID
		, AA.IPADR
		, AA.EXE_GRP_SN
		, AA.SCD_NM
		, AA.EXE_SN
		, AA.EXE_RSLT_CD
		, AA.DB_SVR_NM
		, TO_CHAR(AA.WRK_STRT_DTM,'YYYY-MM-DD HH24:MI:SS') AS WRK_STRT_DTM
		, TO_CHAR(AA.WRK_END_DTM,'YYYY-MM-DD HH24:MI:SS') AS WRK_END_DTM
		, AA.WRK_DTM
		FROM(
			SELECT 		
	        A.SCD_ID
	        , C.IPADR
	        , A.EXE_GRP_SN 
			, A.SCD_NM
			, MIN(A.EXE_SN) AS EXE_SN
			, MAX(A.EXE_RSLT_CD) AS EXE_RSLT_CD
			, (SELECT S.DB_SVR_NM FROM T_DBSVR_I S,T_DBSVRIPADR_I D WHERE S.DB_SVR_ID=D.DB_SVR_ID AND D.DB_SVR_IPADR_ID=A.DB_SVR_IPADR_ID)AS DB_SVR_NM
			, MIN(A.WRK_STRT_DTM) AS WRK_STRT_DTM
			, MAX(A.WRK_END_DTM) AS WRK_END_DTM
			, TO_CHAR(TO_CHAR(MAX(A.WRK_END_DTM),'YYYY-MM-DD HH24:MI:SS')::TIMESTAMP - TO_CHAR(MIN(A.WRK_STRT_DTM),'YYYY-MM-DD HH24:MI:SS')::TIMESTAMP, 'HH24시MI분SS초') AS WRK_DTM
			FROM T_WRKEXE_G A
			LEFT OUTER JOIN T_DBSVRIPADR_I C ON A.DB_SVR_IPADR_ID= C.DB_SVR_IPADR_ID or A.DB_SVR_IPADR_ID=0
			WHERE 1 = 1
			AND C.MASTER_GBN = 'M'
			<if test="lgi_dtm_start != null and lgi_dtm_start != '' ">
			 AND to_char(A.WRK_END_DTM,'YYYY-MM-DD') between #{lgi_dtm_start} and #{lgi_dtm_end}
			</if>
			<if test="scd_nm != null and scd_nm != '' ">
			AND A.SCD_NM LIKE #{scd_nm}
			</if>		
			AND A.EXE_RSLT_CD LIKE #{exe_result}
			GROUP BY A.EXE_GRP_SN, A.SCD_NM, A.DB_SVR_IPADR_ID,A.SCD_ID,C.IPADR
			ORDER BY ${order_type} ${order}
			LIMIT #{recordCountPerPage} OFFSET #{firstIndex}
		)AA
		WHERE AA.DB_SVR_NM LIKE #{db_svr_nm} OR AA.DB_SVR_NM IS NULL;
	</select>
	
	<select id="selectScheduleHistoryNew" resultType="hashmap" parameterType="hashmap" >
		/**
		* Query ID : selectScheduleHistoryNew
		* Description : 스케줄이력 조회
		* Author : 변승우
		**/
		SELECT
		  (ROW_NUMBER() OVER()) AS ROWNUM
		, (ROW_NUMBER() OVER()) AS IDX
		, AA.SCD_ID
		, AA.IPADR
		, AA.EXE_GRP_SN
		, AA.SCD_NM
		, AA.EXE_SN
		, AA.EXE_RSLT_CD
		, AA.DB_SVR_NM
		, TO_CHAR(AA.WRK_STRT_DTM,'YYYY-MM-DD HH24:MI:SS') AS WRK_STRT_DTM
		, TO_CHAR(AA.WRK_END_DTM,'YYYY-MM-DD HH24:MI:SS') AS WRK_END_DTM
		, AA.WRK_DTM
		FROM(
			SELECT 		
	        A.SCD_ID
	        , C.IPADR
	        , A.EXE_GRP_SN 
			, A.SCD_NM
			, MIN(A.EXE_SN) AS EXE_SN
			, MAX(A.EXE_RSLT_CD) AS EXE_RSLT_CD
			, (SELECT S.DB_SVR_NM FROM T_DBSVR_I S,T_DBSVRIPADR_I D WHERE S.DB_SVR_ID=D.DB_SVR_ID AND D.DB_SVR_IPADR_ID=A.DB_SVR_IPADR_ID)AS DB_SVR_NM
			, MIN(A.WRK_STRT_DTM) AS WRK_STRT_DTM
			, MAX(A.WRK_END_DTM) AS WRK_END_DTM
			, TO_CHAR(TO_CHAR(MAX(A.WRK_END_DTM),'YYYY-MM-DD HH24:MI:SS')::TIMESTAMP - TO_CHAR(MIN(A.WRK_STRT_DTM),'YYYY-MM-DD HH24:MI:SS')::TIMESTAMP, 'HH24시MI분SS초') AS WRK_DTM
			FROM T_WRKEXE_G A
			LEFT OUTER JOIN T_DBSVRIPADR_I C ON A.DB_SVR_IPADR_ID= C.DB_SVR_IPADR_ID or A.DB_SVR_IPADR_ID=0
			WHERE 1 = 1
			AND C.MASTER_GBN = 'M'
			<if test="lgi_dtm_start != null and lgi_dtm_start != '' ">
			 AND to_char(A.WRK_END_DTM,'YYYY-MM-DD') between #{lgi_dtm_start} and #{lgi_dtm_end}
			</if>
			<if test="scd_nm != null and scd_nm != '' ">
			AND A.SCD_NM LIKE #{scd_nm}
			</if>		
			AND A.EXE_RSLT_CD LIKE #{exe_result}
			GROUP BY A.EXE_GRP_SN, A.SCD_NM, A.DB_SVR_IPADR_ID,A.SCD_ID,C.IPADR
			ORDER BY ${order_type} ${order}
		)AA
		WHERE AA.DB_SVR_NM LIKE #{db_svr_nm} OR AA.DB_SVR_NM IS NULL;
	</select>




	<select id="selectScheduleHistoryTotCnt" parameterType="hashmap" resultType="int">
    	/**
	 	* Query ID : selectScheduleHistoryTotCnt
	 	* Description : 스케줄이력 총 갯수 조회
	 	* Author : 변승우
	 	**/
		SELECT
			COUNT(*) totcnt
		FROM(
			SELECT 		
	        A.SCD_ID
	        , C.IPADR
	        , A.EXE_GRP_SN 
			, A.SCD_NM
			, MIN(A.EXE_SN) AS EXE_SN
			, MAX(A.EXE_RSLT_CD) AS EXE_RSLT_CD
			, (SELECT S.DB_SVR_NM FROM T_DBSVR_I S,T_DB_I D WHERE S.DB_SVR_ID=D.DB_SVR_ID AND D.DB_ID=A.DB_ID)AS DB_SVR_NM
			, MIN(A.WRK_STRT_DTM) AS WRK_STRT_DTM
			, MAX(A.WRK_END_DTM) AS WRK_END_DTM
			, TO_CHAR(TO_CHAR(MAX(A.WRK_END_DTM),'YYYY-MM-DD HH24:MI:SS')::TIMESTAMP - TO_CHAR(MIN(A.WRK_STRT_DTM),'YYYY-MM-DD HH24:MI:SS')::TIMESTAMP, 'HH24시MI분SS초') AS WRK_DTM
			FROM T_WRKEXE_G A, T_DBSVRIPADR_I C
			WHERE A.DB_ID IN (SELECT DB_ID FROM T_USRDBAUT_I WHERE AUT_YN='Y' AND USR_ID =#{usr_id} GROUP BY DB_ID)
			AND A.DB_SVR_IPADR_ID = C.DB_SVR_IPADR_ID
			<if test="lgi_dtm_start != null and lgi_dtm_start != '' ">
			 AND to_char(A.WRK_END_DTM,'YYYY-MM-DD') between #{lgi_dtm_start} and #{lgi_dtm_end}
			</if>
			<if test="scd_nm != null and scd_nm != '' ">
			AND A.SCD_NM LIKE #{scd_nm}
			</if>		
			AND A.EXE_RSLT_CD LIKE #{exe_result}
			GROUP BY A.EXE_GRP_SN, A.SCD_NM, A.DB_ID,A.SCD_ID,C.IPADR
		)AA
	</select>
	
	
	
	<select id="selectScheduleHistoryFail" resultType="hashmap"  parameterType="hashmap" >
		/**
		* Query ID : selectScheduleHistoryFail
		* Description : 스케줄 실패 이력 조회
		* Author : 변승우
		**/
		SELECT 
	        (ROW_NUMBER() OVER()) AS ROWNUM
	        , (ROW_NUMBER() OVER()) AS IDX
	        , A.DB_SVR_NM
	        , A.EXE_SN
	        , A.SCD_ID
	        , A.SCD_NM
	        , A.WRK_ID
	        , A.WRK_NM
	        , A.WRK_STRT_DTM
	        , A.WRK_END_DTM
	        , A.EXE_RESULT
	        , A.FIX_RSLTCD
		    , A.FIX_RSLT_MSG
		FROM
		(SELECT
		         D.DB_SVR_NM
		        , A.EXE_SN
		        , A.SCD_ID
		        , C.SCD_NM
		        , A.WRK_ID
		        , E.WRK_NM
				, TO_CHAR(A.WRK_STRT_DTM,'YYYY-MM-DD HH24:MI:SS') AS WRK_STRT_DTM
				, TO_CHAR(A.WRK_END_DTM,'YYYY-MM-DD HH24:MI:SS') AS WRK_END_DTM
		        , (SELECT SYS_CD_NM FROM T_SYSDTL_C WHERE A.EXE_RSLT_CD = SYS_CD ) AS EXE_RESULT
		        , A.FIX_RSLTCD
		        , A.FIX_RSLT_MSG
		FROM T_WRKEXE_G A, T_BCK_WRKCNG_I B, T_SCD_M C, T_DBSVR_I D, T_WRKCNG_I  E
		WHERE 1= 1
		AND A.WRK_ID = B.WRK_ID
		AND B.WRK_ID = E.WRK_ID
		AND C.SCD_ID = A.SCD_ID
		AND B.DB_SVR_ID = D.DB_SVR_ID
		<if test="scd_nm != null and scd_nm != '' ">
			AND C.SCD_NM = #{scd_nm}
		</if>
		<if test="scd_nm == '' ">
			AND C.SCD_NM LIKE '%'
		</if>
		<if test="wrk_nm != null and wrk_nm != '' ">
			AND E.WRK_NM = #{wrk_nm}
		</if>
		<if test="wrk_nm == '' ">
			AND E.WRK_NM LIKE '%'
		</if>
		<if test="fix_rsltcd != 'TC002002' and fix_rsltcd != 'TC002003' ">
			AND (A.FIX_RSLTCD IS NULL OR A.FIX_RSLTCD IN('TC002002'))
		</if>
		<if test="fix_rsltcd == 'TC002003' ">
			AND A.FIX_RSLTCD IS NULL
		</if>
		<if test="fix_rsltcd == 'TC002002' ">
			AND A.FIX_RSLTCD = 'TC002002'
		</if>
		AND A.EXE_RSLT_CD = 'TC001702'
		ORDER BY WRK_END_DTM DESC
        )A
	</select>
	
	
	<select id="selectScheduleNmList" resultType="hashmap" parameterType="hashmap">
		/**
		* Query ID : selectScheduleNmList
		* Description : 스케줄명 조회
		* Author : 변승우
		**/	
		SELECT A.SCD_NM
		FROM T_SCD_M A, T_WRKEXE_G B
		WHERE A.SCD_ID = B.SCD_ID
		AND to_char(B.WRK_END_DTM,'YYYY-MM-DD') between #{wrk_start_dtm} and #{wrk_end_dtm}
		GROUP BY A.SCD_NM
	</select>
	
	
	<select id="selectScheduleDBMSList" resultType="hashmap" parameterType="hashmap">
		/**
		* Query ID : selectScheduleDBMSList
		* Description : DBMS명 조회
		* Author : 김주영
		**/	
		SELECT DISTINCT C.DB_SVR_NM 
		FROM T_BCK_WRKCNG_I A, T_WRKEXE_G B,T_DBSVR_I C
		WHERE TO_CHAR(B.WRK_END_DTM,'YYYY-MM-DD') BETWEEN #{wrk_start_dtm} AND #{wrk_end_dtm}
		AND A.WRK_ID = B.WRK_ID
		AND A.DB_SVR_ID = C.DB_SVR_ID
	</select>
	
	<select id="selectWrkNmList" resultType="hashmap" >
		SELECT 
				C.WRK_NM
		FROM T_SCD_M A, T_WRKEXE_G B, T_WRKCNG_I C
		WHERE A.SCD_ID = B.SCD_ID
        AND B.WRK_ID = C.WRK_ID
		AND A.SCD_NM = #{scd_nm}
		GROUP BY C.WRK_NM
	</select>
	
	<select id="selectScheduleHistoryDetail" resultType="hashmap" parameterType="int" >
		SELECT 
			  A.SCD_NM
			, A.EXE_SN
			, A.SCD_ID
			, TO_CHAR(A.WRK_STRT_DTM,'YYYY-MM-DD HH24:MI:SS') AS WRK_STRT_DTM
			, TO_CHAR(A.WRK_END_DTM,'YYYY-MM-DD HH24:MI:SS') AS WRK_END_DTM
			, A.WRK_DTM
			,(SELECT SCD_EXP FROM T_SCD_M M WHERE A.SCD_NM = M.SCD_NM)AS SCD_EXP
			FROM(
				SELECT 
				 	  SCD_NM
				 	, SCD_ID
					, MIN(A.EXE_SN) AS EXE_SN
					, MIN(A.WRK_STRT_DTM) AS WRK_STRT_DTM
					, MAX(A.WRK_END_DTM) AS WRK_END_DTM
					, TO_CHAR(TO_CHAR(MAX(A.WRK_END_DTM),'YYYY-MM-DD HH24:MI:SS')::TIMESTAMP - TO_CHAR(MIN(A.WRK_STRT_DTM),'YYYY-MM-DD HH24:MI:SS')::TIMESTAMP, 'HH24시MI분SS초') AS WRK_DTM
					FROM T_WRKEXE_G A
					WHERE 1= 1
					AND EXE_SN=#{exe_sn}
					GROUP BY EXE_GRP_SN, SCD_NM, DB_ID, SCD_ID
				)A
	</select>
	
	<select id="selectScheduleHistoryDetailEN" resultType="hashmap" parameterType="int" >
		SELECT 
			  A.SCD_NM
			, A.EXE_SN
			, A.SCD_ID
			, TO_CHAR(A.WRK_STRT_DTM,'YYYY-MM-DD HH24:MI:SS') AS WRK_STRT_DTM
			, TO_CHAR(A.WRK_END_DTM,'YYYY-MM-DD HH24:MI:SS') AS WRK_END_DTM
			, A.WRK_DTM
			,(SELECT SCD_EXP FROM T_SCD_M M WHERE A.SCD_NM = M.SCD_NM)AS SCD_EXP
			FROM(
				SELECT 
				 	  SCD_NM
				 	, SCD_ID
					, MIN(A.EXE_SN) AS EXE_SN
					, MIN(A.WRK_STRT_DTM) AS WRK_STRT_DTM
					, MAX(A.WRK_END_DTM) AS WRK_END_DTM
					, TO_CHAR(TO_CHAR(MAX(A.WRK_END_DTM),'YYYY-MM-DD HH24:MI:SS')::TIMESTAMP - TO_CHAR(MIN(A.WRK_STRT_DTM),'YYYY-MM-DD HH24:MI:SS')::TIMESTAMP, 'HH24"Hour" MI"Minute" SS"Second"') AS WRK_DTM
					FROM T_WRKEXE_G A
					WHERE 1= 1
					AND EXE_SN=#{exe_sn}
					GROUP BY EXE_GRP_SN, SCD_NM, DB_ID, SCD_ID
				)A
	</select>
	
	<select id="selectScheduleHistoryWorkDetail" resultType="hashmap" parameterType="int" >
		SELECT 
		  (ROW_NUMBER() OVER()) AS ROWNUM
		, WRK_ID
		, SCD_ID
		, EXE_SN
		, TO_CHAR(A.WRK_STRT_DTM,'YYYY-MM-DD HH24:MI:SS') AS WRK_STRT_DTM
		, TO_CHAR(A.WRK_END_DTM,'YYYY-MM-DD HH24:MI:SS') AS WRK_END_DTM
		, TO_CHAR(TO_CHAR(A.WRK_END_DTM,'YYYY-MM-DD HH24:MI:SS')::TIMESTAMP - TO_CHAR(A.WRK_STRT_DTM,'YYYY-MM-DD HH24:MI:SS')::TIMESTAMP, 'HH24시 MI분 SS초') AS WRK_DTM
		, (SELECT WRK_NM FROM T_WRKCNG_I WHERE WRK_ID = A.WRK_ID) WRK_NM
		, (SELECT WRK_EXP FROM T_WRKCNG_I WHERE WRK_ID = A.WRK_ID) WRK_EXP
		, EXE_RSLT_CD
		, FIX_RSLTCD
		, FIX_RSLT_MSG
		FROM T_WRKEXE_G A
		WHERE EXE_GRP_SN IN(
			SELECT EXE_GRP_SN FROM T_WRKEXE_G WHERE EXE_SN=#{exe_sn})
	</select>	
	<select id="selectScheduleHistoryWorkDetailEN" resultType="hashmap" parameterType="int" >
		SELECT 
		  (ROW_NUMBER() OVER()) AS ROWNUM
		, WRK_ID
		, SCD_ID
		, EXE_SN
		, TO_CHAR(A.WRK_STRT_DTM,'YYYY-MM-DD HH24:MI:SS') AS WRK_STRT_DTM
		, TO_CHAR(A.WRK_END_DTM,'YYYY-MM-DD HH24:MI:SS') AS WRK_END_DTM
		, TO_CHAR(TO_CHAR(A.WRK_END_DTM,'YYYY-MM-DD HH24:MI:SS')::TIMESTAMP - TO_CHAR(A.WRK_STRT_DTM,'YYYY-MM-DD HH24:MI:SS')::TIMESTAMP, 'HH24"Hour" MI"Minute" SS"Second"') AS WRK_DTM
		, (SELECT WRK_NM FROM T_WRKCNG_I WHERE WRK_ID = A.WRK_ID) WRK_NM
		, (SELECT WRK_EXP FROM T_WRKCNG_I WHERE WRK_ID = A.WRK_ID) WRK_EXP
		, EXE_RSLT_CD
		, FIX_RSLTCD
		, FIX_RSLT_MSG
		FROM T_WRKEXE_G A
		WHERE EXE_GRP_SN IN(
			SELECT EXE_GRP_SN FROM T_WRKEXE_G WHERE EXE_SN=#{exe_sn})
	</select>	
	
	
		<update id="updateScheduler" parameterType="wrkExeVO">
	   	/**
	 	* Query ID : updateScheduler
	 	* Description : 스케줄 시간 업데이트
	 	* Author : 변승우
	 	**/
	 	UPDATE T_WRKEXE_G
	 	SET 
	 		   EXE_RSLT_CD = #{exe_rslt_cd}
		       , WRK_END_DTM= now()
	 	WHERE EXE_SN=#{exe_sn}
	</update>
	
</mapper>
