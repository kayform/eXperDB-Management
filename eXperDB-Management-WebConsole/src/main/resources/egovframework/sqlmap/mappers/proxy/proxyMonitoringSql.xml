<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="proxyMonitoringSql">

	<select id="selectProxyServerList" resultType="hashMap">
		/**
		* Query ID : selectProxyServerList
		* Description : Proxy 서버 목록 조회
		* Author : 윤정
		**/
        SELECT 
               (ROW_NUMBER() OVER()) AS ROWNUM, 
               (ROW_NUMBER() OVER()) AS IDX,
               S.PRY_SVR_ID,
               S.IPADR,
               S.AGT_SN,
               S.PRY_SVR_NM,
               S.PRY_PTH,
               S.KAL_PTH,
               S.USE_YN,
               S.EXE_STATUS,
               S.MASTER_GBN,
               S.MASTER_SVR_ID,
               S.DB_SVR_ID,
               S.DAY_DATA_DEL_TERM,
               S.MIN_DATA_DEL_TERM,
               S.FRST_REGR_ID,
               S.FRST_REG_DTM,
               S.LST_MDFR_ID,
               S.LST_MDF_DTM,
               A.AGT_CNDT_CD 
          FROM T_PRY_SVR_I S JOIN T_PRY_AGT_I A ON S.AGT_SN = A.AGT_SN
         WHERE A.SVR_USE_YN = 'Y'
        GROUP by S.PRY_SVR_ID, S.IPADR, S.MASTER_GBN, S.MASTER_SVR_ID, A.AGT_CNDT_CD, S.DB_SVR_ID
        ORDER BY S.DB_SVR_ID, COALESCE(MASTER_SVR_ID, PRY_SVR_ID), S.DB_SVR_ID, MASTER_GBN, LST_MDF_DTM
	</select>

	<select id="selectProxyServerByMasterId" resultType="hashMap">
		/**
		* Query ID : selectProxyServerByMasterId
		* Description : Proxy 서버  cluster 조회 by master server id
		* Author : 윤정
		**/
        SELECT 
               (ROW_NUMBER() OVER(ORDER BY S.DB_SVR_ID, S.MASTER_GBN, COALESCE(S.MASTER_SVR_ID, S.PRY_SVR_ID), S.LST_MDF_DTM)) AS ROWNUM, 
               (ROW_NUMBER() OVER()) AS IDX,
               S.PRY_SVR_ID,
               S.IPADR,
               S.AGT_SN,
               S.PRY_SVR_NM,
               S.PRY_PTH,
               S.KAL_PTH,
               S.USE_YN,
               S.EXE_STATUS,
               S.KAL_EXE_STATUS,
               S.MASTER_GBN,
               S.MASTER_SVR_ID,
               S.DB_SVR_ID,
               S.DAY_DATA_DEL_TERM,
               S.MIN_DATA_DEL_TERM,
               S.FRST_REGR_ID,
               S.FRST_REG_DTM,
               S.LST_MDFR_ID,
               S.LST_MDF_DTM,
               A.AGT_CNDT_CD,
               A.KAL_INSTALL_YN
          FROM T_PRY_SVR_I S
               JOIN T_PRY_AGT_I A ON S.AGT_SN = A.AGT_SN 
               
               <if test="value != null and value != '' ">
         WHERE (S.PRY_SVR_ID = #{value} 
                  OR S.MASTER_SVR_ID = #{value})
               </if>
         ORDER BY S.DB_SVR_ID, S.MASTER_GBN, COALESCE(S.MASTER_SVR_ID, S.PRY_SVR_ID), LST_MDF_DTM
	</select>
	
	<select id="selectProxyServerVipChk" resultType="hashMap" parameterType="int">
		/**
		* Query ID : selectProxyServerVipChk
		* Description : Proxy 서버 cluster 별 연결 vip 조회
		* Author : 윤정
		**/
        SELECT 
               (ROW_NUMBER() OVER()) AS ROWNUM, 
               (ROW_NUMBER() OVER()) AS IDX,
               A.PRY_SVR_ID,
               A.PRY_SVR_NM,
               A.EXE_STATUS, 
               A.KAL_EXE_STATUS, 
               A.MASTER_GBN, 
               A.MASTER_SVR_ID,
               A.KAL_INSTALL_YN,
               A.AGT_CNDT_CD,
               ARRAY_TO_STRING(array_agg(CASE WHEN A.V_IP is null or TRIM(A.V_IP) = '' THEN NULL ELSE A.V_IP end),',')  as V_IP
          FROM (
               SELECT 
                      S.PRY_SVR_ID,
                      S.PRY_SVR_NM,
                      S.EXE_STATUS,
                      S.KAL_EXE_STATUS,
                      S.MASTER_GBN,
                      S.MASTER_SVR_ID,
                      A.KAL_INSTALL_YN,
                      A.AGT_CNDT_CD,
                      CASE WHEN V.V_IP_EXE_STATUS = 'TC001501' THEN V.V_IP
                           ELSE '' END AS V_IP
                 FROM T_PRY_SVR_I S
                      JOIN T_PRY_AGT_I A ON S.AGT_SN = A.AGT_SN 
                      JOIN T_PRY_VIPCNG_I V ON S.PRY_SVR_ID = V.PRY_SVR_ID
             <if test="value != null and value != '' ">
                WHERE (S.PRY_SVR_ID = #{value} 
                       OR s.MASTER_SVR_ID = #{value})
             </if>
                ORDER BY S.DB_SVR_ID, S.MASTER_GBN, COALESCE(S.MASTER_SVR_ID, S.PRY_SVR_ID), S.LST_MDF_DTM
        ) A
        GROUP BY A.PRY_SVR_ID, A.PRY_SVR_NM, A.EXE_STATUS, A.KAL_EXE_STATUS, A.MASTER_GBN, A.MASTER_SVR_ID, A.KAL_INSTALL_YN, A.AGT_CNDT_CD
	</select>

	<select id="selectDBServerConProxyList" resultType="hashMap" parameterType="int">
		/**
		* Query ID : selectDBServerConProxyList
		* Description : Proxy 연결된 db 서버 조회
		* Author : 윤정
		**/
        SELECT
               (ROW_NUMBER() OVER()) AS ROWNUM, 
               (ROW_NUMBER() OVER()) AS IDX,
               A.PRY_SVR_ID , 
               A.MASTER_GBN , 
               A.DB_SVR_ID,
               A.IPADR , 
               A.PORTNO , 
               A.SVR_HOST_NM , 
               A.AGT_CNDT_CD,
               CNT_SVR_ID AS CNT_SVR_ID,
               A.DB_CNDT,
               B.DB_CNDT_CNT AS DB_CNDT_CNT,
               A.INTL_IPADR
          FROM (
               SELECT
                      TPSI.PRY_SVR_ID , 
                      TDI.MASTER_GBN , 
                      TDI.DB_SVR_ID,
                      TDI.IPADR , 
                      TDI.PORTNO , 
                      TDI.SVR_HOST_NM ,
                      TDI.DB_CNDT, 
                      TAI.AGT_CNDT_CD,
                      TAI.INTL_IPADR
                 FROM T_PRY_SVR_I TPSI 
                      JOIN T_DBSVRIPADR_I TDI ON TPSI.DB_SVR_ID = TDI.DB_SVR_ID
                      JOIN T_AGTCNDT_I TAI ON TDI.IPADR = TAI.IPADR
                WHERE (TPSI.PRY_SVR_ID = #{pry_svr_id}::numeric
                       OR TPSI.MASTER_SVR_ID = #{pry_svr_id}::numeric)
                       AND (TDI.MASTER_GBN = 'M' OR (TDI.MASTER_GBN = 'S' AND TDI.DB_SVR_ID = (
                                                                                               SELECT MIN(DB_SVR_ID) as DB_SVR_ID
                                                                                                 FROM T_DBSVRIPADR_I A 
                                                                                                WHERE A.DB_SVR_ID = (SELECT DB_SVR_ID 
                                                                                                                       FROM T_PRY_SVR_I 
                                                                                                                      WHERE PRY_SVR_ID = #{pry_svr_id}::numeric OR MASTER_SVR_ID = #{pry_svr_id}::numeric
                                                                                                                      LIMIT 1)
                                                                                                  AND A.MASTER_GBN = 'S'
                                                                                               )
                                                    )
                           )
                ORDER BY TDI.DB_SVR_ID, TPSI.MASTER_GBN, TDI.MASTER_GBN, COALESCE(TPSI.MASTER_SVR_ID, TPSI.PRY_SVR_ID)
          ) A
          LEFT JOIN
          (
          SELECT B.MASTER_GBN,
                 COUNT(B.DB_SVR_ID) AS CNT_SVR_ID,
                 SUM(B.db_cndt_CNT) AS DB_CNDT_CNT
            FROM (
                 SELECT
                        A.MASTER_GBN ,
                        A.DB_SVR_ID,
                        CASE WHEN DB_CNDT = 'Y' THEN 1
                             ELSE 0 
                         END AS DB_CNDT_CNT
                   FROM T_DBSVRIPADR_I A 
                  WHERE A.DB_SVR_ID = (
                                       SELECT DB_SVR_ID 
                                         FROM T_PRY_SVR_I 
                                        WHERE PRY_SVR_ID = #{pry_svr_id}::numeric OR MASTER_SVR_ID = #{pry_svr_id}::numeric
                                        LIMIT 1
                                      )
                    AND A .MASTER_GBN = 'S'
            ) B 
            GROUP BY B.MASTER_GBN 
          ) B
          ON A.MASTER_GBN = B.MASTER_GBN
	</select>
	
	<select id="selectProxyListnerMainList" resultType="hashMap" parameterType="int">
		/**
		* Query ID : selectProxyListnerMainList
		* Description : Proxy 리스너 목록 및 상태조회
		* Author : 윤정
		**/
        SELECT 
               (ROW_NUMBER() OVER()) AS ROWNUM, 
               (ROW_NUMBER() OVER()) AS IDX,
               E.IPADR,
               E.AGT_CNDT_CD,
               E.SVR_USE_YN, 
               E.PRY_SVR_ID, 
               E.MASTER_GBN, 
               E.PRY_SVR_NM, 
               E.LSN_ID,
               E.LSN_NM,
               E.LSN_DESC,
               E.lsn_exe_status,
               E.CON_BIND_PORT,
               ARRAY_TO_STRING(ARRAY_AGG(E.db_conn_ip),',')  as db_conn_ip,
               ARRAY_TO_STRING(ARRAY_AGG(E.db_conn_ip_num),',')  as db_conn_ip_num
         FROM (
               SELECT 
                      F.IPADR
                    , F.AGT_CNDT_CD
                    , F.SVR_USE_YN
                    , F.PRY_SVR_ID
                    , F.MASTER_GBN
                    , F.PRY_SVR_NM
                    , F.LSN_ID
                    , F.LSN_NM
                    , F.LSN_DESC
                    , F.LSN_EXE_STATUS
                    , F.DB_CONN_IP
                    , F.CON_BIND_PORT
                    , F.MASTER_SVR_ID
                    , F.DB_SVR_ID
                    , CASE WHEN (F.DB_CONN_IP = X.IPADR OR F.DB_CONN_IP=X.INTL_IPADR) AND G.MASTER_GBN = 'M' THEN '1'
                           WHEN (F.DB_CONN_IP = X.IPADR OR F.DB_CONN_IP=X.INTL_IPADR) AND G.MASTER_GBN = 'S' then '2'
                           ELSE NULL
                       END AS DB_CONN_IP_NUM
                 FROM (
                      SELECT 
                             C.IPADR
                           , C.AGT_CNDT_CD
                           , C.SVR_USE_YN
                           , A.PRY_SVR_ID
                           , A.MASTER_GBN
                           , A.PRY_SVR_NM
                           , B.LSN_ID
                           , B.LSN_NM
                           , B.LSN_DESC
                           , B.LSN_EXE_STATUS
                           , D.DB_CONN_IP
                           , B.CON_BIND_PORT
                           , COALESCE(A.MASTER_SVR_ID, A.PRY_SVR_ID) AS MASTER_SVR_ID
                           , A.DB_SVR_ID
                        FROM T_PRY_SVR_I A
                             JOIN T_PRY_LSN_I B ON A.PRY_SVR_ID = B.PRY_SVR_ID
                             LEFT JOIN T_PRY_AGT_I C ON A.AGT_SN = C.AGT_SN AND A.IPADR = C.IPADR
                             LEFT JOIN T_PRY_LSN_SVR_I D ON B.PRY_SVR_ID = D.PRY_SVR_ID AND B.LSN_ID = D.LSN_ID
                       WHERE (A.PRY_SVR_ID = #{pry_svr_id}::numeric
                              OR A.MASTER_SVR_ID = #{pry_svr_id}::numeric)
                       ORDER BY A.DB_SVR_ID, A.MASTER_GBN, coalesce(A.MASTER_SVR_ID, A.PRY_SVR_ID), B.LSN_NM DESC, D.LSN_SVR_ID, D.DB_CONN_IP, A.LST_MDF_DTM
                 ) F
                 LEFT JOIN T_AGTCNDT_I X ON (F.DB_CONN_IP = X.INTL_IPADR OR F.DB_CONN_IP = X.IPADR) 
                 LEFT JOIN T_DBSVRIPADR_I G ON F.DB_SVR_ID = G.DB_SVR_ID AND G.IPADR = X.IPADR
         ) E
         GROUP BY E.DB_SVR_ID, E.IPADR, E.AGT_CNDT_CD, E.SVR_USE_YN, E.PRY_SVR_ID, E.MASTER_GBN, E.PRY_SVR_NM, E.LSN_ID , E.LSN_NM, E.LSN_DESC, E.LSN_EXE_STATUS, E.MASTER_SVR_ID, E.CON_BIND_PORT
         ORDER BY E.DB_SVR_ID, E.MASTER_GBN, E.MASTER_SVR_ID, E.LSN_NM DESC
	</select>
	
	<select id="selectProxyLogList" resultType="hashMap" parameterType="int">
		/**
		* Query ID : selectProxyLogList
		* Description : proxy / keepalived 기동 상태 이력 조회
		* Author : 윤정
		**/
        SELECT
               (ROW_NUMBER() OVER()) AS ROWNUM, 
               (ROW_NUMBER() OVER()) AS IDX,
               TPSI.PRY_SVR_ID, 
               TPSI.PRY_SVR_NM , 
               TPACG.PRY_ACT_EXE_SN, 
               TPACG.SYS_TYPE, 
               TPACG.ACT_TYPE,
               TPACG.ACT_EXE_TYPE, 
               TPACG.EXE_RSLT_CD,
               TPAI.AGT_CNDT_CD,
               TO_CHAR(TPACG.WRK_DTM,'YYYY-MM-DD HH24:MI:SS') AS WRK_DTM
          FROM T_PRY_SVR_I TPSI 
               JOIN T_PRY_AGT_I TPAI ON TPSI.AGT_SN = TPAI.AGT_SN
               JOIN T_PRY_ACTSTATE_CNG_G TPACG ON TPSI.AGT_SN = TPAI.AGT_SN AND TPSI.PRY_SVR_ID = TPACG.PRY_SVR_ID 
         WHERE (TPSI.PRY_SVR_ID = #{pry_svr_id}::numeric
                OR TPSI.MASTER_SVR_ID = #{pry_svr_id}::numeric)
         ORDER BY tpacg.WRK_DTM DESC
         LIMIT 5
	</select>
	
	<select id="selectConfiguration" resultType="hashMap" parameterType="hashMap">
		/**
		* Query ID : selectConfiguration
		* Description : Proxy, keepalived config 파일 정보 조회
		* Author : 윤정
		**/
        SELECT 
               (ROW_NUMBER() OVER()) AS ROWNUM, 
               (ROW_NUMBER() OVER()) AS IDX,
               TPSI.PRY_SVR_ID,
               TPSI.IPADR,

           <if test='type == "P" or type == "PROXY"'>
               TPSI.PRY_PTH AS PATH,
               TPSI.EXE_STATUS AS EXE_STATUS,
           </if>

           <if test='type == "K" or type == "KEEPALIVED"'>
               TPSI.KAL_PTH AS PATH,
               TPSI.KAL_EXE_STATUS AS EXE_STATUS,
           </if>

               TPSI.PRY_SVR_NM,
               TPAI.SOCKET_PORT
          FROM T_PRY_SVR_I TPSI
               JOIN T_PRY_AGT_I TPAI ON TPSI.AGT_SN = TPAI.AGT_SN
         WHERE TPSI.PRY_SVR_ID = #{pry_svr_id}::numeric
	</select>
	
	<select id="selectProxyStatisticsInfo" parameterType="int" resultType="hashMap">
		/**
		* Query ID : selectProxyStatisticsInfo
		* Description : Proxy 리스너 상세 정보 조회
		* Author : 윤정
		**/
		<![CDATA[
        SELECT *
          FROM (
                SELECT
                       ROW_NUMBER() OVER (PARTITION BY TPSI.PRY_SVR_ID, TPSSG.LSN_ID, TPSSG.DB_CON_ADDR ORDER BY EXE_DTM DESC) AS R,
                       (ROW_NUMBER() OVER()) AS ROWNUM, 
                       (ROW_NUMBER() OVER()) AS IDX,
                       TPSI.PRY_SVR_ID,
                       TPSI.MASTER_GBN, 
                       TPSSG.EXE_DTM, 
                       TO_CHAR(TPSSG.EXE_DTM, 'HH24:MI') AS EXE_DTM_SS,
                       TPSI.PRY_SVR_NM,
                       TPLI.LSN_NM, 
                       TPSSG.DB_CON_ADDR, 
                       TPSSG.SVR_STATUS, 
                       TPSSG.LST_STATUS_CHK_DESC, 
                       TPSSG.FAIL_CHK_CNT, 
                       TPSSG.MAX_SESSION, 
                       TPSSG.CUR_SESSION,
                       TPSSG.SESSION_LIMIT, 
                       TPSSG.CUMT_SSO_CON_CNT, 
                       TPSSG.BYTE_RECEIVE, 
                       TPSSG.BYTE_TRANSMIT,
                       TPSSG.SVR_STOP_TM,
                       TPSSG.LSN_SVR_ID,
                       TDBI.IPADR AS INTL_IPADR 
                  FROM T_PRY_SVR_I TPSI 
                       JOIN T_PRY_LSN_I TPLI ON TPSI.PRY_SVR_ID = TPLI.PRY_SVR_ID 
                       JOIN T_PRY_SVR_STATUS_G TPSSG ON TPSI.PRY_SVR_ID = TPSSG.PRY_SVR_ID AND TPLI.LSN_ID = TPSSG.LSN_ID
                       LEFT JOIN (SELECT TDB.IPADR, TDB.DB_SVR_ID, TAG.INTL_IPADR 
                                    FROM T_DBSVRIPADR_I TDB 
                                         JOIN T_AGTCNDT_I TAG ON TDB.IPADR = TAG.IPADR) TDBI 
                              ON TPSI.DB_SVR_ID = TDBI.DB_SVR_ID AND TPSSG.DB_CON_ADDR = TDBI.INTL_IPADR
                 WHERE (TPSI.PRY_SVR_ID = #{value}
                        OR TPSI.MASTER_SVR_ID = #{value})
                   AND TPSSG.LOG_TYPE = 'TC003901'
                 ORDER BY TPSI.DB_SVR_ID, TPSI.MASTER_GBN, TPSI.PRY_SVR_ID, TPLI.LSN_NM DESC, TPLI.LSN_ID, TPSSG.LSN_SVR_ID, TPSSG.EXE_DTM DESC
          ) X
          WHERE X.R <= 2
		]]>
	</select>

	<select id="selectProxyStatisticsChartInfo" parameterType="int" resultType="hashMap">
		/**
		* Query ID : selectProxyStatisticsChartInfo
		* Description : Proxy 리스너 통계 정보 조회
		* Author : 윤정
		**/
		<![CDATA[
        SELECT 
               (ROW_NUMBER() OVER(PARTITION BY X.PRY_SVR_ID, X.LSN_ID, X.LSN_SVR_ID, X.DB_CON_ADDR ORDER BY EXE_DTM)) AS ROWNUM, 
               (ROW_NUMBER() OVER(PARTITION BY X.PRY_SVR_ID, X.LSN_ID, X.LSN_SVR_ID ,X.DB_CON_ADDR ORDER BY EXE_DTM)) AS IDX,
               DENSE_RANK() OVER( ORDER BY X.PRY_SVR_ID, X.LSN_ID, X.DB_CON_ADDR DESC) AS DENSE_ROW_NUM,
               *
          FROM (
               SELECT
                      ROW_NUMBER() OVER (PARTITION BY TPSI.PRY_SVR_ID, TPSSG.LSN_ID, TPSSG.LSN_SVR_ID, TPSSG.DB_CON_ADDR ORDER BY EXE_DTM DESC) AS R, 
                      TPSI.PRY_SVR_ID, 
                      TPSSG.LSN_ID,
                      TPSSG.EXE_DTM, 
                      TO_CHAR(TPSSG.EXE_DTM, 'YYYY-MM-DD HH24:MI') AS EXE_DTM_SS,
                      TPSI.PRY_SVR_NM,
                      TPLI.LSN_NM, 
                      TPSSG.DB_CON_ADDR, 
                      TPSSG.SVR_STATUS, 
                      TPSSG.LST_STATUS_CHK_DESC, 
                      TPSSG.FAIL_CHK_CNT, 
                      TPSSG.MAX_SESSION, 
                      TPSSG.CUR_SESSION,
                      TPSSG.SESSION_LIMIT, 
                      TPSSG.CUMT_SSO_CON_CNT, 
                      TPSSG.BYTE_RECEIVE, 
                      TPSSG.BYTE_TRANSMIT,
                      TPSSG.SVR_STOP_TM,
                      TPSSG.LSN_SVR_ID,
                      TPSI.DB_SVR_ID
                 FROM T_PRY_SVR_I TPSI 
                      JOIN T_PRY_LSN_I TPLI ON TPSI.PRY_SVR_ID = TPLI.PRY_SVR_ID 
                      JOIN T_PRY_LSN_SVR_I TPSLI ON TPSI.PRY_SVR_ID = TPSLI.PRY_SVR_ID AND TPLI.LSN_ID = TPSLI.LSN_ID
                      JOIN T_PRY_SVR_STATUS_G TPSSG ON TPSI.PRY_SVR_ID = TPSSG.PRY_SVR_ID AND TPLI.LSN_ID = TPSSG.LSN_ID AND TPSSG.LSN_SVR_ID = TPSLI.LSN_SVR_ID
                WHERE TPSI.PRY_SVR_ID = #{pry_svr_id}::numeric
                  AND TPSSG.LOG_TYPE = 'TC003901'
                ORDER BY TPSI.DB_SVR_ID, TPSI.PRY_SVR_ID, TPLI.LSN_ID, TPSSG.LSN_SVR_ID, TPSSG.DB_CON_ADDR, TPSSG.EXE_DTM DESC
          ) X
          WHERE X.R <= 5
          ORDER BY X.DB_SVR_ID, X.PRY_SVR_ID, X.LSN_ID, X.LSN_SVR_ID, X.DB_CON_ADDR, X.EXE_DTM
		]]>
	</select>

	<select id="selectProxyChartCntList" parameterType="int" resultType="hashMap">
		/**
		* Query ID : selectProxyChartCntList
		* Description : Proxy 리스너 통계 정보 카운트
		* Author : 윤정
		**/
		<![CDATA[
        SELECT
               X.PRY_SVR_ID,
               X.PRY_SVR_NM,
               X.DB_CON_ADDR,
               X.LSN_NM
          FROM (
               SELECT
                      ROW_NUMBER() OVER (PARTITION BY TPSI.DB_SVR_ID, TPSI.PRY_SVR_ID, TPSSG.LSN_ID, TPSSG.LSN_SVR_ID, TPSSG.DB_CON_ADDR ORDER BY EXE_DTM) AS R, 
                      TPSI.PRY_SVR_ID,
                      TPSI.PRY_SVR_NM,
                      TPLI.LSN_NM,
                      TPSSG.DB_CON_ADDR,
                      TPSSG.LSN_SVR_ID,
                      TPSSG.LSN_ID,
                      TPSSG.EXE_DTM,
                      TPSI.DB_SVR_ID
                 FROM T_PRY_SVR_I TPSI 
                      JOIN T_PRY_LSN_I TPLI ON TPSI.PRY_SVR_ID = TPLI.PRY_SVR_ID 
                      JOIN T_PRY_LSN_SVR_I TPSLI ON TPSI.PRY_SVR_ID = TPSLI.PRY_SVR_ID AND TPLI.LSN_ID = TPSLI.LSN_ID
                      JOIN T_PRY_SVR_STATUS_G TPSSG ON TPSI.PRY_SVR_ID = TPSSG.PRY_SVR_ID AND TPLI.LSN_ID = TPSSG.LSN_ID AND TPSSG.LSN_SVR_ID = TPSLI.LSN_SVR_ID
                WHERE (TPSI.PRY_SVR_ID = #{value} OR TPSI.MASTER_SVR_ID = #{value})
                  AND TPSI.MASTER_GBN = 'M'
                  AND TPSSG.LOG_TYPE = 'TC003901'
                ORDER BY TPSI.DB_SVR_ID, TPSI.PRY_SVR_ID, TPLI.LSN_ID, TPSSG.LSN_SVR_ID, TPSSG.DB_CON_ADDR, TPSSG.EXE_DTM
          ) X
          WHERE R = 1
          ORDER BY X.DB_SVR_ID, X.PRY_SVR_ID, X.LSN_ID, X.LSN_SVR_ID, X.DB_CON_ADDR, X.EXE_DTM
		]]>
	</select>

	<select id="selectActExeFailLog" parameterType="int" resultType="hashMap">
		/**
		* Query ID : selectExeFailMsg
		* Description : proxy / keepavlived 기동-정지 실패 로그 
		* Author : 윤정
		**/
        SELECT 
               TPSI.PRY_SVR_ID , 
               TPSI.PRY_SVR_NM , 
               TPACG.PRY_ACT_EXE_SN, 
               TPACG.SYS_TYPE , 
               TPACG.ACT_TYPE , 
               TPACG.ACT_EXE_TYPE , 
               TPACG.RSLT_MSG
          FROM T_PRY_SVR_I TPSI
               JOIN T_PRY_ACTSTATE_CNG_G TPACG
                    ON TPSI.PRY_SVR_ID = TPACG.PRY_SVR_ID
         WHERE TPACG.PRY_ACT_EXE_SN = #{PRY_ACT_EXE_SN}::numeric
           AND TPACG.EXE_RSLT_CD = 'TC001502'
	</select>

	<select id="selectAgentCount" resultType="int">
   		/**
	 	* Query ID : selectAgentCount -에이전트 화면
	 	* Description : proxy agent count
	 	* Author :
	 	**/
        SELECT 
               COUNT(AGT_SN) AS CNT
          FROM T_PRY_AGT_I
         WHERE ISTCNF_YN = 'Y'
    </select>

	<select id="selectProxyAgentList" parameterType="proxyAgentVO"  resultType="proxyAgentVO">
        /**
        * Query ID : selectProxyAgentList
        * Description : proxy agent 조회
        * Author : 
        **/
        SELECT 
               (ROW_NUMBER() OVER(ORDER BY A.AGT_SN, A.LST_MDF_DTM DESC)) AS ROWNUM
              , A.AGT_SN
              , A.IPADR
              , A.DOMAIN_NM
              , A.SOCKET_PORT
              , A.AGT_CNDT_CD
              , TO_CHAR(A.STRT_DTM,'YYYY-MM-DD HH24:MI:SS') AS STRT_DTM
              , A.SVR_USE_YN
              , A.AGT_VERSION
              , B.PRY_SVR_NM
              , B.MASTER_GBN
              , A.KAL_INSTALL_YN
           FROM T_PRY_AGT_I A
                LEFT JOIN T_PRY_SVR_I B ON A.AGT_SN = B.AGT_SN AND A.IPADR = B.IPADR
          WHERE 1 = 1

        <if test="sch_domain_nm != null and sch_domain_nm != '' ">
            AND A.DOMAIN_NM LIKE '%' || #{sch_domain_nm} || '%'
        </if>

        <if test="sch_ipadr != null and sch_ipadr != '' ">
            AND A.IPADR = #{sch_ipadr}
        </if>

        <if test="sch_svr_use_yn != null and sch_svr_use_yn != '' ">
            AND A.SVR_USE_YN = #{sch_svr_use_yn}
        </if>

          ORDER BY A.AGT_SN, A.LST_MDF_DTM DESC
	</select>

	<select id="selectPryCngList" parameterType="int" resultType="hashMap">
		/**
		* Query ID : selectPryCngList
		* Description : proxy config파일 변경 이력 조회
		* Author : 윤정
		**/
        SELECT
               (ROW_NUMBER() OVER()) AS ROWNUM
             , (ROW_NUMBER() OVER()) AS IDX
             , TPSI.PRY_SVR_ID 
             , TPSI.PRY_SVR_NM
             , TPG.EXE_RST_CD 
             , TO_CHAR(TPG.LST_MDF_DTM, 'YYYY-MM-DD HH24:MI') AS LST_MDF_DTM
          FROM T_PRY_SVR_I TPSI
               JOIN T_PRYCNG_G TPG ON TPSI.PRY_SVR_ID = TPG.PRY_SVR_ID
         WHERE (TPSI.PRY_SVR_ID = #{pry_svr_id}::numeric
                OR TPSI.MASTER_SVR_ID = #{pry_svr_id}::numeric)
         ORDER BY LST_MDF_DTM DESC
         LIMIT 5
	</select>

	<select id="selectDbStandbyList" parameterType="int" resultType="hashMap">
		/**
		* Query ID : selectPryCngList
		* Description : proxy 연결 db standby ip list
		* Author : 윤정
		**/
        SELECT 
               (ROW_NUMBER() OVER()) AS ROWNUM
             , (ROW_NUMBER() OVER()) AS IDX
             , TDI.DB_SVR_ID
             , TDI.IPADR
             , TDI.PORTNO
             , TDI.SVR_HOST_NM
             , TDI.DB_CNDT
             , TAI.INTL_IPADR
          FROM T_DBSVRIPADR_I TDI 
               JOIN T_AGTCNDT_I TAI ON TDI.IPADR = TAI.IPADR
         WHERE TDI.DB_SVR_ID = #{db_svr_id}::numeric
           AND TDI.MASTER_GBN = 'S'
	</select>

	<select id="selectProxyServerByDBSvrId" parameterType="int" resultType="hashMap">
		/**
		* Query ID : selectProxyServerByDBSvrId
		* Description : proxy server list by db server id for dashboard
		* Author : 윤정
		**/
        SELECT 
               (ROW_NUMBER() OVER(ORDER BY S.DB_SVR_ID, S.MASTER_GBN,COALESCE(S.MASTER_SVR_ID, S.PRY_SVR_ID), S.LST_MDF_DTM)) AS ROWNUM, 
               (ROW_NUMBER() OVER()) AS IDX,
               S.PRY_SVR_ID,
               S.IPADR,
               S.AGT_SN,
               S.PRY_SVR_NM,
               S.PRY_PTH,
               S.KAL_PTH,
               S.USE_YN,
               S.EXE_STATUS,
               S.KAL_EXE_STATUS,
               S.MASTER_GBN,
               S.MASTER_SVR_ID,
               S.DB_SVR_ID,
               S.DAY_DATA_DEL_TERM,
               S.MIN_DATA_DEL_TERM,
               S.FRST_REGR_ID,
               S.FRST_REG_DTM,
               S.LST_MDFR_ID,
               S.LST_MDF_DTM,
               A.AGT_CNDT_CD,
               A.KAL_INSTALL_YN
          FROM T_PRY_SVR_I S 
               JOIN T_PRY_AGT_I A ON S.AGT_SN = A.AGT_SN 
         WHERE S.DB_SVR_ID = #{db_svr_id}::numeric
         ORDER BY S.DB_SVR_ID, S.MASTER_GBN,COALESCE(S.MASTER_SVR_ID, S.PRY_SVR_ID), LST_MDF_DTM
	</select>
</mapper>