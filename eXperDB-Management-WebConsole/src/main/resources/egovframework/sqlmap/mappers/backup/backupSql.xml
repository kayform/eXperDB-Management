<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="backupSQL">

	<select id="selectWorkList" parameterType="workVO" resultType="workVO">
		/**
	 	* Query ID : selectWorkList
	 	* Description : workList 조회
	 	* Author : Yoon jh
	 	**/
	  SELECT
	        (ROW_NUMBER() OVER()) AS ROWNUM,
			(ROW_NUMBER() OVER()) AS IDX,
			A.BCK_WRK_ID,
			A.WRK_ID,
			A.DB_SVR_ID,
			A.DB_ID,
			A.DB_NM,
			A.BCK_BSN_DSCD,
			A.BCK_BSN_DSCD_NM,
			A.WRK_NM,
			A.WRK_EXP,
			A.BCK_OPT_CD,
			A.BCK_OPT_CD_NM,
			A.BCK_MTN_ECNT,
			A.CPS_YN,
			A.LOG_FILE_BCK_YN,
			A.LOG_FILE_STG_DCNT,
			A.LOG_FILE_MTN_ECNT,
			A.CPRT,
			A.SAVE_PTH,
			A.FILE_FMT_CD,
			A.FILE_FMT_CD_NM,
			A.FILE_STG_DCNT,
			A.ENCD_MTH_NM,
			A.ENCD_MTH_CD,
			A.USR_ROLE_NM,
			A.FRST_REGR_ID,
			A.FRST_REG_DTM,
			A.LST_MDFR_ID,
			A.LST_MDF_DTM,
			A.BCK_FILENM,
			A.DATA_PTH,
			A.BCK_PTH,
			A.ACV_FILE_STGDT,
			A.ACV_FILE_MTNCNT,
			A.LOG_FILE_PTH
	  FROM(	
      SELECT 
      		BCK_WRK_ID,
      		A.WRK_ID,
			DB_SVR_ID,
			DB_ID,
			(CASE WHEN DB_ID>0 THEN (SELECT DB_NM FROM T_DB_I WHERE A.DB_ID=DB_ID AND USEYN = 'Y') ELSE '' END) AS DB_NM,
			BCK_BSN_DSCD,
			(SELECT SYS_CD_NM FROM T_SYSDTL_C WHERE A.BCK_BSN_DSCD = SYS_CD ) AS BCK_BSN_DSCD_NM,
			(SELECT WRK_NM FROM T_WRKCNG_I WHERE WRK_ID = A.WRK_ID) WRK_NM,
			(SELECT WRK_EXP FROM T_WRKCNG_I WHERE WRK_ID = A.WRK_ID) WRK_EXP,
			BCK_OPT_CD,
			(SELECT SYS_CD_NM FROM T_SYSDTL_C WHERE A.BCK_OPT_CD = SYS_CD ) AS BCK_OPT_CD_NM,
			BCK_MTN_ECNT,
			CPS_YN,
			LOG_FILE_BCK_YN,
			LOG_FILE_STG_DCNT,
			LOG_FILE_MTN_ECNT,
			CPRT,
			SAVE_PTH,
			FILE_FMT_CD,
			(SELECT SYS_CD_NM FROM T_SYSDTL_C WHERE A.FILE_FMT_CD = SYS_CD ) AS FILE_FMT_CD_NM,
			FILE_STG_DCNT,
			(SELECT SYS_CD_NM FROM T_SYSDTL_C WHERE A.ENCD_MTH_NM = SYS_CD ) AS ENCD_MTH_NM,
			A.ENCD_MTH_NM AS ENCD_MTH_CD,
			USR_ROLE_NM,
			A.FRST_REGR_ID,
			TO_CHAR(A.FRST_REG_DTM,'YYYY-MM-DD HH24:MI') AS FRST_REG_DTM,
			A.LST_MDFR_ID,
			TO_CHAR(A.LST_MDF_DTM,'YYYY-MM-DD HH24:MI') AS LST_MDF_DTM,
			BCK_FILENM,
			DATA_PTH,
			BCK_PTH,
			ACV_FILE_STGDT,
			ACV_FILE_MTNCNT,
			LOG_FILE_PTH
      FROM T_BCK_WRKCNG_I A, T_WRKCNG_I B
      WHERE 1=1	
      	AND A.WRK_ID=B.WRK_ID
      	AND DB_SVR_ID=#{db_svr_id}
      	AND BCK_BSN_DSCD=#{bck_bsn_dscd}
      	<if test="wrk_nm != null and wrk_nm != '' ">
      		AND B.WRK_NM LIKE CONCAT('%',#{wrk_nm},'%')
      	</if>
      	<if test="bck_opt_cd != null and bck_opt_cd != '' ">
      		AND BCK_OPT_CD=#{bck_opt_cd}
      	</if>
      	<if test="bck_wrk_id != null and bck_wrk_id != '' ">
      		<if test='bck_wrk_id != "0"'>
	      		AND bck_wrk_id=#{bck_wrk_id}
			</if>
      	</if>
      	<if test="db_id != null and db_id != '' ">
      		<if test='db_id != "0"'>
	      		AND DB_ID=#{db_id}
			</if>
      	</if>
      ORDER BY LST_MDF_DTM DESC
      )A
    </select>
    
    <select id="selectOptDetailList" parameterType="workOptDetailVO" resultType="workOptDetailVO">
		/**
	 	* Query ID : selectOptDetailList
	 	* Description : 옵션별 List 조회
	 	* Author : Yoon jh
	 	**/    
    	SELECT
    		GRP_CD,
    		OPT_CD,
    		OPT_CD_NM,
    		DFT_CD_VAL,
    		EXPS_ORD
    	FROM T_WRKOPTDTL_C
    	WHERE 1=1
    		AND GRP_CD=#{grp_cd}
    	ORDER BY EXPS_ORD
    </select>

	<insert id="insertWork" parameterType="workVO">
		/**
	 	* Query ID : "insertWork"
	 	* Description : Work등록
	 	* Author : 변승우
	 	**/
	 	INSERT INTO T_WRKCNG_I
	 		(
	 		WRK_ID
	 		, BSN_DSCD
	 		, WRK_NM
	 		, WRK_EXP
	 		, FRST_REGR_ID
	 		, FRST_REG_DTM
	 		, LST_MDFR_ID
	 		, LST_MDF_DTM
	 		)
	 		VALUES
	 		(
	 		nextval('q_wrkcng_i_01')
	 		, 'TC001901'
	 		, #{wrk_nm}
			, #{wrk_exp}
			, #{frst_regr_id}
			, now()
			, #{frst_regr_id}
			, now()
	 		)
	</insert>


	<insert id="insertRmanWork" parameterType="workVO">
		/**
	 	* Query ID : insertRmanWork
	 	* Description : Rman백업 insert
	 	* Author : Yoon jh
	 	**/
		INSERT INTO T_BCK_WRKCNG_I
			(
			BCK_WRK_ID,
			wrk_id,
			db_svr_id,
			bck_bsn_dscd,
			bck_opt_cd,
			bck_mtn_ecnt,
			cps_yn,
			log_file_bck_yn,
			log_file_stg_dcnt,
			log_file_mtn_ecnt,
			file_stg_dcnt,
			frst_regr_id,
			frst_reg_dtm,
			lst_mdfr_id,
			lst_mdf_dtm,
			data_pth,
			bck_pth,
			acv_file_stgdt,
			acv_file_mtncnt,
			log_file_pth
			)
		VALUES
			(
			nextval('q_bck_wrkcng_i'),
			#{wrk_id},
			#{db_svr_id},
			'TC000201',
			#{bck_opt_cd},
			#{bck_mtn_ecnt},
			#{cps_yn},
			#{log_file_bck_yn},
			#{log_file_stg_dcnt},
			#{log_file_mtn_ecnt},
			#{file_stg_dcnt},
			#{frst_regr_id},
			now(),
			#{frst_regr_id},
			now(),
			#{data_pth},
			#{bck_pth},
			#{acv_file_stgdt},
			#{acv_file_mtncnt},
			#{log_file_pth}
			)
	</insert>
	
	<insert id="insertDumpWork" parameterType="workVO">
		/**
	 	* Query ID : insertDumpWork
	 	* Description : Dump백업 insert
	 	* Author : Yoon jh
	 	**/
		INSERT INTO T_BCK_WRKCNG_I
			(
			bck_wrk_id,
			wrk_id,
			db_svr_id,
			bck_bsn_dscd,
			db_id,
			save_pth,
			log_file_pth,
			file_fmt_cd,
			cprt,
			encd_mth_nm,
			usr_role_nm,
			file_stg_dcnt,
			bck_mtn_ecnt,
			frst_regr_id,
			frst_reg_dtm,
			lst_mdfr_id,
			lst_mdf_dtm,
			bck_filenm
			)
		VALUES
			(
			nextval('q_bck_wrkcng_i'),
			#{wrk_id},
			#{db_svr_id},
			'TC000202',
			#{db_id},
			#{save_pth},
			#{log_file_pth},
			#{file_fmt_cd},
			#{cprt},
			#{encd_mth_nm},
			#{usr_role_nm},
			#{file_stg_dcnt},
			#{bck_mtn_ecnt},
			#{frst_regr_id},
			now(),
			#{frst_regr_id},
			now(),
			#{bck_filenm}
			)
	</insert>
	
	  <update id="updateWork" parameterType="workVO">
    	/**
	 	* Query ID : updateWork
	 	* Description : 워크 업데이트
	 	* Author : 변승우
	 	**/
	 		UPDATE T_WRKCNG_I SET
	 			wrk_exp = #{wrk_exp}
	 		WHERE WRK_ID = #{wrk_id}			 		
    </update>
	
	
	
	<update id="updateRmanWork" parameterType="workVO">
		/**
	 	* Query ID : updateRmanWork
	 	* Description : Rman백업 update
	 	* Author : Yoon jh
	 	**/
		UPDATE T_BCK_WRKCNG_I SET
			bck_opt_cd = #{bck_opt_cd},
			cps_yn = #{cps_yn},
			log_file_bck_yn = #{log_file_bck_yn},
			bck_mtn_ecnt = #{bck_mtn_ecnt},
			log_file_stg_dcnt = #{log_file_stg_dcnt},
			log_file_mtn_ecnt = #{log_file_mtn_ecnt},
			file_stg_dcnt = #{file_stg_dcnt},
			lst_mdfr_id = #{lst_mdfr_id},
			lst_mdf_dtm = now(),
			data_pth = #{data_pth},
			bck_pth = #{bck_pth},
			acv_file_stgdt = #{acv_file_stgdt},
			acv_file_mtncnt = #{acv_file_mtncnt},
			log_file_pth = #{log_file_pth}
		WHERE
			bck_wrk_id = #{bck_wrk_id}
	</update>
	
	<update id="updateDumpWork" parameterType="workVO">
		/**
	 	* Query ID : updateDumpWork
	 	* Description : Dump백업 update
	 	* Author : Yoon jh
	 	**/
		UPDATE T_BCK_WRKCNG_I SET
			db_id = #{db_id},
			save_pth = #{save_pth},
			file_fmt_cd = #{file_fmt_cd},
			cprt = #{cprt},
			encd_mth_nm = #{encd_mth_nm},
			usr_role_nm = #{usr_role_nm},
			file_stg_dcnt = #{file_stg_dcnt},
			bck_mtn_ecnt = #{bck_mtn_ecnt},
			lst_mdfr_id = #{lst_mdfr_id},
			lst_mdf_dtm = now(),
			bck_filenm = #{bck_filenm},
			log_file_pth = #{log_file_pth}
		WHERE
			bck_wrk_id = #{bck_wrk_id}
	</update>
	
	<select id="lastWorkId"  resultType="workVO">
		SELECT
			COALESCE(MAX(WRK_ID),0) AS wrk_id
		FROM
		T_WRKCNG_I
	</select>
	
	<select id="lastBckWorkId"  resultType="workVO">
		SELECT
			COALESCE(MAX(BCK_WRK_ID),0) AS bck_wrk_id
		FROM
		T_BCK_WRKCNG_I
	</select>
	
	<insert id="insertWorkOpt" parameterType="workOptVO">
		/**
	 	* Query ID : insertWorkOpt
	 	* Description : 백업옵션 insert
	 	* Author : Yoon jh
	 	**/
		INSERT INTO t_bckopt_i
			(
			bck_wrk_id,
			opt_sn,
			grp_cd,
			opt_cd,
			bck_opt_val,
			frst_regr_id,
			frst_reg_dtm,			
			lst_mdfr_id,
			lst_mdf_dtm
			)
		VALUES
			(
			#{bck_wrk_id},
			#{opt_sn},
			#{grp_cd},
			#{opt_cd},
			#{bck_opt_val},
			#{frst_regr_id},
			now(),
			#{frst_regr_id},
			now()
			)
	</insert>
	
	<delete id="deleteWorkOpt" parameterType="int">
		/**
	 	* Query ID : deleteWorkOpt
	 	* Description : 백업옵션 delete
	 	* Author : Yoon jh
	 	**/	
		DELETE FROM t_bckopt_i
		WHERE
			BCK_WRK_ID = #{bck_wrk_id}
	</delete>
	
	<delete id="deleteWork" parameterType="int">
		/**
	 	* Query ID : deleteWork
	 	* Description : 백업 delete
	 	* Author : Yoon jh
	 	**/	
		DELETE FROM T_WRKCNG_I
		WHERE
			wrk_id = #{wrk_id}
	</delete>
	
	<delete id="deleteBckWork" parameterType="int">
		/**
	 	* Query ID : deleteBckWork
	 	* Description : 백업 delete
	 	* Author : Yoon jh
	 	**/	
		DELETE FROM T_BCK_WRKCNG_I
		WHERE
			bck_wrk_id = #{bck_wrk_id}
	</delete>
	
	<select id="selectWorkOptList" parameterType="workVO" resultType="workOptVO">
		/**
	 	* Query ID : selectWorkOptList
	 	* Description : work Option List 조회
	 	* Author : Yoon jh
	 	**/
	 	
      SELECT 
      		BCK_WRK_ID,
			OPT_SN,
			GRP_CD,
			OPT_CD,
			(SELECT GRP_CD_NM FROM T_SYSGRP_C WHERE A.GRP_CD = GRP_CD ) AS GRP_CD_NM,
            (SELECT SYS_CD_NM FROM T_SYSDTL_C WHERE A.OPT_CD = SYS_CD ) AS OPT_CD_NM,
			BCK_OPT_VAL,
			FRST_REGR_ID,
			FRST_REG_DTM,
			LST_MDFR_ID,
			LST_MDF_DTM
      FROM T_BCKOPT_I A
      WHERE 1=1	
      	AND A.BCK_WRK_ID = #{bck_wrk_id}
      ORDER BY OPT_SN DESC
    </select>
    
    <select id="selectDbList" parameterType="workVO" resultType="dbVO">
		/**
	 	* Query ID : selectDbList
	 	* Description : DB List 조회
	 	* Author : Yoon jh
	 	**/
		SELECT
			UDB.DB_ID,
			UDB.DB_SVR_ID,
			TDB.DB_NM AS DB_NM,
			TDB.FRST_REGR_ID,
			TDB.FRST_REG_DTM,
			TDB.LST_MDFR_ID,
			TDB.LST_MDF_DTM
		FROM
			T_USRDBAUT_I UDB,
			T_DB_I TDB
		WHERE
			UDB.DB_ID = TDB.DB_ID
			AND UDB.DB_SVR_ID = #{db_svr_id}
			AND UDB.USR_ID = #{usr_id}
			AND UDB.AUT_YN = 'Y'
			AND TDB.USEYN = 'Y'
		ORDER BY UDB.DB_ID
    </select>
    
    <select id="selectDbSvrNm" parameterType="workVO" resultType="dbServerVO">
        /**
        * Query ID : selectDbSvrNm
        * Description : DB Server Name 조회
        * Author : Yoon jh
        **/
        SELECT
               A.DB_SVR_NM,
               B.IPADR,
               B.PORTNO,
               A.DFT_DB_NM,
               A.SVR_SPR_USR_ID,
               A.SVR_SPR_SCM_PWD
          FROM T_DBSVR_I A, T_DBSVRIPADR_I B
         WHERE 1=1
           AND A.DB_SVR_ID = B.DB_SVR_ID
           AND B.MASTER_GBN = 'M'
           AND A.DB_SVR_ID = #{db_svr_id}
    </select>
    
    <select id="selectWorkLogList" parameterType="workLogVO" resultType="workLogVO">
    	/**
	 	* Query ID : selectWorkLogList
	 	* Description : 백업로그 List 조회
	 	* Author : Yoon jh
	 	**/
	 	SELECT
	 		(ROW_NUMBER() OVER()) AS ROWNUM,
	 		AA.DB_SVR_ID,
            AA.IPADR,
	 		AA.EXE_SN,
	 		AA.SCD_ID,
	 		AA.SCD_NM,
	 		AA.WRK_ID,
	 		AA.WRK_NM,
	 		AA.WRK_EXP,
	 		AA.WRK_STRT_DTM,
	 		AA.WRK_END_DTM,
	 		AA.WRK_DTM,
	 		AA.EXE_RSLT_CD,
	 		AA.EXE_RSLT_CD_NM,
	 		AA.BCK_OPT_CD,
	 		AA.BCK_OPT_CD_NM,
	 		AA.TLI,
	 		AA.FILE_SZ,
	 		AA.DB_ID,
	 		AA.DB_NM,
	 		AA.BCK_FILE_PTH,
	 		AA.BCK_FILENM,
	 		AA.FRST_REGR_ID,
	 		AA.RSLT_MSG,
	 		AA.FIX_RSLTCD,
	 		AA.FIX_RSLT_MSG,
	 		AA.FRST_REG_DTM,
	 		AA.LST_MDFR_ID,
	 		AA.LST_MDF_DTM
        FROM
        (SELECT
        	B.DB_SVR_ID,
	 		B.IPADR,
	 		TWG.EXE_SN AS EXE_SN,
	 		TWG.SCD_ID AS SCD_ID,
	 		(SELECT SCD_NM FROM T_SCD_M WHERE TWG.SCD_ID = SCD_ID ) AS SCD_NM,
	 		TWG.WRK_ID AS WRK_ID,
	 		(SELECT WRK_NM FROM T_WRKCNG_I WHERE WRK_ID = TWI.WRK_ID) WRK_NM,
	 		(SELECT WRK_EXP FROM T_WRKCNG_I WHERE WRK_ID = TWI.WRK_ID) WRK_EXP,
	 		to_char(TWG.WRK_STRT_DTM,'YYYY-MM-DD HH24:MI') AS WRK_STRT_DTM,
	 		to_char(TWG.WRK_END_DTM,'YYYY-MM-DD HH24:MI') AS WRK_END_DTM,
	 		to_char(to_char(TWG.WRK_END_DTM,'YYYY-MM-DD HH24:MI')::timestamp - to_char(TWG.WRK_STRT_DTM,'YYYY-MM-DD HH24:MI')::timestamp, 'HH24:MI') AS WRK_DTM,
	 		TWG.EXE_RSLT_CD AS EXE_RSLT_CD,
	 		(SELECT SYS_CD_NM FROM T_SYSDTL_C WHERE TWG.EXE_RSLT_CD = SYS_CD ) AS EXE_RSLT_CD_NM,
	 		TWG.BCK_OPT_CD AS BCK_OPT_CD,
	 		(SELECT SYS_CD_NM FROM T_SYSDTL_C WHERE TWG.BCK_OPT_CD = SYS_CD ) AS BCK_OPT_CD_NM,
	 		TWG.TLI AS TLI,
	 		TWG.FILE_SZ AS FILE_SZ,
	 		TWG.DB_ID AS DB_ID,
	 		(SELECT DB_NM FROM T_DB_I WHERE TWG.DB_ID=DB_ID AND USEYN = 'Y') AS DB_NM,
	 		TWG.BCK_FILE_PTH AS BCK_FILE_PTH,
	 		TWG.BCK_FILENM AS BCK_FILENM,
	 		TWG.FRST_REGR_ID AS FRST_REGR_ID,
	 		TWG.RSLT_MSG AS RSLT_MSG,
	 		TWG.FIX_RSLTCD,
	 		TWG.FIX_RSLT_MSG,
	 		to_char(TWG.FRST_REG_DTM,'YYYY-MM-DD HH24:MI') AS FRST_REG_DTM,
	 		TWG.LST_MDFR_ID AS LST_MDFR_ID,
	 		to_char(TWG.LST_MDF_DTM,'YYYY-MM-DD HH24:MI') AS LST_MDF_DTM	 		
	 	FROM T_WRKEXE_G TWG, T_BCK_WRKCNG_I TWI, T_DBSVRIPADR_I B, T_WRKCNG_I C
<!-- 	 	LEFT OUTER JOIN T_BCK_WRKCNG_I TWI
         ON TWG.WRK_ID = TWI.WRK_ID
        LEFT OUTER JOIN T_DBSVRIPADR_I B       
        ON TWG.DB_SVR_IPADR_ID = B.DB_SVR_IPADR_ID
        AND B.DB_SVR_ID=#{db_svr_id}::numeric  -->
 	 	WHERE 1=1
	 		AND TWG.WRK_ID = TWI.WRK_ID
	 		AND TWG.WRK_ID = C.WRK_ID 
            AND B.DB_SVR_ID=#{db_svr_id}::numeric 
            AND TWG.DB_SVR_IPADR_ID = B.DB_SVR_IPADR_ID 
	 	<if test="wrk_id != null and wrk_id != '' ">
      		<if test='wrk_id != "0"'>
	      		AND TWG.WRK_ID=#{wrk_id}
	      	</if>
      	</if>
      	<if test="scd_id != null and scd_id != '' ">
      		<if test='scd_id != "0"'>
	      		AND TWG.SCD_ID=#{scd_id}
	      	</if>
      	</if>
      	<if test="exe_sn != null and exe_sn != '' ">
      		<if test='exe_sn != "0"'>      	
	      		AND TWG.EXE_SN=#{exe_sn}
	      	</if>
      	</if>
      	<if test="db_id != null and db_id != '' ">
      		<if test='db_id != "0"'>     
	      		AND TWG.DB_ID=#{db_id}
	      	</if>
      	</if>
      	<if test="bck_bsn_dscd != null and bck_bsn_dscd != '' ">
      		AND TWI.BCK_BSN_DSCD = #{bck_bsn_dscd}
      	</if>
      	<if test="bck_opt_cd != null and bck_opt_cd != '' ">
      		AND TWG.BCK_OPT_CD = #{bck_opt_cd}
      	</if>
      	<if test="wrk_strt_dtm != null and wrk_strt_dtm != '' ">
      		<if test="wrk_end_dtm != null and wrk_end_dtm != '' ">
      			AND (
      				TO_DATE(to_char(TWG.WRK_STRT_DTM,'YYYY-MM-DD'),'YYYY-MM-DD') BETWEEN TO_DATE(#{wrk_strt_dtm},'YYYY-MM-DD') AND TO_DATE(#{wrk_end_dtm},'YYYY-MM-DD')
      				OR
      				TO_DATE(to_char(TWG.WRK_END_DTM,'YYYY-MM-DD'),'YYYY-MM-DD') BETWEEN TO_DATE(#{wrk_strt_dtm},'YYYY-MM-DD') AND TO_DATE(#{wrk_end_dtm},'YYYY-MM-DD')
      				)
      		</if>
      	</if>
      	<if test="exe_rslt_cd != null and exe_rslt_cd != '' ">
      		AND TWG.EXE_RSLT_CD=#{exe_rslt_cd}
      	</if>  
      	<if test="wrk_nm != null and wrk_nm != '' ">
      		AND C.WRK_NM=#{wrk_nm}
      	</if>   	
      	<if test="fix_rsltcd == null and fix_rsltcd == '' ">
			AND TWG.FIX_RSLTCD LIKE '%'
		</if>
		<if test="fix_rsltcd == 'TC002003' ">
			AND (TWG.FIX_RSLTCD IS NULL  AND TWG.EXE_RSLT_CD = 'TC001702')
		</if>
		<if test="fix_rsltcd == 'TC002001' ">
			AND TWG.FIX_RSLTCD = 'TC002001'
		</if>
		<if test="fix_rsltcd == 'TC002002' ">
			AND TWG.FIX_RSLTCD = 'TC002002'
		</if>
      		ORDER BY LST_MDF_DTM DESC
      	)AA
    </select>

	<insert id="insertWorkObj" parameterType="workObjVO">
		/**
	 	* Query ID : insertWorkObj
	 	* Description : 백업 Object insert
	 	* Author : Yoon jh
	 	**/
		INSERT INTO t_bckobj_l
			(
			obj_sn,
			bck_wrk_id,
			db_id,
			scm_nm,
			obj_nm,
			frst_regr_id,
			frst_reg_dtm,
			lst_mdfr_id,
			lst_mdf_dtm
			)
		VALUES
			(
			NEXTVAL('q_bckobj_l_01'),
			#{bck_wrk_id},
			#{db_id},
			#{scm_nm},
			#{obj_nm},
			#{frst_regr_id},
			now(),
			#{frst_regr_id},
			now()
			)
	</insert>
	
	<select id="selectWorkObj" parameterType="workVO" resultType="workObjVO">
		/**
	 	* Query ID : selectWorkObj
	 	* Description : 백업 Object 조회
	 	* Author : Yoon jh
	 	**/
	 	SELECT
			obj_sn,
			db_id,
			scm_nm,
			obj_nm
		FROM t_bckobj_l	
		WHERE
			bck_wrk_id = #{bck_wrk_id}
		ORDER BY obj_sn
    </select>
	
	<delete id="deleteWorkObj" parameterType="int">
		/**
	 	* Query ID : deleteWorkObj
	 	* Description : 백업 Object delete
	 	* Author : Yoon jh
	 	**/	
		DELETE FROM t_bckobj_l
		WHERE 1=1
			AND bck_wrk_id = #{bck_wrk_id}
	</delete>
	
	
	<select id="wrk_nmCheck" resultType="int">
		/**
		* Query ID : wrk_nmCheck
		* Description : work명 중복 체크
		* Author : 변승우
		**/
		SELECT COUNT(*)
		FROM t_wrkcng_i 
		WHERE WRK_NM = #{wrk_nm}
	</select>	
	
	
	<select id="selectBckSchedule" resultType="hashMap" parameterType="int">
		/**
	 	* Query ID : selectBckSchedule
	 	* Description : 백업스케줄(주 단위) 조회
	 	* Author : 변승우
	 	**/
		SELECT
	  				A.SCD_ID
			        ,A.SCD_NM
			        ,A.SCD_EXP
			        ,A.SCD_CNDT
			        ,A.EXE_PERD_CD
			        ,A.EXE_DT
			        ,A.EXE_MONTH
			        ,A.EXE_DAY
			        , '[' || substring(A.EXE_HMS from 5 for 2) || ':' || substring(A.EXE_HMS from 3 for 2) || ']' AS EXE_HMS
	            , ARRAY_TO_STRING(ARRAY_AGG(C.BCK_BSN_DSCD),',') AS BCK_BSN_DSCD
	            , ARRAY_TO_STRING(ARRAY_AGG(C.BCK_OPT_CD),',') AS BCK_OPT_CD
	    FROM T_SCD_M A, T_SCD_D B, T_BCK_WRKCNG_I C
	    WHERE A.SCD_ID = B.SCD_ID
	    AND C.DB_SVR_ID = #{db_svr_id}
	    AND B.WRK_ID = C.WRK_ID
	    AND A.EXE_PERD_CD = 'TC001602'
	    GROUP BY A.SCD_ID, A.SCD_NM , A.SCD_EXP
	    ORDER BY EXE_HMS
	 </select>
	 
	 
	 	<select id="selectMonthBckSchedule" resultType="hashMap" parameterType="int">
		/**
	 	* Query ID : selectMonthBckSchedule
	 	* Description : 백업스케줄(주 단위) 조회
	 	* Author : 변승우
	 	**/
		SELECT
	  				A.SCD_ID
			        ,A.SCD_NM
			        ,A.SCD_EXP
			        ,A.SCD_CNDT
			        ,A.EXE_PERD_CD
			        ,A.EXE_DT
			        ,A.EXE_MONTH
			        ,A.EXE_DAY
			        , '(' || substring(A.EXE_HMS from 5 for 2) || ':' || substring(A.EXE_HMS from 3 for 2) || ')' AS EXE_HMS
	            , ARRAY_TO_STRING(ARRAY_AGG(C.BCK_BSN_DSCD),',') AS BCK_BSN_DSCD
	            , ARRAY_TO_STRING(ARRAY_AGG(C.BCK_OPT_CD),',') AS BCK_OPT_CD
	    FROM T_SCD_M A, T_SCD_D B, T_BCK_WRKCNG_I C
	    WHERE A.SCD_ID = B.SCD_ID
	    AND C.DB_SVR_ID = #{db_svr_id}
	    AND B.WRK_ID = C.WRK_ID
	    AND A.EXE_PERD_CD IN ('TC001603', 'TC001604')
	    GROUP BY A.SCD_ID, A.SCD_NM , A.SCD_EXP
	    ORDER BY EXE_HMS
	 </select>
	 
	 
	 <select id="selectWorkOptionLayer" resultType="hashMap" parameterType="int">
		/**
	 	* Query ID : selectWorkOptionLayer
	 	* Description : 백업 덤프 옵션 조회
	 	* Author : 변승우
	 	**/
	 	SELECT 
      		BCK_WRK_ID,
			OPT_SN,
			GRP_CD,
			OPT_CD,
			(SELECT GRP_CD_NM FROM T_SYSGRP_C WHERE A.GRP_CD = GRP_CD ) AS GRP_CD_NM,
            (SELECT SYS_CD_NM FROM T_SYSDTL_C WHERE A.OPT_CD = SYS_CD ) AS OPT_CD_NM,
			BCK_OPT_VAL,
			FRST_REGR_ID,
			FRST_REG_DTM,
			LST_MDFR_ID,
			LST_MDF_DTM
      FROM T_BCKOPT_I A
      WHERE 1=1	
      AND A.BCK_WRK_ID = #{bck_wrk_id}
	 </select>
	 
	 
	 <select id="selectWorkObjectLayer" parameterType="workVO" resultType="workObjVO">
		/**
	 	* Query ID : selectWorkObjectLayer
	 	* Description : 백업 Object 조회
	 	* Author : 변승우
	 	**/
	 	SELECT
			obj_sn,
			db_id,
			scm_nm,
			obj_nm
		FROM t_bckobj_l	
		WHERE
			bck_wrk_id = #{bck_wrk_id}
		ORDER BY obj_sn
    </select>
    
	 <select id="selectMonthBckScheduleSearch" parameterType="hashmap" resultType="hashmap">
		/**
	 	* Query ID : selectMonthBckScheduleSearch
	 	* Description : 백업 월별 조회
	 	* Author : 박태혁
	 	**/
		<![CDATA[
			SELECT 
            	scd_id
                , scd_nm
                , scd_exp
                , scd_cndt
                , exe_perd_cd
                , exe_month
                , exe_day
                , substring(exe_hms from 5 for 2) || ':' || substring(exe_hms from 3 for 2) AS exe_hms
                , exe_dt
                , TO_CHAR(frst_reg_dtm::TIMESTAMP,'yyyyMMdd')as frst_reg_dtm
            FROM
            	T_SCD_M
            WHERE SCD_ID IN (
                SELECT 
                	SCD_ID 
                FROM T_SCD_D
                WHERE wrk_id in (
		                SELECT 
		                	wrk_id 
		                FROM T_BCK_WRKCNG_I
		                WHERE db_svr_id = ${db_svr_id}
		                GROUP BY wrk_id
                    )
              )

		]]>
    </select>
  
  
  	<select id="selectScheduleCheckCnt" resultType="int">
		/**
		* Query ID : selectScheduleCheckCnt
		* Description : 스케줄 갯수조회 (WORK삭제시)
		* Author : 변승우
		**/
		SELECT 
				 COUNT(*)
		FROM T_SCD_D
		WHERE WRK_ID IN
      <foreach item="item" index="index" collection="work_id" open="(" separator="," close=")"> 
				 #{item}::numeric
	   </foreach>
  	</select>
  	
  	
  	
  	
	<select id="selectBckInfo" resultType="hashMap" parameterType="int">
		/**
	 	* Query ID : selectBckInfo
	 	* Description : 백업 정보 조회
	 	* Author : 변승우
	 	**/
	 	SELECT 
					 A.DB_SVR_ID
					, A.DB_ID
					, (CASE WHEN DB_ID>0 THEN (SELECT DB_NM FROM T_DB_I WHERE A.DB_ID=DB_ID AND USEYN = 'Y') ELSE '' END) AS DB_NM
					, A.BCK_BSN_DSCD
					, (SELECT SYS_CD_NM FROM T_SYSDTL_C WHERE A.BCK_BSN_DSCD = SYS_CD ) AS BCK_BSN_DSCD_NM
					, B.WRK_ID
					, B.WRK_NM
					, B.WRK_EXP
					, A.BCK_OPT_CD
					, (SELECT SYS_CD_NM FROM T_SYSDTL_C WHERE A.BCK_OPT_CD = SYS_CD ) AS BCK_OPT_CD_NM
					, A.BCK_MTN_ECNT
					, A.CPS_YN
					, A.LOG_FILE_BCK_YN
					, A.LOG_FILE_STG_DCNT
					, A.LOG_FILE_MTN_ECNT
					, A.CPRT
					, A.SAVE_PTH
					, A.FILE_FMT_CD
					, (SELECT SYS_CD_NM FROM T_SYSDTL_C WHERE A.FILE_FMT_CD = SYS_CD ) AS FILE_FMT_CD_NM
					, A.FILE_STG_DCNT
					, A.ENCD_MTH_NM
					, (SELECT SYS_CD_NM FROM T_SYSDTL_C WHERE A.ENCD_MTH_NM = SYS_CD ) AS INCD
					, A.USR_ROLE_NM
					, A.DATA_PTH
					, A.BCK_PTH
					, A.ACV_FILE_STGDT
					, A.ACV_FILE_MTNCNT
					, A.BCK_FILENM
					, A.LOG_FILE_PTH
					, A.EXE_CMD
					, B.BSN_DSCD
					, (SELECT DB_SVR_IPADR_ID FROM T_DBSVRIPADR_I WHERE A.DB_SVR_ID = DB_SVR_ID AND master_gbn = 'M') AS DB_SVR_IPADR_ID
		FROM T_BCK_WRKCNG_I A, T_WRKCNG_I B
		WHERE A.WRK_ID = B.WRK_ID
	 	AND A.WRK_ID = #{wrk_id}
	</select>
</mapper>
